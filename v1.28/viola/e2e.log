  I0514 03:38:25.157819      23 e2e.go:117] Starting e2e run "d67b12ce-b209-4ec2-980e-6b4cf5e11100" on Ginkgo node 1
  May 14 03:38:25.182: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1715657905 - will randomize all specs

Will run 380 of 7389 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  May 14 03:38:25.319: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 03:38:25.321: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  May 14 03:38:25.380: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  May 14 03:38:25.386: INFO: 8 / 8 pods ready in namespace 'kube-system' in daemonset 'cilium' (0 seconds elapsed)
  May 14 03:38:25.386: INFO: 8 / 8 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  May 14 03:38:25.386: INFO: e2e test version: v1.28.5
  May 14 03:38:25.387: INFO: kube-apiserver version: v1.28.5
  May 14 03:38:25.387: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 03:38:25.391: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.073 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 05/14/24 03:38:25.58
  May 14 03:38:25.580: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename conformance-tests @ 05/14/24 03:38:25.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:38:25.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:38:25.606
  STEP: Getting node addresses @ 05/14/24 03:38:25.608
  May 14 03:38:25.608: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  May 14 03:38:25.616: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-8010" for this suite. @ 05/14/24 03:38:25.621
• [0.047 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]
test/e2e/apimachinery/resource_quota.go:395
  STEP: Creating a kubernetes client @ 05/14/24 03:38:25.627
  May 14 03:38:25.627: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename resourcequota @ 05/14/24 03:38:25.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:38:25.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:38:25.658
  STEP: Counting existing ResourceQuota @ 05/14/24 03:38:25.661
  STEP: Creating a ResourceQuota @ 05/14/24 03:38:30.665
  STEP: Ensuring resource quota status is calculated @ 05/14/24 03:38:30.673
  STEP: Creating a ReplicationController @ 05/14/24 03:38:32.679
  STEP: Ensuring resource quota status captures replication controller creation @ 05/14/24 03:38:32.7
  STEP: Deleting a ReplicationController @ 05/14/24 03:38:34.707
  STEP: Ensuring resource quota status released usage @ 05/14/24 03:38:34.717
  May 14 03:38:36.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7865" for this suite. @ 05/14/24 03:38:36.729
• [11.111 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:157
  STEP: Creating a kubernetes client @ 05/14/24 03:38:36.738
  May 14 03:38:36.738: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename emptydir @ 05/14/24 03:38:36.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:38:36.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:38:36.763
  STEP: Creating a pod to test emptydir volume type on node default medium @ 05/14/24 03:38:36.765
  STEP: Saw pod success @ 05/14/24 03:38:40.793
  May 14 03:38:40.796: INFO: Trying to get logs from node viola-paas-worker03 pod pod-dba545b7-a67f-4f72-864b-083748dd5962 container test-container: <nil>
  STEP: delete the pod @ 05/14/24 03:38:40.81
  May 14 03:38:40.834: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9780" for this suite. @ 05/14/24 03:38:40.84
• [4.114 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 05/14/24 03:38:40.852
  May 14 03:38:40.852: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename containers @ 05/14/24 03:38:40.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:38:40.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:38:40.889
  STEP: Creating a pod to test override command @ 05/14/24 03:38:40.892
  STEP: Saw pod success @ 05/14/24 03:38:44.915
  May 14 03:38:44.919: INFO: Trying to get logs from node viola-paas-worker03 pod client-containers-02516d01-6381-48e3-9b67-1291e3c0daef container agnhost-container: <nil>
  STEP: delete the pod @ 05/14/24 03:38:44.925
  May 14 03:38:44.946: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5318" for this suite. @ 05/14/24 03:38:44.952
• [4.113 seconds]
------------------------------
S
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 05/14/24 03:38:44.965
  May 14 03:38:44.965: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename kubelet-test @ 05/14/24 03:38:44.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:38:44.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:38:44.986
  May 14 03:38:47.019: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3811" for this suite. @ 05/14/24 03:38:47.024
• [2.065 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 05/14/24 03:38:47.031
  May 14 03:38:47.031: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename projected @ 05/14/24 03:38:47.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:38:47.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:38:47.06
  STEP: Creating configMap with name projected-configmap-test-volume-1aa0f552-b2c7-4d29-9071-af6b0ba8727e @ 05/14/24 03:38:47.063
  STEP: Creating a pod to test consume configMaps @ 05/14/24 03:38:47.07
  STEP: Saw pod success @ 05/14/24 03:38:51.099
  May 14 03:38:51.102: INFO: Trying to get logs from node viola-paas-worker03 pod pod-projected-configmaps-11d7e2f4-d0e3-42b1-b08b-b16e0d6ff8e5 container agnhost-container: <nil>
  STEP: delete the pod @ 05/14/24 03:38:51.109
  May 14 03:38:51.139: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3965" for this suite. @ 05/14/24 03:38:51.146
• [4.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 05/14/24 03:38:51.154
  May 14 03:38:51.154: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename downward-api @ 05/14/24 03:38:51.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:38:51.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:38:51.191
  STEP: Creating a pod to test downward API volume plugin @ 05/14/24 03:38:51.194
  STEP: Saw pod success @ 05/14/24 03:38:55.226
  May 14 03:38:55.229: INFO: Trying to get logs from node viola-paas-worker03 pod downwardapi-volume-05af23db-f9f9-47ed-9eeb-2fd5f885f55e container client-container: <nil>
  STEP: delete the pod @ 05/14/24 03:38:55.235
  May 14 03:38:55.263: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5705" for this suite. @ 05/14/24 03:38:55.274
• [4.132 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 05/14/24 03:38:55.286
  May 14 03:38:55.286: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename projected @ 05/14/24 03:38:55.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:38:55.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:38:55.328
  STEP: Creating configMap with name configmap-projected-all-test-volume-d994dd3a-ee96-4e7d-a61d-efde59bde9bc @ 05/14/24 03:38:55.331
  STEP: Creating secret with name secret-projected-all-test-volume-0c8dab78-fa40-41a8-b604-2b167ce90e13 @ 05/14/24 03:38:55.336
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 05/14/24 03:38:55.342
  STEP: Saw pod success @ 05/14/24 03:38:59.365
  May 14 03:38:59.368: INFO: Trying to get logs from node viola-paas-worker03 pod projected-volume-3ffd89ed-d55f-4568-b245-c90e6e2ac019 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 05/14/24 03:38:59.375
  May 14 03:38:59.403: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4260" for this suite. @ 05/14/24 03:38:59.408
• [4.129 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 05/14/24 03:38:59.415
  May 14 03:38:59.415: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename events @ 05/14/24 03:38:59.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:38:59.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:38:59.447
  STEP: Create set of events @ 05/14/24 03:38:59.45
  STEP: get a list of Events with a label in the current namespace @ 05/14/24 03:38:59.47
  STEP: delete a list of events @ 05/14/24 03:38:59.473
  May 14 03:38:59.473: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/14/24 03:38:59.493
  May 14 03:38:59.499: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4186" for this suite. @ 05/14/24 03:38:59.504
• [0.100 seconds]
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 05/14/24 03:38:59.515
  May 14 03:38:59.515: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename secrets @ 05/14/24 03:38:59.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:38:59.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:38:59.549
  STEP: Creating secret with name s-test-opt-del-ff7fbf84-76f1-4bc8-ab88-5fcbb092c31f @ 05/14/24 03:38:59.555
  STEP: Creating secret with name s-test-opt-upd-e4f80089-1186-473e-a0ee-5598eb7a5070 @ 05/14/24 03:38:59.563
  STEP: Creating the pod @ 05/14/24 03:38:59.567
  STEP: Deleting secret s-test-opt-del-ff7fbf84-76f1-4bc8-ab88-5fcbb092c31f @ 05/14/24 03:39:01.611
  STEP: Updating secret s-test-opt-upd-e4f80089-1186-473e-a0ee-5598eb7a5070 @ 05/14/24 03:39:01.619
  STEP: Creating secret with name s-test-opt-create-5282356c-1624-4547-a527-15ea2583ef85 @ 05/14/24 03:39:01.629
  STEP: waiting to observe update in volume @ 05/14/24 03:39:01.635
  May 14 03:39:05.670: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1331" for this suite. @ 05/14/24 03:39:05.675
• [6.171 seconds]
------------------------------
SSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 05/14/24 03:39:05.686
  May 14 03:39:05.686: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/14/24 03:39:05.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:39:05.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:39:05.719
  STEP: Creating two CSIDrivers @ 05/14/24 03:39:05.725
  STEP: Getting "inline-driver-673acea0-5fb7-4663-8114-7d59ae7c6fec" & "inline-driver-8e962897-8c9a-486f-80ac-b68899bb6fda" @ 05/14/24 03:39:05.749
  STEP: Patching the CSIDriver "inline-driver-8e962897-8c9a-486f-80ac-b68899bb6fda" @ 05/14/24 03:39:05.755
  STEP: Updating the CSIDriver "inline-driver-8e962897-8c9a-486f-80ac-b68899bb6fda" @ 05/14/24 03:39:05.762
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-5310" @ 05/14/24 03:39:05.773
  STEP: Deleting CSIDriver "inline-driver-673acea0-5fb7-4663-8114-7d59ae7c6fec" @ 05/14/24 03:39:05.776
  STEP: Confirm deletion of CSIDriver "inline-driver-673acea0-5fb7-4663-8114-7d59ae7c6fec" @ 05/14/24 03:39:05.785
  STEP: Deleting CSIDriver "inline-driver-8e962897-8c9a-486f-80ac-b68899bb6fda" via DeleteCollection @ 05/14/24 03:39:05.787
  STEP: Confirm deletion of CSIDriver "inline-driver-8e962897-8c9a-486f-80ac-b68899bb6fda" @ 05/14/24 03:39:05.795
  May 14 03:39:05.798: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-5310" for this suite. @ 05/14/24 03:39:05.802
• [0.127 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 05/14/24 03:39:05.813
  May 14 03:39:05.813: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename field-validation @ 05/14/24 03:39:05.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:39:05.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:39:05.889
  STEP: apply creating a deployment @ 05/14/24 03:39:05.891
  May 14 03:39:05.892: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5202" for this suite. @ 05/14/24 03:39:05.907
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 05/14/24 03:39:05.913
  May 14 03:39:05.913: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename hostport @ 05/14/24 03:39:05.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:39:05.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:39:05.939
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 05/14/24 03:39:05.95
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.10.50.165 on the node which pod1 resides and expect scheduled @ 05/14/24 03:39:09.976
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.10.50.165 but use UDP protocol on the node which pod2 resides @ 05/14/24 03:39:11.997
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 05/14/24 03:39:16.165
  May 14 03:39:16.165: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.10.50.165 http://127.0.0.1:54323/hostname] Namespace:hostport-6010 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 03:39:16.165: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 03:39:16.166: INFO: ExecWithOptions: Clientset creation
  May 14 03:39:16.166: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-6010/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.10.50.165+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.10.50.165, port: 54323 @ 05/14/24 03:39:16.226
  May 14 03:39:16.226: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.10.50.165:54323/hostname] Namespace:hostport-6010 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 03:39:16.226: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 03:39:16.227: INFO: ExecWithOptions: Clientset creation
  May 14 03:39:16.227: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-6010/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.10.50.165%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.10.50.165, port: 54323 UDP @ 05/14/24 03:39:16.276
  May 14 03:39:16.276: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.10.50.165 54323] Namespace:hostport-6010 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 03:39:16.276: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 03:39:16.276: INFO: ExecWithOptions: Clientset creation
  May 14 03:39:16.276: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-6010/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.10.50.165+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  May 14 03:39:21.324: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-6010" for this suite. @ 05/14/24 03:39:21.332
• [15.433 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 05/14/24 03:39:21.346
  May 14 03:39:21.346: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename projected @ 05/14/24 03:39:21.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:39:21.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:39:21.379
  STEP: Creating configMap with name projected-configmap-test-volume-map-3cd524e0-9718-4a3d-b79b-611745c78163 @ 05/14/24 03:39:21.382
  STEP: Creating a pod to test consume configMaps @ 05/14/24 03:39:21.391
  STEP: Saw pod success @ 05/14/24 03:39:25.415
  May 14 03:39:25.418: INFO: Trying to get logs from node viola-paas-worker03 pod pod-projected-configmaps-fce5320d-37f4-44bb-9fdd-0063d35885ad container agnhost-container: <nil>
  STEP: delete the pod @ 05/14/24 03:39:25.424
  May 14 03:39:25.447: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8868" for this suite. @ 05/14/24 03:39:25.452
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 05/14/24 03:39:25.458
  May 14 03:39:25.458: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename proxy @ 05/14/24 03:39:25.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:39:25.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:39:25.49
  May 14 03:39:25.492: INFO: Creating pod...
  May 14 03:39:27.513: INFO: Creating service...
  May 14 03:39:27.525: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7227/pods/agnhost/proxy?method=DELETE
  May 14 03:39:27.529: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  May 14 03:39:27.529: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7227/pods/agnhost/proxy?method=OPTIONS
  May 14 03:39:27.538: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  May 14 03:39:27.538: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7227/pods/agnhost/proxy?method=PATCH
  May 14 03:39:27.543: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  May 14 03:39:27.543: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7227/pods/agnhost/proxy?method=POST
  May 14 03:39:27.547: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  May 14 03:39:27.547: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7227/pods/agnhost/proxy?method=PUT
  May 14 03:39:27.550: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  May 14 03:39:27.550: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7227/services/e2e-proxy-test-service/proxy?method=DELETE
  May 14 03:39:27.555: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  May 14 03:39:27.555: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7227/services/e2e-proxy-test-service/proxy?method=OPTIONS
  May 14 03:39:27.560: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  May 14 03:39:27.560: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7227/services/e2e-proxy-test-service/proxy?method=PATCH
  May 14 03:39:27.564: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  May 14 03:39:27.564: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7227/services/e2e-proxy-test-service/proxy?method=POST
  May 14 03:39:27.569: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  May 14 03:39:27.569: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7227/services/e2e-proxy-test-service/proxy?method=PUT
  May 14 03:39:27.573: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  May 14 03:39:27.573: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7227/pods/agnhost/proxy?method=GET
  May 14 03:39:27.575: INFO: http.Client request:GET StatusCode:301
  May 14 03:39:27.575: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7227/services/e2e-proxy-test-service/proxy?method=GET
  May 14 03:39:27.579: INFO: http.Client request:GET StatusCode:301
  May 14 03:39:27.579: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7227/pods/agnhost/proxy?method=HEAD
  May 14 03:39:27.582: INFO: http.Client request:HEAD StatusCode:301
  May 14 03:39:27.582: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7227/services/e2e-proxy-test-service/proxy?method=HEAD
  May 14 03:39:27.588: INFO: http.Client request:HEAD StatusCode:301
  May 14 03:39:27.588: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7227" for this suite. @ 05/14/24 03:39:27.593
• [2.142 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 05/14/24 03:39:27.601
  May 14 03:39:27.601: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename projected @ 05/14/24 03:39:27.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:39:27.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:39:27.632
  STEP: Creating configMap with name cm-test-opt-del-ec0954cb-aac8-4b22-b0d6-606c0443b8bd @ 05/14/24 03:39:27.639
  STEP: Creating configMap with name cm-test-opt-upd-94869be0-3dbc-4813-b7ab-614d26698a52 @ 05/14/24 03:39:27.649
  STEP: Creating the pod @ 05/14/24 03:39:27.655
  STEP: Deleting configmap cm-test-opt-del-ec0954cb-aac8-4b22-b0d6-606c0443b8bd @ 05/14/24 03:39:29.709
  STEP: Updating configmap cm-test-opt-upd-94869be0-3dbc-4813-b7ab-614d26698a52 @ 05/14/24 03:39:29.718
  STEP: Creating configMap with name cm-test-opt-create-c126f97e-4b2a-4561-a264-ff616ab2da46 @ 05/14/24 03:39:29.724
  STEP: waiting to observe update in volume @ 05/14/24 03:39:29.733
  May 14 03:40:56.598: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7993" for this suite. @ 05/14/24 03:40:56.604
• [89.020 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 05/14/24 03:40:56.622
  May 14 03:40:56.622: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename proxy @ 05/14/24 03:40:56.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:40:56.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:40:56.685
  May 14 03:40:56.688: INFO: Creating pod...
  May 14 03:40:58.716: INFO: Creating service...
  May 14 03:40:58.733: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8064/pods/agnhost/proxy/some/path/with/DELETE
  May 14 03:40:58.738: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  May 14 03:40:58.738: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8064/pods/agnhost/proxy/some/path/with/GET
  May 14 03:40:58.746: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  May 14 03:40:58.746: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8064/pods/agnhost/proxy/some/path/with/HEAD
  May 14 03:40:58.750: INFO: http.Client request:HEAD | StatusCode:200
  May 14 03:40:58.750: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8064/pods/agnhost/proxy/some/path/with/OPTIONS
  May 14 03:40:58.753: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  May 14 03:40:58.753: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8064/pods/agnhost/proxy/some/path/with/PATCH
  May 14 03:40:58.756: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  May 14 03:40:58.756: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8064/pods/agnhost/proxy/some/path/with/POST
  May 14 03:40:58.760: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  May 14 03:40:58.760: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8064/pods/agnhost/proxy/some/path/with/PUT
  May 14 03:40:58.762: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  May 14 03:40:58.762: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8064/services/test-service/proxy/some/path/with/DELETE
  May 14 03:40:58.766: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  May 14 03:40:58.766: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8064/services/test-service/proxy/some/path/with/GET
  May 14 03:40:58.774: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  May 14 03:40:58.774: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8064/services/test-service/proxy/some/path/with/HEAD
  May 14 03:40:58.778: INFO: http.Client request:HEAD | StatusCode:200
  May 14 03:40:58.778: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8064/services/test-service/proxy/some/path/with/OPTIONS
  May 14 03:40:58.783: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  May 14 03:40:58.783: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8064/services/test-service/proxy/some/path/with/PATCH
  May 14 03:40:58.789: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  May 14 03:40:58.789: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8064/services/test-service/proxy/some/path/with/POST
  May 14 03:40:58.799: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  May 14 03:40:58.799: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8064/services/test-service/proxy/some/path/with/PUT
  May 14 03:40:58.806: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  May 14 03:40:58.806: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8064" for this suite. @ 05/14/24 03:40:58.814
• [2.202 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
test/e2e/apps/statefulset.go:640
  STEP: Creating a kubernetes client @ 05/14/24 03:40:58.825
  May 14 03:40:58.825: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename statefulset @ 05/14/24 03:40:58.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:40:58.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:40:58.861
  STEP: Creating service test in namespace statefulset-6043 @ 05/14/24 03:40:58.864
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 05/14/24 03:40:58.871
  STEP: Creating stateful set ss in namespace statefulset-6043 @ 05/14/24 03:40:58.875
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6043 @ 05/14/24 03:40:58.889
  May 14 03:40:58.893: INFO: Found 0 stateful pods, waiting for 1
  May 14 03:41:08.902: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 05/14/24 03:41:08.902
  May 14 03:41:08.905: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=statefulset-6043 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 14 03:41:09.052: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 14 03:41:09.052: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 14 03:41:09.052: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 14 03:41:09.057: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  May 14 03:41:19.064: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  May 14 03:41:19.064: INFO: Waiting for statefulset status.readyReplicas updated to 0
  May 14 03:41:19.085: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999737s
  May 14 03:41:20.091: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.995650984s
  May 14 03:41:21.096: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.9901312s
  May 14 03:41:22.103: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.984371201s
  May 14 03:41:23.109: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.978236413s
  May 14 03:41:24.160: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.972301551s
  May 14 03:41:25.166: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.92051082s
  May 14 03:41:26.171: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.914940831s
  May 14 03:41:27.176: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.910204018s
  May 14 03:41:28.180: INFO: Verifying statefulset ss doesn't scale past 1 for another 904.558204ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6043 @ 05/14/24 03:41:29.181
  May 14 03:41:29.186: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=statefulset-6043 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 14 03:41:29.297: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 14 03:41:29.297: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 14 03:41:29.297: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 14 03:41:29.301: INFO: Found 1 stateful pods, waiting for 3
  May 14 03:41:39.312: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  May 14 03:41:39.312: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  May 14 03:41:39.312: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 05/14/24 03:41:39.312
  STEP: Scale down will halt with unhealthy stateful pod @ 05/14/24 03:41:39.312
  May 14 03:41:39.318: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=statefulset-6043 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 14 03:41:39.428: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 14 03:41:39.428: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 14 03:41:39.428: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 14 03:41:39.428: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=statefulset-6043 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 14 03:41:39.539: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 14 03:41:39.539: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 14 03:41:39.539: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 14 03:41:39.539: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=statefulset-6043 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 14 03:41:39.657: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 14 03:41:39.657: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 14 03:41:39.657: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 14 03:41:39.657: INFO: Waiting for statefulset status.readyReplicas updated to 0
  May 14 03:41:39.664: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  May 14 03:41:49.680: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  May 14 03:41:49.680: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  May 14 03:41:49.680: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  May 14 03:41:49.701: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999508s
  May 14 03:41:50.710: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.995898739s
  May 14 03:41:51.930: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.986276751s
  May 14 03:41:52.936: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.767054116s
  May 14 03:41:53.941: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.761225753s
  May 14 03:41:54.947: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.75601369s
  May 14 03:41:55.952: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.750493944s
  May 14 03:41:56.959: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.74536562s
  May 14 03:41:57.964: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.738644101s
  May 14 03:41:58.970: INFO: Verifying statefulset ss doesn't scale past 3 for another 732.815314ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6043 @ 05/14/24 03:41:59.971
  May 14 03:41:59.976: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=statefulset-6043 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 14 03:42:00.078: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 14 03:42:00.078: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 14 03:42:00.078: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 14 03:42:00.078: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=statefulset-6043 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 14 03:42:00.178: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 14 03:42:00.178: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 14 03:42:00.178: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 14 03:42:00.178: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=statefulset-6043 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 14 03:42:00.294: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 14 03:42:00.294: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 14 03:42:00.294: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 14 03:42:00.294: INFO: Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 05/14/24 03:42:10.317
  May 14 03:42:10.317: INFO: Deleting all statefulset in ns statefulset-6043
  May 14 03:42:10.320: INFO: Scaling statefulset ss to 0
  May 14 03:42:10.332: INFO: Waiting for statefulset status.replicas updated to 0
  May 14 03:42:10.334: INFO: Deleting statefulset ss
  May 14 03:42:10.353: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6043" for this suite. @ 05/14/24 03:42:10.359
• [71.542 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]
test/e2e/apimachinery/resource_quota.go:161
  STEP: Creating a kubernetes client @ 05/14/24 03:42:10.367
  May 14 03:42:10.367: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename resourcequota @ 05/14/24 03:42:10.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:42:10.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:42:10.399
  STEP: Discovering how many secrets are in namespace by default @ 05/14/24 03:42:10.402
  STEP: Counting existing ResourceQuota @ 05/14/24 03:42:15.406
  STEP: Creating a ResourceQuota @ 05/14/24 03:42:20.412
  STEP: Ensuring resource quota status is calculated @ 05/14/24 03:42:20.426
  STEP: Creating a Secret @ 05/14/24 03:42:22.431
  STEP: Ensuring resource quota status captures secret creation @ 05/14/24 03:42:22.45
  STEP: Deleting a secret @ 05/14/24 03:42:24.456
  STEP: Ensuring resource quota status released usage @ 05/14/24 03:42:24.463
  May 14 03:42:26.469: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8937" for this suite. @ 05/14/24 03:42:26.476
• [16.120 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
test/e2e/apps/job.go:370
  STEP: Creating a kubernetes client @ 05/14/24 03:42:26.488
  May 14 03:42:26.488: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename job @ 05/14/24 03:42:26.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:42:26.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:42:26.515
  STEP: Creating Indexed job @ 05/14/24 03:42:26.518
  STEP: Ensuring job reaches completions @ 05/14/24 03:42:26.524
  STEP: Ensuring pods with index for job exist @ 05/14/24 03:42:34.531
  May 14 03:42:34.536: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5565" for this suite. @ 05/14/24 03:42:34.542
• [8.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 05/14/24 03:42:34.555
  May 14 03:42:34.555: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename certificates @ 05/14/24 03:42:34.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:42:34.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:42:34.586
  STEP: getting /apis @ 05/14/24 03:42:34.875
  STEP: getting /apis/certificates.k8s.io @ 05/14/24 03:42:34.883
  STEP: getting /apis/certificates.k8s.io/v1 @ 05/14/24 03:42:34.884
  STEP: creating @ 05/14/24 03:42:34.886
  STEP: getting @ 05/14/24 03:42:34.909
  STEP: listing @ 05/14/24 03:42:34.912
  STEP: watching @ 05/14/24 03:42:34.916
  May 14 03:42:34.916: INFO: starting watch
  STEP: patching @ 05/14/24 03:42:34.917
  STEP: updating @ 05/14/24 03:42:34.929
  May 14 03:42:34.936: INFO: waiting for watch events with expected annotations
  May 14 03:42:34.936: INFO: saw patched and updated annotations
  STEP: getting /approval @ 05/14/24 03:42:34.936
  STEP: patching /approval @ 05/14/24 03:42:34.94
  STEP: updating /approval @ 05/14/24 03:42:34.953
  STEP: getting /status @ 05/14/24 03:42:34.962
  STEP: patching /status @ 05/14/24 03:42:34.965
  STEP: updating /status @ 05/14/24 03:42:34.978
  STEP: deleting @ 05/14/24 03:42:34.991
  STEP: deleting a collection @ 05/14/24 03:42:35.003
  May 14 03:42:35.027: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-9820" for this suite. @ 05/14/24 03:42:35.033
• [0.490 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 05/14/24 03:42:35.045
  May 14 03:42:35.045: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename sched-preemption @ 05/14/24 03:42:35.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:42:35.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:42:35.068
  May 14 03:42:35.088: INFO: Waiting up to 1m0s for all nodes to be ready
  May 14 03:43:35.171: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/14/24 03:43:35.175
  May 14 03:43:35.175: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/14/24 03:43:35.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:43:35.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:43:35.212
  May 14 03:43:35.230: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  May 14 03:43:35.233: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  May 14 03:43:35.254: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May 14 03:43:35.270: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3177" for this suite. @ 05/14/24 03:43:35.406
  STEP: Destroying namespace "sched-preemption-8448" for this suite. @ 05/14/24 03:43:35.415
• [60.378 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 05/14/24 03:43:35.424
  May 14 03:43:35.424: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename services @ 05/14/24 03:43:35.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:43:35.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:43:35.454
  STEP: creating service nodeport-test with type=NodePort in namespace services-4918 @ 05/14/24 03:43:35.458
  STEP: creating replication controller nodeport-test in namespace services-4918 @ 05/14/24 03:43:35.481
  I0514 03:43:35.490855      23 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-4918, replica count: 2
  I0514 03:43:38.542209      23 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 14 03:43:38.542: INFO: Creating new exec pod
  May 14 03:43:41.577: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-4918 exec execpodfb58l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  May 14 03:43:41.697: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  May 14 03:43:41.697: INFO: stdout: ""
  May 14 03:43:42.697: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-4918 exec execpodfb58l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  May 14 03:43:42.806: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  May 14 03:43:42.806: INFO: stdout: "nodeport-test-gqchn"
  May 14 03:43:42.806: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-4918 exec execpodfb58l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.16.59 80'
  May 14 03:43:42.916: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.16.59 80\nConnection to 10.233.16.59 80 port [tcp/http] succeeded!\n"
  May 14 03:43:42.916: INFO: stdout: "nodeport-test-j8vtk"
  May 14 03:43:42.916: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-4918 exec execpodfb58l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.10.50.241 31775'
  May 14 03:43:43.022: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.10.50.241 31775\nConnection to 172.10.50.241 31775 port [tcp/*] succeeded!\n"
  May 14 03:43:43.022: INFO: stdout: "nodeport-test-gqchn"
  May 14 03:43:43.022: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-4918 exec execpodfb58l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.10.50.165 31775'
  May 14 03:43:43.137: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.10.50.165 31775\nConnection to 172.10.50.165 31775 port [tcp/*] succeeded!\n"
  May 14 03:43:43.137: INFO: stdout: "nodeport-test-gqchn"
  May 14 03:43:43.137: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4918" for this suite. @ 05/14/24 03:43:43.197
• [7.794 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:479
  STEP: Creating a kubernetes client @ 05/14/24 03:43:43.219
  May 14 03:43:43.219: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename gc @ 05/14/24 03:43:43.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:43:43.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:43:43.279
  STEP: create the deployment @ 05/14/24 03:43:43.282
  W0514 03:43:43.289529      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/14/24 03:43:43.289
  STEP: delete the deployment @ 05/14/24 03:43:43.8
  STEP: wait for all rs to be garbage collected @ 05/14/24 03:43:43.808
  STEP: expected 0 rs, got 1 rs @ 05/14/24 03:43:43.815
  STEP: expected 0 pods, got 2 pods @ 05/14/24 03:43:43.82
  STEP: Gathering metrics @ 05/14/24 03:43:44.331
  May 14 03:43:44.421: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May 14 03:43:44.422: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-692" for this suite. @ 05/14/24 03:43:44.427
• [1.217 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]
test/e2e/network/ingressclass.go:266
  STEP: Creating a kubernetes client @ 05/14/24 03:43:44.436
  May 14 03:43:44.436: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename ingressclass @ 05/14/24 03:43:44.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:43:44.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:43:44.463
  STEP: getting /apis @ 05/14/24 03:43:44.465
  STEP: getting /apis/networking.k8s.io @ 05/14/24 03:43:44.47
  STEP: getting /apis/networking.k8s.iov1 @ 05/14/24 03:43:44.471
  STEP: creating @ 05/14/24 03:43:44.472
  STEP: getting @ 05/14/24 03:43:44.494
  STEP: listing @ 05/14/24 03:43:44.498
  STEP: watching @ 05/14/24 03:43:44.501
  May 14 03:43:44.501: INFO: starting watch
  STEP: patching @ 05/14/24 03:43:44.502
  STEP: updating @ 05/14/24 03:43:44.508
  May 14 03:43:44.514: INFO: waiting for watch events with expected annotations
  May 14 03:43:44.514: INFO: saw patched and updated annotations
  STEP: deleting @ 05/14/24 03:43:44.514
  STEP: deleting a collection @ 05/14/24 03:43:44.524
  May 14 03:43:44.543: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-7848" for this suite. @ 05/14/24 03:43:44.547
• [0.117 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]
test/e2e/apps/replica_set.go:131
  STEP: Creating a kubernetes client @ 05/14/24 03:43:44.554
  May 14 03:43:44.554: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename replicaset @ 05/14/24 03:43:44.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:43:44.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:43:44.582
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 05/14/24 03:43:44.584
  STEP: When a replicaset with a matching selector is created @ 05/14/24 03:43:46.61
  STEP: Then the orphan pod is adopted @ 05/14/24 03:43:46.624
  STEP: When the matched label of one of its pods change @ 05/14/24 03:43:47.633
  May 14 03:43:47.636: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/14/24 03:43:47.652
  May 14 03:43:48.659: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1179" for this suite. @ 05/14/24 03:43:48.664
• [4.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 05/14/24 03:43:48.675
  May 14 03:43:48.675: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename pods @ 05/14/24 03:43:48.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:43:48.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:43:48.704
  STEP: Create set of pods @ 05/14/24 03:43:48.709
  May 14 03:43:48.736: INFO: created test-pod-1
  May 14 03:43:48.756: INFO: created test-pod-2
  May 14 03:43:48.771: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 05/14/24 03:43:48.771
  STEP: waiting for all pods to be deleted @ 05/14/24 03:43:50.867
  May 14 03:43:50.871: INFO: Pod quantity 3 is different from expected quantity 0
  May 14 03:43:52.089: INFO: Pod quantity 3 is different from expected quantity 0
  May 14 03:43:52.877: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1844" for this suite. @ 05/14/24 03:43:52.883
• [4.216 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 05/14/24 03:43:52.892
  May 14 03:43:52.892: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename projected @ 05/14/24 03:43:52.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:43:52.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:43:52.925
  STEP: Creating a pod to test downward API volume plugin @ 05/14/24 03:43:52.928
  STEP: Saw pod success @ 05/14/24 03:43:56.97
  May 14 03:43:56.973: INFO: Trying to get logs from node viola-paas-worker03 pod downwardapi-volume-d89c3d6d-86d2-4916-bdaf-335b9638588e container client-container: <nil>
  STEP: delete the pod @ 05/14/24 03:43:56.987
  May 14 03:43:57.011: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7601" for this suite. @ 05/14/24 03:43:57.022
• [4.140 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 05/14/24 03:43:57.033
  May 14 03:43:57.033: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename secrets @ 05/14/24 03:43:57.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:43:57.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:43:57.066
  STEP: Creating secret with name secret-test-5b8387ee-00d9-4833-bf0b-f45b69d595d2 @ 05/14/24 03:43:57.069
  STEP: Creating a pod to test consume secrets @ 05/14/24 03:43:57.096
  STEP: Saw pod success @ 05/14/24 03:44:01.125
  May 14 03:44:01.129: INFO: Trying to get logs from node viola-paas-worker03 pod pod-secrets-9289924b-dcb3-433a-a14c-d5520db11517 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/14/24 03:44:01.136
  May 14 03:44:01.171: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7578" for this suite. @ 05/14/24 03:44:01.176
• [4.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 05/14/24 03:44:01.184
  May 14 03:44:01.184: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename secrets @ 05/14/24 03:44:01.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:44:01.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:44:01.227
  May 14 03:44:01.280: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3003" for this suite. @ 05/14/24 03:44:01.285
• [0.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]
test/e2e/kubectl/kubectl.go:1481
  STEP: Creating a kubernetes client @ 05/14/24 03:44:01.295
  May 14 03:44:01.295: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename kubectl @ 05/14/24 03:44:01.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:44:01.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:44:01.342
  STEP: creating Agnhost RC @ 05/14/24 03:44:01.345
  May 14 03:44:01.345: INFO: namespace kubectl-1067
  May 14 03:44:01.345: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-1067 create -f -'
  May 14 03:44:02.364: INFO: stderr: ""
  May 14 03:44:02.364: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/14/24 03:44:02.364
  May 14 03:44:03.369: INFO: Selector matched 1 pods for map[app:agnhost]
  May 14 03:44:03.369: INFO: Found 0 / 1
  May 14 03:44:04.368: INFO: Selector matched 1 pods for map[app:agnhost]
  May 14 03:44:04.368: INFO: Found 1 / 1
  May 14 03:44:04.368: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  May 14 03:44:04.371: INFO: Selector matched 1 pods for map[app:agnhost]
  May 14 03:44:04.371: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  May 14 03:44:04.371: INFO: wait on agnhost-primary startup in kubectl-1067 
  May 14 03:44:04.371: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-1067 logs agnhost-primary-6bgqg agnhost-primary'
  May 14 03:44:04.493: INFO: stderr: ""
  May 14 03:44:04.493: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 05/14/24 03:44:04.493
  May 14 03:44:04.493: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-1067 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  May 14 03:44:04.587: INFO: stderr: ""
  May 14 03:44:04.587: INFO: stdout: "service/rm2 exposed\n"
  May 14 03:44:04.614: INFO: Service rm2 in namespace kubectl-1067 found.
  STEP: exposing service @ 05/14/24 03:44:06.621
  May 14 03:44:06.621: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-1067 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  May 14 03:44:06.703: INFO: stderr: ""
  May 14 03:44:06.703: INFO: stdout: "service/rm3 exposed\n"
  May 14 03:44:06.709: INFO: Service rm3 in namespace kubectl-1067 found.
  May 14 03:44:08.720: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1067" for this suite. @ 05/14/24 03:44:08.726
• [7.442 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 05/14/24 03:44:08.738
  May 14 03:44:08.738: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename daemonsets @ 05/14/24 03:44:08.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:44:08.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:44:08.773
  STEP: Creating simple DaemonSet "daemon-set" @ 05/14/24 03:44:08.812
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/14/24 03:44:08.829
  May 14 03:44:08.842: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 03:44:08.843: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 03:44:08.843: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 03:44:08.846: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 14 03:44:08.846: INFO: Node viola-paas-ingress01 is running 0 daemon pod, expected 1
  May 14 03:44:09.859: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 03:44:09.859: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 03:44:09.859: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 03:44:09.864: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 14 03:44:09.864: INFO: Node viola-paas-ingress01 is running 0 daemon pod, expected 1
  May 14 03:44:10.857: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 03:44:10.857: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 03:44:10.857: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 03:44:10.860: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
  May 14 03:44:10.861: INFO: Number of running nodes: 5, number of available pods: 5 in daemonset daemon-set
  STEP: Getting /status @ 05/14/24 03:44:10.863
  May 14 03:44:10.869: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 05/14/24 03:44:10.869
  May 14 03:44:10.879: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 05/14/24 03:44:10.879
  May 14 03:44:10.881: INFO: Observed &DaemonSet event: ADDED
  May 14 03:44:10.881: INFO: Observed &DaemonSet event: MODIFIED
  May 14 03:44:10.881: INFO: Observed &DaemonSet event: MODIFIED
  May 14 03:44:10.881: INFO: Observed &DaemonSet event: MODIFIED
  May 14 03:44:10.881: INFO: Observed &DaemonSet event: MODIFIED
  May 14 03:44:10.881: INFO: Observed &DaemonSet event: MODIFIED
  May 14 03:44:10.882: INFO: Observed &DaemonSet event: MODIFIED
  May 14 03:44:10.882: INFO: Found daemon set daemon-set in namespace daemonsets-2694 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  May 14 03:44:10.882: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 05/14/24 03:44:10.882
  STEP: watching for the daemon set status to be patched @ 05/14/24 03:44:10.895
  May 14 03:44:10.897: INFO: Observed &DaemonSet event: ADDED
  May 14 03:44:10.897: INFO: Observed &DaemonSet event: MODIFIED
  May 14 03:44:10.897: INFO: Observed &DaemonSet event: MODIFIED
  May 14 03:44:10.897: INFO: Observed &DaemonSet event: MODIFIED
  May 14 03:44:10.898: INFO: Observed &DaemonSet event: MODIFIED
  May 14 03:44:10.898: INFO: Observed &DaemonSet event: MODIFIED
  May 14 03:44:10.898: INFO: Observed &DaemonSet event: MODIFIED
  May 14 03:44:10.898: INFO: Observed daemon set daemon-set in namespace daemonsets-2694 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  May 14 03:44:10.898: INFO: Observed &DaemonSet event: MODIFIED
  May 14 03:44:10.898: INFO: Found daemon set daemon-set in namespace daemonsets-2694 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  May 14 03:44:10.898: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 05/14/24 03:44:10.901
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2694, will wait for the garbage collector to delete the pods @ 05/14/24 03:44:10.901
  May 14 03:44:10.974: INFO: Deleting DaemonSet.extensions daemon-set took: 19.211321ms
  May 14 03:44:11.074: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.140696ms
  May 14 03:44:13.179: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 14 03:44:13.179: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May 14 03:44:13.182: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26298065"},"items":null}

  May 14 03:44:13.185: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26298065"},"items":null}

  May 14 03:44:13.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2694" for this suite. @ 05/14/24 03:44:13.211
• [4.487 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 05/14/24 03:44:13.225
  May 14 03:44:13.225: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename sched-pred @ 05/14/24 03:44:13.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:44:13.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:44:13.272
  May 14 03:44:13.274: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  May 14 03:44:13.283: INFO: Waiting for terminating namespaces to be deleted...
  May 14 03:44:13.287: INFO: 
  Logging pods the apiserver thinks is on node viola-paas-ingress01 before test
  May 14 03:44:13.305: INFO: vault-0 from common-datastore started at 2024-05-13 09:32:36 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.305: INFO: 	Container vault ready: true, restart count 0
  May 14 03:44:13.305: INFO: ingress-nginx-controller-dnlvp from ingress-nginx started at 2024-05-14 01:12:07 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.305: INFO: 	Container controller ready: true, restart count 0
  May 14 03:44:13.305: INFO: istio-ingress-mmtwf from istio-system started at 2024-05-14 01:12:07 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.305: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:44:13.305: INFO: istio-user-ingress-nwwkw from istio-user-system started at 2024-05-14 01:12:07 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.305: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:44:13.305: INFO: cilium-r9ckd from kube-system started at 2024-05-14 02:21:02 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.305: INFO: 	Container cilium-agent ready: true, restart count 0
  May 14 03:44:13.305: INFO: kube-proxy-6dkxt from kube-system started at 2024-05-13 12:02:37 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.305: INFO: 	Container kube-proxy ready: true, restart count 0
  May 14 03:44:13.305: INFO: prometheus-stack-prometheus-node-exporter-cnrmz from mgmt started at 2024-03-28 12:03:16 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.305: INFO: 	Container node-exporter ready: true, restart count 1
  May 14 03:44:13.305: INFO: sonobuoy-systemd-logs-daemon-set-1b7153daae854a0a-l2wdq from sonobuoy started at 2024-05-14 03:38:24 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.305: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 14 03:44:13.305: INFO: 	Container systemd-logs ready: true, restart count 0
  May 14 03:44:13.305: INFO: 
  Logging pods the apiserver thinks is on node viola-paas-ingress02 before test
  May 14 03:44:13.322: INFO: ingress-nginx-controller-h79jc from ingress-nginx started at 2024-05-14 01:12:10 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.322: INFO: 	Container controller ready: true, restart count 0
  May 14 03:44:13.322: INFO: istio-ingress-x8srp from istio-system started at 2024-05-14 01:12:10 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.322: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:44:13.322: INFO: istio-user-ingress-c5fg4 from istio-user-system started at 2024-05-14 01:12:10 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.322: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:44:13.322: INFO: cilium-ds74x from kube-system started at 2024-05-14 02:19:05 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.322: INFO: 	Container cilium-agent ready: true, restart count 0
  May 14 03:44:13.322: INFO: kube-proxy-zmkl9 from kube-system started at 2024-05-13 12:02:41 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.322: INFO: 	Container kube-proxy ready: true, restart count 0
  May 14 03:44:13.322: INFO: prometheus-stack-prometheus-node-exporter-7ktxd from mgmt started at 2024-03-28 12:03:14 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.322: INFO: 	Container node-exporter ready: true, restart count 3
  May 14 03:44:13.322: INFO: sonobuoy-systemd-logs-daemon-set-1b7153daae854a0a-rkcz2 from sonobuoy started at 2024-05-14 03:38:24 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.322: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 14 03:44:13.322: INFO: 	Container systemd-logs ready: true, restart count 0
  May 14 03:44:13.322: INFO: 
  Logging pods the apiserver thinks is on node viola-paas-worker01 before test
  May 14 03:44:13.387: INFO: keycloak-7dfcdb954d-ddtkq from auth started at 2024-05-13 09:32:27 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.387: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:44:13.387: INFO: 	Container keycloak ready: true, restart count 0
  May 14 03:44:13.387: INFO: oauth2-admin-redis-67b99d7dd8-pdcqg from auth started at 2024-03-28 13:06:51 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.387: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:44:13.387: INFO: 	Container redis ready: true, restart count 0
  May 14 03:44:13.387: INFO: oauth2-proxy-admin-5c875b487b-r7245 from auth started at 2024-03-28 13:06:51 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.387: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:44:13.387: INFO: 	Container oauth2-proxy-admin ready: true, restart count 1
  May 14 03:44:13.387: INFO: oauth2-user-redis-dc4bfdccb-b8mwc from auth started at 2024-05-13 09:32:28 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.387: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:44:13.387: INFO: 	Container redis ready: true, restart count 0
  May 14 03:44:13.387: INFO: cloud-service-api-59c74dd867-sq7s5 from cmp started at 2024-04-18 05:43:52 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.387: INFO: 	Container cloud-service-api ready: true, restart count 0
  May 14 03:44:13.387: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:44:13.387: INFO: maestro-common-api-user-8dbfd65-w2hqr from cmp started at 2024-05-09 07:53:01 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.387: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:44:13.387: INFO: 	Container maestro-common-api ready: true, restart count 0
  May 14 03:44:13.387: INFO: maestro-remote-app-admin-84cc4549f9-hjxwv from cmp started at 2024-05-10 04:04:26 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.387: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:44:13.387: INFO: 	Container maestro-remote-app ready: true, restart count 0
  May 14 03:44:13.387: INFO: maestro-remote-app-user-67fbbdc5-jzhd7 from cmp started at 2024-05-10 04:04:43 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.387: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:44:13.387: INFO: 	Container maestro-remote-app ready: true, restart count 0
  May 14 03:44:13.387: INFO: notification-adapter-api-69cfc9f979-bvlzf from cmp started at 2024-05-09 07:51:57 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.387: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:44:13.387: INFO: 	Container noti-api ready: true, restart count 0
  May 14 03:44:13.387: INFO: maestro-mariadb-0 from common-datastore started at 2024-04-18 06:31:19 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.387: INFO: 	Container mariadb ready: true, restart count 0
  May 14 03:44:13.387: INFO: my-cluster-entity-operator-779c9f5f4c-rpz6r from common-datastore started at 2024-03-28 07:48:11 +0000 UTC (3 container statuses recorded)
  May 14 03:44:13.387: INFO: 	Container tls-sidecar ready: true, restart count 0
  May 14 03:44:13.387: INFO: 	Container topic-operator ready: true, restart count 1
  May 14 03:44:13.387: INFO: 	Container user-operator ready: true, restart count 1
  May 14 03:44:13.387: INFO: my-cluster-kafka-1 from common-datastore started at 2024-03-28 07:47:41 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.387: INFO: 	Container kafka ready: true, restart count 0
  May 14 03:44:13.387: INFO: my-cluster-zookeeper-1 from common-datastore started at 2024-03-28 07:47:16 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.387: INFO: 	Container zookeeper ready: true, restart count 0
  May 14 03:44:13.387: INFO: strimzi-cluster-operator-666f999656-x2vc4 from common-datastore started at 2024-03-28 07:46:33 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.387: INFO: 	Container strimzi-cluster-operator ready: true, restart count 1
  May 14 03:44:13.387: INFO: vault-2 from common-datastore started at 2024-03-28 06:52:13 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.387: INFO: 	Container vault ready: true, restart count 2
  May 14 03:44:13.387: INFO: cilium-v8g5j from kube-system started at 2024-05-14 02:20:22 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.387: INFO: 	Container cilium-agent ready: true, restart count 0
  May 14 03:44:13.387: INFO: hubble-ui-646869c4b5-mvq7x from kube-system started at 2024-03-27 17:21:13 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.387: INFO: 	Container backend ready: true, restart count 0
  May 14 03:44:13.387: INFO: 	Container frontend ready: true, restart count 0
  May 14 03:44:13.387: INFO: kube-proxy-lc4sl from kube-system started at 2024-05-13 12:02:32 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.387: INFO: 	Container kube-proxy ready: true, restart count 0
  May 14 03:44:13.387: INFO: metrics-server-97d69fdbb-vkp8h from kube-system started at 2024-05-13 09:32:28 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.387: INFO: 	Container metrics-server ready: true, restart count 0
  May 14 03:44:13.387: INFO: alertmanager-prometheus-stack-kube-prom-alertmanager-0 from mgmt started at 2024-05-13 09:32:30 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.387: INFO: 	Container alertmanager ready: true, restart count 0
  May 14 03:44:13.387: INFO: 	Container config-reloader ready: true, restart count 0
  May 14 03:44:13.387: INFO: cert-manager-webhook-856f997ff9-ssskc from mgmt started at 2024-03-27 20:52:27 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.387: INFO: 	Container cert-manager-webhook ready: true, restart count 3
  May 14 03:44:13.387: INFO: prometheus-stack-kube-prom-operator-6d44cc4cd-jmw7g from mgmt started at 2024-03-28 12:03:26 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.387: INFO: 	Container kube-prometheus-stack ready: true, restart count 0
  May 14 03:44:13.387: INFO: prometheus-stack-kube-state-metrics-57875d899b-czk45 from mgmt started at 2024-03-28 12:03:26 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.387: INFO: 	Container kube-state-metrics ready: true, restart count 0
  May 14 03:44:13.387: INFO: prometheus-stack-prometheus-node-exporter-77hhw from mgmt started at 2024-03-28 12:03:26 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.387: INFO: 	Container node-exporter ready: true, restart count 2
  May 14 03:44:13.387: INFO: nfs-subdir-external-provisioner-5694fcbb-vjvn6 from nfs-provisioner started at 2024-03-27 21:06:36 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.387: INFO: 	Container nfs-subdir-external-provisioner ready: true, restart count 31
  May 14 03:44:13.387: INFO: sonobuoy-systemd-logs-daemon-set-1b7153daae854a0a-2rtjg from sonobuoy started at 2024-05-14 03:38:24 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.387: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 14 03:44:13.387: INFO: 	Container systemd-logs ready: true, restart count 0
  May 14 03:44:13.387: INFO: trombone-pipeline-api-admin-57f4974bbb-4r5bp from trombone started at 2024-05-13 09:32:28 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.387: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:44:13.387: INFO: 	Container trombone-pipeline-api ready: true, restart count 1
  May 14 03:44:13.387: INFO: trombone-pipeline-api-user-8c8fcf744-ptxnz from trombone started at 2024-05-13 09:32:28 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.387: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:44:13.387: INFO: 	Container trombone-pipeline-api ready: true, restart count 1
  May 14 03:44:13.387: INFO: trombone-pipeline-app-admin-57b9d994fc-9mpm4 from trombone started at 2024-05-09 07:54:31 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.387: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:44:13.387: INFO: 	Container trombone-pipeline-app ready: true, restart count 0
  May 14 03:44:13.387: INFO: trombone-pipeline-app-user-5478cb9869-kzvqg from trombone started at 2024-05-13 09:32:28 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.387: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:44:13.387: INFO: 	Container trombone-pipeline-app ready: true, restart count 0
  May 14 03:44:13.387: INFO: viola-remote-app-admin-9ff88f5d4-c26c7 from viola started at 2024-05-13 09:32:28 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.387: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:44:13.387: INFO: 	Container viola-remote-app ready: true, restart count 0
  May 14 03:44:13.387: INFO: 
  Logging pods the apiserver thinks is on node viola-paas-worker02 before test
  May 14 03:44:13.453: INFO: mariadb-keycloak-584dff4d9d-pzxmc from auth started at 2024-05-13 09:32:29 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.453: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:44:13.453: INFO: 	Container mariadb-keycloak ready: true, restart count 0
  May 14 03:44:13.453: INFO: oauth2-proxy-user-86844f69f7-snkzn from auth started at 2024-05-13 09:32:27 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.453: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:44:13.453: INFO: 	Container oauth2-proxy-user ready: true, restart count 2
  May 14 03:44:13.453: INFO: cloud-service-collector-bdd5f9bfd-4tnj9 from cmp started at 2024-05-13 09:32:28 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.453: INFO: 	Container cloud-service-collector ready: true, restart count 0
  May 14 03:44:13.453: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:44:13.453: INFO: maestro-auth-gateway-admin-569ddffb77-rfs89 from cmp started at 2024-05-09 07:50:57 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.453: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:44:13.453: INFO: 	Container maestro-auth-gateway ready: true, restart count 0
  May 14 03:44:13.453: INFO: maestro-auth-gateway-user-7b75fb9dfc-7dgjq from cmp started at 2024-05-10 00:34:20 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.453: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:44:13.453: INFO: 	Container maestro-auth-gateway ready: true, restart count 0
  May 14 03:44:13.453: INFO: maestro-common-api-admin-677664dc4c-8t6mm from cmp started at 2024-05-09 07:52:29 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.453: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:44:13.453: INFO: 	Container maestro-common-api ready: true, restart count 0
  May 14 03:44:13.453: INFO: maestro-host-app-admin-569c68fc7c-npbhm from cmp started at 2024-05-09 07:49:19 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.453: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:44:13.453: INFO: 	Container maestro-host-app ready: true, restart count 0
  May 14 03:44:13.453: INFO: maestro-host-app-user-85bd5cc7b9-whm6l from cmp started at 2024-05-09 07:49:40 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.453: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:44:13.453: INFO: 	Container maestro-host-app ready: true, restart count 0
  May 14 03:44:13.453: INFO: maestro-iam-adapter-api-684fbb5445-nrvlj from cmp started at 2024-05-09 07:50:16 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.453: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:44:13.453: INFO: 	Container maestro-iam-adapter-api ready: true, restart count 0
  May 14 03:44:13.453: INFO: my-cluster-kafka-0 from common-datastore started at 2024-05-13 09:32:38 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.453: INFO: 	Container kafka ready: true, restart count 0
  May 14 03:44:13.453: INFO: my-cluster-kafka-2 from common-datastore started at 2024-03-28 07:47:41 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.453: INFO: 	Container kafka ready: true, restart count 0
  May 14 03:44:13.453: INFO: my-cluster-zookeeper-0 from common-datastore started at 2024-05-13 09:32:31 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.453: INFO: 	Container zookeeper ready: true, restart count 0
  May 14 03:44:13.453: INFO: my-cluster-zookeeper-2 from common-datastore started at 2024-03-28 07:47:16 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.453: INFO: 	Container zookeeper ready: true, restart count 0
  May 14 03:44:13.453: INFO: single-redis-0 from common-datastore started at 2024-05-13 09:32:30 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.453: INFO: 	Container redis ready: true, restart count 0
  May 14 03:44:13.453: INFO: vault-1 from common-datastore started at 2024-03-28 07:00:49 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.453: INFO: 	Container vault ready: true, restart count 2
  May 14 03:44:13.453: INFO: istiod-56d7d75486-vmxxc from istio-system started at 2024-03-27 21:21:52 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.453: INFO: 	Container discovery ready: true, restart count 23
  May 14 03:44:13.453: INFO: cilium-z6wbd from kube-system started at 2024-05-14 02:22:04 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.453: INFO: 	Container cilium-agent ready: true, restart count 0
  May 14 03:44:13.453: INFO: hubble-relay-54d87f994b-w2kxc from kube-system started at 2024-03-27 17:21:13 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.453: INFO: 	Container hubble-relay ready: true, restart count 0
  May 14 03:44:13.453: INFO: kube-proxy-j6rpg from kube-system started at 2024-05-13 12:02:35 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.453: INFO: 	Container kube-proxy ready: true, restart count 0
  May 14 03:44:13.453: INFO: metrics-server-97d69fdbb-g84tz from kube-system started at 2024-03-27 20:50:53 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.453: INFO: 	Container metrics-server ready: true, restart count 5
  May 14 03:44:13.453: INFO: cert-manager-58b499b456-l7dqk from mgmt started at 2024-03-27 20:52:27 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.453: INFO: 	Container cert-manager-controller ready: true, restart count 30
  May 14 03:44:13.453: INFO: cert-manager-cainjector-6b5ffc8c69-qwqwr from mgmt started at 2024-05-13 09:32:28 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.453: INFO: 	Container cert-manager-cainjector ready: true, restart count 0
  May 14 03:44:13.453: INFO: prometheus-prometheus-stack-kube-prom-prometheus-0 from mgmt started at 2024-03-28 12:31:07 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.453: INFO: 	Container config-reloader ready: true, restart count 0
  May 14 03:44:13.453: INFO: 	Container prometheus ready: true, restart count 15
  May 14 03:44:13.453: INFO: prometheus-stack-grafana-56ccfbdc65-t5fdw from mgmt started at 2024-03-28 12:03:38 +0000 UTC (3 container statuses recorded)
  May 14 03:44:13.453: INFO: 	Container grafana ready: true, restart count 18
  May 14 03:44:13.453: INFO: 	Container grafana-sc-dashboard ready: true, restart count 31
  May 14 03:44:13.453: INFO: 	Container grafana-sc-datasources ready: true, restart count 31
  May 14 03:44:13.453: INFO: prometheus-stack-grafana-image-renderer-6865c676f-2cfxb from mgmt started at 2024-05-13 09:32:28 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.453: INFO: 	Container grafana-image-renderer ready: true, restart count 0
  May 14 03:44:13.453: INFO: prometheus-stack-prometheus-node-exporter-zb7pq from mgmt started at 2024-03-28 12:03:38 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.453: INFO: 	Container node-exporter ready: true, restart count 1
  May 14 03:44:13.453: INFO: nfs-subdir-external-provisioner-5694fcbb-jclrd from nfs-provisioner started at 2024-03-27 21:06:36 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.453: INFO: 	Container nfs-subdir-external-provisioner ready: true, restart count 30
  May 14 03:44:13.453: INFO: nfs-subdir-external-provisioner-5694fcbb-zvtz2 from nfs-provisioner started at 2024-05-13 09:32:29 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.453: INFO: 	Container nfs-subdir-external-provisioner ready: true, restart count 0
  May 14 03:44:13.453: INFO: sonobuoy-systemd-logs-daemon-set-1b7153daae854a0a-4whd9 from sonobuoy started at 2024-05-14 03:38:24 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.453: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 14 03:44:13.453: INFO: 	Container systemd-logs ready: true, restart count 0
  May 14 03:44:13.453: INFO: trombone-remote-app-admin-6956c889dc-v66vp from trombone started at 2024-05-09 07:53:46 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.453: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:44:13.453: INFO: 	Container trombone-remote-app ready: true, restart count 0
  May 14 03:44:13.453: INFO: viola-api-admin-848fc5bd96-xsbj2 from viola started at 2024-05-13 09:32:28 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.453: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:44:13.453: INFO: 	Container viola-api ready: true, restart count 0
  May 14 03:44:13.453: INFO: viola-api-user-68649f6448-s2r85 from viola started at 2024-05-13 09:32:28 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.453: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:44:13.453: INFO: 	Container viola-api ready: true, restart count 0
  May 14 03:44:13.453: INFO: 
  Logging pods the apiserver thinks is on node viola-paas-worker03 before test
  May 14 03:44:13.493: INFO: vault-unsealer-28594304-n6pz9 from common-datastore started at 2024-05-14 03:44:00 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.493: INFO: 	Container unsealer ready: false, restart count 0
  May 14 03:44:13.493: INFO: cilium-dlqdw from kube-system started at 2024-05-14 02:22:35 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.493: INFO: 	Container cilium-agent ready: true, restart count 0
  May 14 03:44:13.493: INFO: cilium-operator-f5b4997d6-pqkmc from kube-system started at 2024-05-14 02:27:02 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.493: INFO: 	Container cilium-operator ready: true, restart count 0
  May 14 03:44:13.493: INFO: kube-proxy-n6xhs from kube-system started at 2024-05-13 12:02:44 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.493: INFO: 	Container kube-proxy ready: true, restart count 0
  May 14 03:44:13.493: INFO: agnhost-primary-6bgqg from kubectl-1067 started at 2024-05-14 03:44:02 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.493: INFO: 	Container agnhost-primary ready: true, restart count 0
  May 14 03:44:13.493: INFO: prometheus-stack-prometheus-node-exporter-zq2jt from mgmt started at 2024-03-28 12:03:14 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.493: INFO: 	Container node-exporter ready: true, restart count 1
  May 14 03:44:13.493: INFO: sonobuoy from sonobuoy started at 2024-05-14 03:38:23 +0000 UTC (1 container statuses recorded)
  May 14 03:44:13.493: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  May 14 03:44:13.493: INFO: sonobuoy-e2e-job-f032179957ad4a3a from sonobuoy started at 2024-05-14 03:38:24 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.493: INFO: 	Container e2e ready: true, restart count 0
  May 14 03:44:13.493: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 14 03:44:13.493: INFO: sonobuoy-systemd-logs-daemon-set-1b7153daae854a0a-bwsh7 from sonobuoy started at 2024-05-14 03:38:24 +0000 UTC (2 container statuses recorded)
  May 14 03:44:13.493: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 14 03:44:13.493: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/14/24 03:44:13.493
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/14/24 03:44:15.515
  STEP: Trying to apply a random label on the found node. @ 05/14/24 03:44:15.537
  STEP: verifying the node has the label kubernetes.io/e2e-f099a696-2957-4c05-b800-056869c840d5 95 @ 05/14/24 03:44:15.557
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 05/14/24 03:44:15.56
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.10.50.241 on the node which pod4 resides and expect not scheduled @ 05/14/24 03:44:17.587
  STEP: removing the label kubernetes.io/e2e-f099a696-2957-4c05-b800-056869c840d5 off the node viola-paas-worker03 @ 05/14/24 03:49:17.601
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-f099a696-2957-4c05-b800-056869c840d5 @ 05/14/24 03:49:17.623
  May 14 03:49:17.627: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3072" for this suite. @ 05/14/24 03:49:17.64
• [304.428 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 05/14/24 03:49:17.655
  May 14 03:49:17.655: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename subpath @ 05/14/24 03:49:17.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:49:17.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:49:17.694
  STEP: Setting up data @ 05/14/24 03:49:17.697
  STEP: Creating pod pod-subpath-test-downwardapi-njng @ 05/14/24 03:49:17.714
  STEP: Creating a pod to test atomic-volume-subpath @ 05/14/24 03:49:17.715
  STEP: Saw pod success @ 05/14/24 03:49:41.816
  May 14 03:49:41.820: INFO: Trying to get logs from node viola-paas-worker03 pod pod-subpath-test-downwardapi-njng container test-container-subpath-downwardapi-njng: <nil>
  STEP: delete the pod @ 05/14/24 03:49:41.933
  STEP: Deleting pod pod-subpath-test-downwardapi-njng @ 05/14/24 03:49:41.959
  May 14 03:49:41.959: INFO: Deleting pod "pod-subpath-test-downwardapi-njng" in namespace "subpath-6109"
  May 14 03:49:41.962: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6109" for this suite. @ 05/14/24 03:49:41.968
• [24.321 seconds]
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:486
  STEP: Creating a kubernetes client @ 05/14/24 03:49:41.976
  May 14 03:49:41.976: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename security-context-test @ 05/14/24 03:49:41.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:49:42.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:49:42.013
  May 14 03:49:46.042: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-918" for this suite. @ 05/14/24 03:49:46.049
• [4.081 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 05/14/24 03:49:46.057
  May 14 03:49:46.057: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename field-validation @ 05/14/24 03:49:46.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:49:46.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:49:46.108
  STEP: apply creating a deployment @ 05/14/24 03:49:46.111
  May 14 03:49:46.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4698" for this suite. @ 05/14/24 03:49:46.128
• [0.078 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 05/14/24 03:49:46.137
  May 14 03:49:46.137: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/14/24 03:49:46.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:49:46.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:49:46.168
  May 14 03:49:46.173: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/14/24 03:49:54.361
  May 14 03:49:54.361: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=crd-publish-openapi-9515 --namespace=crd-publish-openapi-9515 create -f -'
  May 14 03:49:55.316: INFO: stderr: ""
  May 14 03:49:55.316: INFO: stdout: "e2e-test-crd-publish-openapi-5465-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  May 14 03:49:55.316: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=crd-publish-openapi-9515 --namespace=crd-publish-openapi-9515 delete e2e-test-crd-publish-openapi-5465-crds test-cr'
  May 14 03:49:55.399: INFO: stderr: ""
  May 14 03:49:55.399: INFO: stdout: "e2e-test-crd-publish-openapi-5465-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  May 14 03:49:55.399: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=crd-publish-openapi-9515 --namespace=crd-publish-openapi-9515 apply -f -'
  May 14 03:49:56.308: INFO: stderr: ""
  May 14 03:49:56.308: INFO: stdout: "e2e-test-crd-publish-openapi-5465-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  May 14 03:49:56.308: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=crd-publish-openapi-9515 --namespace=crd-publish-openapi-9515 delete e2e-test-crd-publish-openapi-5465-crds test-cr'
  May 14 03:49:56.391: INFO: stderr: ""
  May 14 03:49:56.391: INFO: stdout: "e2e-test-crd-publish-openapi-5465-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/14/24 03:49:56.391
  May 14 03:49:56.391: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=crd-publish-openapi-9515 explain e2e-test-crd-publish-openapi-5465-crds'
  May 14 03:49:57.238: INFO: stderr: ""
  May 14 03:49:57.238: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-5465-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  May 14 03:50:00.002: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9515" for this suite. @ 05/14/24 03:50:00.014
• [13.887 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:129
  STEP: Creating a kubernetes client @ 05/14/24 03:50:00.026
  May 14 03:50:00.026: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename runtimeclass @ 05/14/24 03:50:00.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:50:00.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:50:00.057
  May 14 03:50:00.099: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7642" for this suite. @ 05/14/24 03:50:00.13
• [0.118 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 05/14/24 03:50:00.145
  May 14 03:50:00.145: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename webhook @ 05/14/24 03:50:00.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:50:00.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:50:00.203
  STEP: Setting up server cert @ 05/14/24 03:50:00.245
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/14/24 03:50:00.433
  STEP: Deploying the webhook pod @ 05/14/24 03:50:00.448
  STEP: Wait for the deployment to be ready @ 05/14/24 03:50:00.47
  May 14 03:50:00.477: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/14/24 03:50:02.492
  STEP: Verifying the service has paired with the endpoint @ 05/14/24 03:50:02.511
  May 14 03:50:03.512: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 05/14/24 03:50:03.52
  STEP: create a pod that should be updated by the webhook @ 05/14/24 03:50:03.541
  May 14 03:50:03.570: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4290" for this suite. @ 05/14/24 03:50:03.671
  STEP: Destroying namespace "webhook-markers-8319" for this suite. @ 05/14/24 03:50:03.682
• [3.544 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 05/14/24 03:50:03.69
  May 14 03:50:03.690: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename kubelet-test @ 05/14/24 03:50:03.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:50:03.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:50:03.718
  May 14 03:50:07.742: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9590" for this suite. @ 05/14/24 03:50:07.748
• [4.070 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 05/14/24 03:50:07.761
  May 14 03:50:07.761: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename projected @ 05/14/24 03:50:07.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:50:07.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:50:07.799
  STEP: Creating a pod to test downward API volume plugin @ 05/14/24 03:50:07.802
  STEP: Saw pod success @ 05/14/24 03:50:11.83
  May 14 03:50:11.997: INFO: Trying to get logs from node viola-paas-worker03 pod downwardapi-volume-7e5d6639-653d-4474-b22f-4775a9f981a2 container client-container: <nil>
  STEP: delete the pod @ 05/14/24 03:50:12.008
  May 14 03:50:12.034: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3027" for this suite. @ 05/14/24 03:50:12.044
• [4.292 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
test/e2e/network/endpointslice.go:104
  STEP: Creating a kubernetes client @ 05/14/24 03:50:12.052
  May 14 03:50:12.052: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename endpointslice @ 05/14/24 03:50:12.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:50:12.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:50:12.085
  May 14 03:50:14.154: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4938" for this suite. @ 05/14/24 03:50:14.16
• [2.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance]
test/e2e/instrumentation/core_events.go:57
  STEP: Creating a kubernetes client @ 05/14/24 03:50:14.169
  May 14 03:50:14.169: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename events @ 05/14/24 03:50:14.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:50:14.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:50:14.214
  STEP: creating a test event @ 05/14/24 03:50:14.217
  STEP: listing all events in all namespaces @ 05/14/24 03:50:14.224
  STEP: patching the test event @ 05/14/24 03:50:14.238
  STEP: fetching the test event @ 05/14/24 03:50:14.251
  STEP: updating the test event @ 05/14/24 03:50:14.254
  STEP: getting the test event @ 05/14/24 03:50:14.266
  STEP: deleting the test event @ 05/14/24 03:50:14.27
  STEP: listing all events in all namespaces @ 05/14/24 03:50:14.28
  May 14 03:50:14.295: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9942" for this suite. @ 05/14/24 03:50:14.303
• [0.153 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]
test/e2e/kubectl/kubectl.go:1741
  STEP: Creating a kubernetes client @ 05/14/24 03:50:14.323
  May 14 03:50:14.323: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename kubectl @ 05/14/24 03:50:14.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:50:14.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:50:14.353
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/14/24 03:50:14.359
  May 14 03:50:14.360: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-2269 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  May 14 03:50:14.442: INFO: stderr: ""
  May 14 03:50:14.442: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 05/14/24 03:50:14.443
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/14/24 03:50:19.496
  May 14 03:50:19.496: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-2269 get pod e2e-test-httpd-pod -o json'
  May 14 03:50:19.557: INFO: stderr: ""
  May 14 03:50:19.557: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-05-14T03:50:14Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-2269\",\n        \"resourceVersion\": \"26300523\",\n        \"uid\": \"955129da-cddd-483e-9d6c-b9b0a9cc3b9a\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-qq7ds\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"viola-paas-worker03\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-qq7ds\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-14T03:50:14Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-14T03:50:16Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-14T03:50:16Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-14T03:50:14Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://1d1699f75707e8dc1f81d0df0d75411ac17b8abf4e8affc8769f82a7e3a4c376\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-05-14T03:50:15Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.10.50.241\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.233.64.219\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.233.64.219\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-05-14T03:50:14Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 05/14/24 03:50:19.557
  May 14 03:50:19.557: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-2269 replace -f -'
  May 14 03:50:20.717: INFO: stderr: ""
  May 14 03:50:20.717: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 @ 05/14/24 03:50:20.717
  May 14 03:50:20.730: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-2269 delete pods e2e-test-httpd-pod'
  May 14 03:50:22.196: INFO: stderr: ""
  May 14 03:50:22.197: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  May 14 03:50:22.197: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2269" for this suite. @ 05/14/24 03:50:22.202
• [7.887 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 05/14/24 03:50:22.211
  May 14 03:50:22.211: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename projected @ 05/14/24 03:50:22.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:50:22.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:50:22.247
  STEP: Creating a pod to test downward API volume plugin @ 05/14/24 03:50:22.249
  STEP: Saw pod success @ 05/14/24 03:50:26.277
  May 14 03:50:26.282: INFO: Trying to get logs from node viola-paas-worker03 pod downwardapi-volume-e24af189-3deb-41e6-9253-98ecee82d7ca container client-container: <nil>
  STEP: delete the pod @ 05/14/24 03:50:26.288
  May 14 03:50:26.313: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5719" for this suite. @ 05/14/24 03:50:26.318
• [4.114 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 05/14/24 03:50:26.325
  May 14 03:50:26.325: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename configmap @ 05/14/24 03:50:26.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:50:26.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:50:26.366
  STEP: Creating configMap with name configmap-test-volume-9bdaa013-255d-465b-8096-cebcff03c575 @ 05/14/24 03:50:26.369
  STEP: Creating a pod to test consume configMaps @ 05/14/24 03:50:26.375
  STEP: Saw pod success @ 05/14/24 03:50:30.406
  May 14 03:50:30.410: INFO: Trying to get logs from node viola-paas-worker03 pod pod-configmaps-1f5be6d3-eafa-47fe-b7cb-14c8dfdde2fe container agnhost-container: <nil>
  STEP: delete the pod @ 05/14/24 03:50:30.416
  May 14 03:50:30.433: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9481" for this suite. @ 05/14/24 03:50:30.438
• [4.121 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]
test/e2e/kubectl/kubectl.go:1806
  STEP: Creating a kubernetes client @ 05/14/24 03:50:30.447
  May 14 03:50:30.447: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename kubectl @ 05/14/24 03:50:30.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:50:30.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:50:30.483
  STEP: Starting the proxy @ 05/14/24 03:50:30.485
  May 14 03:50:30.485: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-2762 proxy --unix-socket=/tmp/kubectl-proxy-unix4289604345/test'
  STEP: retrieving proxy /api/ output @ 05/14/24 03:50:30.534
  May 14 03:50:30.536: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2762" for this suite. @ 05/14/24 03:50:30.542
• [0.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance]
test/e2e/network/service.go:3552
  STEP: Creating a kubernetes client @ 05/14/24 03:50:30.561
  May 14 03:50:30.561: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename services @ 05/14/24 03:50:30.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:50:30.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:50:30.637
  STEP: creating a collection of services @ 05/14/24 03:50:30.64
  May 14 03:50:30.640: INFO: Creating e2e-svc-a-6tvtk
  May 14 03:50:30.705: INFO: Creating e2e-svc-b-ss8cg
  May 14 03:50:30.727: INFO: Creating e2e-svc-c-vvtrq
  STEP: deleting service collection @ 05/14/24 03:50:30.754
  May 14 03:50:30.814: INFO: Collection of services has been deleted
  May 14 03:50:30.814: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7001" for this suite. @ 05/14/24 03:50:30.819
• [0.274 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 05/14/24 03:50:30.835
  May 14 03:50:30.836: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename pods @ 05/14/24 03:50:30.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:50:30.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:50:30.867
  STEP: creating pod @ 05/14/24 03:50:30.87
  May 14 03:50:32.902: INFO: Pod pod-hostip-9e9787bc-573a-4208-8c07-17f157f23ddc has hostIP: 172.10.50.241
  May 14 03:50:32.902: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1023" for this suite. @ 05/14/24 03:50:32.909
• [2.085 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 05/14/24 03:50:32.921
  May 14 03:50:32.921: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename downward-api @ 05/14/24 03:50:32.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:50:32.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:50:32.974
  STEP: Creating a pod to test downward API volume plugin @ 05/14/24 03:50:32.978
  STEP: Saw pod success @ 05/14/24 03:50:37.031
  May 14 03:50:37.033: INFO: Trying to get logs from node viola-paas-worker03 pod downwardapi-volume-5eac3b0c-7a5f-45b1-9ee0-5ea6100e91b1 container client-container: <nil>
  STEP: delete the pod @ 05/14/24 03:50:37.043
  May 14 03:50:37.073: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7345" for this suite. @ 05/14/24 03:50:37.08
• [4.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 05/14/24 03:50:37.09
  May 14 03:50:37.090: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename sched-preemption @ 05/14/24 03:50:37.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:50:37.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:50:37.125
  May 14 03:50:37.145: INFO: Waiting up to 1m0s for all nodes to be ready
  May 14 03:51:37.223: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/14/24 03:51:37.227
  May 14 03:51:37.227: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/14/24 03:51:37.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:51:37.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:51:37.261
  STEP: Finding an available node @ 05/14/24 03:51:37.264
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/14/24 03:51:37.264
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/14/24 03:51:39.294
  May 14 03:51:39.317: INFO: found a healthy node: viola-paas-worker03
  May 14 03:51:45.433: INFO: pods created so far: [1 1 1]
  May 14 03:51:45.433: INFO: length of pods created so far: 3
  May 14 03:51:47.461: INFO: pods created so far: [2 2 1]
  May 14 03:51:54.463: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May 14 03:51:54.529: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-6378" for this suite. @ 05/14/24 03:51:54.615
  STEP: Destroying namespace "sched-preemption-8273" for this suite. @ 05/14/24 03:51:54.624
• [77.542 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 05/14/24 03:51:54.634
  May 14 03:51:54.634: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename projected @ 05/14/24 03:51:54.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:51:54.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:51:54.673
  STEP: Creating configMap with name projected-configmap-test-volume-bc7e5eb2-0f2a-4400-922c-48d3a660ea6b @ 05/14/24 03:51:54.676
  STEP: Creating a pod to test consume configMaps @ 05/14/24 03:51:54.682
  STEP: Saw pod success @ 05/14/24 03:51:58.711
  May 14 03:51:58.714: INFO: Trying to get logs from node viola-paas-worker03 pod pod-projected-configmaps-43337a46-68f3-4cc3-9a5f-4a2022f4803a container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 05/14/24 03:51:58.72
  May 14 03:51:58.744: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4576" for this suite. @ 05/14/24 03:51:58.75
• [4.124 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 05/14/24 03:51:58.758
  May 14 03:51:58.758: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename var-expansion @ 05/14/24 03:51:58.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:51:58.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:51:58.797
  May 14 03:52:00.819: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May 14 03:52:00.824: INFO: Deleting pod "var-expansion-33923012-cafb-4e4d-91c7-ef905fbed8f0" in namespace "var-expansion-6942"
  May 14 03:52:00.838: INFO: Wait up to 5m0s for pod "var-expansion-33923012-cafb-4e4d-91c7-ef905fbed8f0" to be fully deleted
  STEP: Destroying namespace "var-expansion-6942" for this suite. @ 05/14/24 03:52:02.847
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance]
test/e2e/apps/rc.go:94
  STEP: Creating a kubernetes client @ 05/14/24 03:52:02.862
  May 14 03:52:02.862: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename replication-controller @ 05/14/24 03:52:02.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:52:02.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:52:02.893
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 05/14/24 03:52:02.896
  STEP: When a replication controller with a matching selector is created @ 05/14/24 03:52:04.924
  STEP: Then the orphan pod is adopted @ 05/14/24 03:52:04.934
  May 14 03:52:05.942: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5225" for this suite. @ 05/14/24 03:52:05.949
• [3.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 05/14/24 03:52:05.959
  May 14 03:52:05.959: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename deployment @ 05/14/24 03:52:05.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:52:05.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:52:05.996
  May 14 03:52:06.012: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  May 14 03:52:11.018: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/14/24 03:52:11.018
  May 14 03:52:11.018: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 05/14/24 03:52:11.032
  May 14 03:52:11.041: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5157",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e6309a41-22a8-4722-8467-eb01adf92099",
      ResourceVersion: (string) (len=8) "26301672",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851255531,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851255531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 14 03:52:11.047: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  May 14 03:52:11.056: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5157" for this suite. @ 05/14/24 03:52:11.061
• [5.115 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 05/14/24 03:52:11.076
  May 14 03:52:11.076: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename configmap @ 05/14/24 03:52:11.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:52:11.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:52:11.132
  May 14 03:52:11.198: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3060" for this suite. @ 05/14/24 03:52:11.204
• [0.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 05/14/24 03:52:11.216
  May 14 03:52:11.216: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename downward-api @ 05/14/24 03:52:11.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:52:11.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:52:11.257
  STEP: Creating the pod @ 05/14/24 03:52:11.26
  May 14 03:52:13.810: INFO: Successfully updated pod "labelsupdatee402292d-0af5-4bde-927d-f1fc65798dd9"
  May 14 03:52:15.826: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-922" for this suite. @ 05/14/24 03:52:15.832
• [4.623 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:137
  STEP: Creating a kubernetes client @ 05/14/24 03:52:15.84
  May 14 03:52:15.840: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename emptydir @ 05/14/24 03:52:15.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:52:15.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:52:15.867
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/14/24 03:52:15.869
  STEP: Saw pod success @ 05/14/24 03:52:19.894
  May 14 03:52:19.899: INFO: Trying to get logs from node viola-paas-worker03 pod pod-9b288d1a-3983-465f-93a9-54e99eb97e62 container test-container: <nil>
  STEP: delete the pod @ 05/14/24 03:52:19.906
  May 14 03:52:19.938: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-166" for this suite. @ 05/14/24 03:52:19.943
• [4.119 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 05/14/24 03:52:19.96
  May 14 03:52:19.960: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename webhook @ 05/14/24 03:52:19.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:52:19.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:52:19.987
  STEP: Setting up server cert @ 05/14/24 03:52:20.032
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/14/24 03:52:20.339
  STEP: Deploying the webhook pod @ 05/14/24 03:52:20.349
  STEP: Wait for the deployment to be ready @ 05/14/24 03:52:20.37
  May 14 03:52:20.382: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/14/24 03:52:22.397
  STEP: Verifying the service has paired with the endpoint @ 05/14/24 03:52:22.414
  May 14 03:52:23.414: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 05/14/24 03:52:23.424
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/14/24 03:52:23.447
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 05/14/24 03:52:23.454
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/14/24 03:52:23.471
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 05/14/24 03:52:23.486
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/14/24 03:52:23.502
  May 14 03:52:23.515: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2655" for this suite. @ 05/14/24 03:52:23.587
  STEP: Destroying namespace "webhook-markers-8093" for this suite. @ 05/14/24 03:52:23.597
• [3.656 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 05/14/24 03:52:23.616
  May 14 03:52:23.616: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename downward-api @ 05/14/24 03:52:23.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:52:23.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:52:23.659
  STEP: Creating a pod to test downward API volume plugin @ 05/14/24 03:52:23.662
  STEP: Saw pod success @ 05/14/24 03:52:27.699
  May 14 03:52:27.702: INFO: Trying to get logs from node viola-paas-worker03 pod downwardapi-volume-8598695f-3a4a-4ffc-b5d3-8e1e05c513cf container client-container: <nil>
  STEP: delete the pod @ 05/14/24 03:52:27.709
  May 14 03:52:27.735: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7675" for this suite. @ 05/14/24 03:52:27.743
• [4.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 05/14/24 03:52:27.757
  May 14 03:52:27.757: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename secrets @ 05/14/24 03:52:27.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:52:27.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:52:27.789
  STEP: Creating secret with name secret-test-e949779e-9c2a-4c70-a010-34c46a5c9033 @ 05/14/24 03:52:27.795
  STEP: Creating a pod to test consume secrets @ 05/14/24 03:52:27.801
  STEP: Saw pod success @ 05/14/24 03:52:31.843
  May 14 03:52:31.845: INFO: Trying to get logs from node viola-paas-worker03 pod pod-secrets-201f56e4-b454-4ac9-98b2-8f47175c95aa container secret-volume-test: <nil>
  STEP: delete the pod @ 05/14/24 03:52:31.851
  May 14 03:52:31.887: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-742" for this suite. @ 05/14/24 03:52:31.893
• [4.142 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]
test/e2e/network/endpointslice.go:68
  STEP: Creating a kubernetes client @ 05/14/24 03:52:31.9
  May 14 03:52:31.900: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename endpointslice @ 05/14/24 03:52:31.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:52:31.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:52:31.943
  May 14 03:52:31.953: INFO: Endpoints addresses: [172.10.50.21 172.10.50.64 172.10.50.82] , ports: [6443]
  May 14 03:52:31.953: INFO: EndpointSlices addresses: [172.10.50.21 172.10.50.64 172.10.50.82] , ports: [6443]
  May 14 03:52:31.953: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8787" for this suite. @ 05/14/24 03:52:31.958
• [0.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 05/14/24 03:52:31.971
  May 14 03:52:31.971: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename kubelet-test @ 05/14/24 03:52:31.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:52:32.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:52:32.016
  STEP: Waiting for pod completion @ 05/14/24 03:52:32.035
  May 14 03:52:36.059: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8605" for this suite. @ 05/14/24 03:52:36.065
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]
test/e2e/kubectl/kubectl.go:996
  STEP: Creating a kubernetes client @ 05/14/24 03:52:36.075
  May 14 03:52:36.075: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename kubectl @ 05/14/24 03:52:36.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:52:36.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:52:36.106
  STEP: create deployment with httpd image @ 05/14/24 03:52:36.109
  May 14 03:52:36.110: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-6023 create -f -'
  May 14 03:52:37.069: INFO: stderr: ""
  May 14 03:52:37.069: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 05/14/24 03:52:37.069
  May 14 03:52:37.069: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-6023 diff -f -'
  May 14 03:52:37.331: INFO: rc: 1
  May 14 03:52:37.331: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-6023 delete -f -'
  May 14 03:52:37.409: INFO: stderr: ""
  May 14 03:52:37.409: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  May 14 03:52:37.409: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6023" for this suite. @ 05/14/24 03:52:37.423
• [1.361 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]
test/e2e/apimachinery/garbage_collector.go:817
  STEP: Creating a kubernetes client @ 05/14/24 03:52:37.438
  May 14 03:52:37.438: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename gc @ 05/14/24 03:52:37.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:52:37.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:52:37.467
  May 14 03:52:37.540: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"41e91e29-5e68-4394-bb5f-702d307eebc2", Controller:(*bool)(0xc0048db862), BlockOwnerDeletion:(*bool)(0xc0048db863)}}
  May 14 03:52:37.550: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"14296f7a-baf4-4ed6-bfc2-142a37cde317", Controller:(*bool)(0xc0069d0022), BlockOwnerDeletion:(*bool)(0xc0069d0023)}}
  May 14 03:52:37.565: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"880ada05-abdc-4e30-8bd4-c1ad0bd91776", Controller:(*bool)(0xc006aa9e9a), BlockOwnerDeletion:(*bool)(0xc006aa9e9b)}}
  May 14 03:52:42.642: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2210" for this suite. @ 05/14/24 03:52:42.648
• [5.221 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 05/14/24 03:52:42.659
  May 14 03:52:42.659: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename field-validation @ 05/14/24 03:52:42.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:52:42.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:52:42.69
  May 14 03:52:42.692: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  W0514 03:52:50.282759      23 warnings.go:70] unknown field "alpha"
  W0514 03:52:50.282813      23 warnings.go:70] unknown field "beta"
  W0514 03:52:50.282816      23 warnings.go:70] unknown field "delta"
  W0514 03:52:50.282819      23 warnings.go:70] unknown field "epsilon"
  W0514 03:52:50.282821      23 warnings.go:70] unknown field "gamma"
  May 14 03:52:50.826: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4828" for this suite. @ 05/14/24 03:52:50.843
• [8.197 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 05/14/24 03:52:50.856
  May 14 03:52:50.856: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename webhook @ 05/14/24 03:52:50.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:52:50.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:52:50.889
  STEP: Setting up server cert @ 05/14/24 03:52:50.934
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/14/24 03:52:51.102
  STEP: Deploying the webhook pod @ 05/14/24 03:52:51.113
  STEP: Wait for the deployment to be ready @ 05/14/24 03:52:51.142
  May 14 03:52:51.155: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/14/24 03:52:53.167
  STEP: Verifying the service has paired with the endpoint @ 05/14/24 03:52:53.187
  May 14 03:52:54.188: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 05/14/24 03:52:54.196
  STEP: create a namespace for the webhook @ 05/14/24 03:52:54.221
  STEP: create a configmap should be unconditionally rejected by the webhook @ 05/14/24 03:52:54.25
  May 14 03:52:54.256: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9241" for this suite. @ 05/14/24 03:52:54.332
  STEP: Destroying namespace "webhook-markers-1921" for this suite. @ 05/14/24 03:52:54.347
  STEP: Destroying namespace "fail-closed-namespace-7945" for this suite. @ 05/14/24 03:52:54.37
• [3.527 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 05/14/24 03:52:54.383
  May 14 03:52:54.383: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename pods @ 05/14/24 03:52:54.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:52:54.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:52:54.419
  STEP: creating the pod @ 05/14/24 03:52:54.423
  STEP: setting up watch @ 05/14/24 03:52:54.423
  STEP: submitting the pod to kubernetes @ 05/14/24 03:52:54.527
  STEP: verifying the pod is in kubernetes @ 05/14/24 03:52:54.542
  STEP: verifying pod creation was observed @ 05/14/24 03:52:54.545
  STEP: deleting the pod gracefully @ 05/14/24 03:52:56.568
  STEP: verifying pod deletion was observed @ 05/14/24 03:52:56.58
  May 14 03:52:57.682: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2857" for this suite. @ 05/14/24 03:52:57.688
• [3.315 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 05/14/24 03:52:57.698
  May 14 03:52:57.698: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 05/14/24 03:52:57.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:52:57.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:52:57.727
  STEP: Setting up the test @ 05/14/24 03:52:57.729
  STEP: Creating hostNetwork=false pod @ 05/14/24 03:52:57.729
  STEP: Creating hostNetwork=true pod @ 05/14/24 03:52:59.756
  STEP: Running the test @ 05/14/24 03:53:01.782
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 05/14/24 03:53:01.782
  May 14 03:53:01.782: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6979 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 03:53:01.782: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 03:53:01.783: INFO: ExecWithOptions: Clientset creation
  May 14 03:53:01.783: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6979/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  May 14 03:53:01.838: INFO: Exec stderr: ""
  May 14 03:53:01.838: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6979 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 03:53:01.838: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 03:53:01.838: INFO: ExecWithOptions: Clientset creation
  May 14 03:53:01.839: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6979/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  May 14 03:53:01.880: INFO: Exec stderr: ""
  May 14 03:53:01.880: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6979 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 03:53:01.880: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 03:53:01.880: INFO: ExecWithOptions: Clientset creation
  May 14 03:53:01.880: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6979/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  May 14 03:53:01.934: INFO: Exec stderr: ""
  May 14 03:53:01.934: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6979 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 03:53:01.934: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 03:53:01.934: INFO: ExecWithOptions: Clientset creation
  May 14 03:53:01.934: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6979/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  May 14 03:53:01.980: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 05/14/24 03:53:01.98
  May 14 03:53:01.980: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6979 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 03:53:01.980: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 03:53:01.981: INFO: ExecWithOptions: Clientset creation
  May 14 03:53:01.981: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6979/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  May 14 03:53:02.028: INFO: Exec stderr: ""
  May 14 03:53:02.028: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6979 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 03:53:02.028: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 03:53:02.029: INFO: ExecWithOptions: Clientset creation
  May 14 03:53:02.029: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6979/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  May 14 03:53:02.078: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 05/14/24 03:53:02.078
  May 14 03:53:02.078: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6979 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 03:53:02.078: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 03:53:02.079: INFO: ExecWithOptions: Clientset creation
  May 14 03:53:02.079: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6979/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  May 14 03:53:02.125: INFO: Exec stderr: ""
  May 14 03:53:02.125: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6979 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 03:53:02.125: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 03:53:02.125: INFO: ExecWithOptions: Clientset creation
  May 14 03:53:02.125: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6979/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  May 14 03:53:02.168: INFO: Exec stderr: ""
  May 14 03:53:02.168: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6979 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 03:53:02.168: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 03:53:02.168: INFO: ExecWithOptions: Clientset creation
  May 14 03:53:02.168: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6979/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  May 14 03:53:02.208: INFO: Exec stderr: ""
  May 14 03:53:02.208: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6979 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 03:53:02.208: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 03:53:02.209: INFO: ExecWithOptions: Clientset creation
  May 14 03:53:02.209: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6979/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  May 14 03:53:02.254: INFO: Exec stderr: ""
  May 14 03:53:02.254: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-6979" for this suite. @ 05/14/24 03:53:02.261
• [4.570 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:354
  STEP: Creating a kubernetes client @ 05/14/24 03:53:02.268
  May 14 03:53:02.268: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename kubectl @ 05/14/24 03:53:02.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:53:02.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:53:02.299
  STEP: creating a replication controller @ 05/14/24 03:53:02.301
  May 14 03:53:02.301: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-5593 create -f -'
  May 14 03:53:02.796: INFO: stderr: ""
  May 14 03:53:02.796: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/14/24 03:53:02.796
  May 14 03:53:02.796: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-5593 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 14 03:53:02.860: INFO: stderr: ""
  May 14 03:53:02.860: INFO: stdout: "update-demo-nautilus-7wpnj update-demo-nautilus-wwzkj "
  May 14 03:53:02.860: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-5593 get pods update-demo-nautilus-7wpnj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 14 03:53:02.919: INFO: stderr: ""
  May 14 03:53:02.919: INFO: stdout: ""
  May 14 03:53:02.919: INFO: update-demo-nautilus-7wpnj is created but not running
  May 14 03:53:07.919: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-5593 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 14 03:53:07.985: INFO: stderr: ""
  May 14 03:53:07.985: INFO: stdout: "update-demo-nautilus-7wpnj update-demo-nautilus-wwzkj "
  May 14 03:53:07.985: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-5593 get pods update-demo-nautilus-7wpnj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 14 03:53:08.056: INFO: stderr: ""
  May 14 03:53:08.056: INFO: stdout: "true"
  May 14 03:53:08.056: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-5593 get pods update-demo-nautilus-7wpnj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 14 03:53:08.122: INFO: stderr: ""
  May 14 03:53:08.123: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 14 03:53:08.123: INFO: validating pod update-demo-nautilus-7wpnj
  May 14 03:53:08.129: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 14 03:53:08.129: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 14 03:53:08.129: INFO: update-demo-nautilus-7wpnj is verified up and running
  May 14 03:53:08.129: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-5593 get pods update-demo-nautilus-wwzkj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 14 03:53:08.194: INFO: stderr: ""
  May 14 03:53:08.194: INFO: stdout: "true"
  May 14 03:53:08.194: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-5593 get pods update-demo-nautilus-wwzkj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 14 03:53:08.253: INFO: stderr: ""
  May 14 03:53:08.253: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 14 03:53:08.253: INFO: validating pod update-demo-nautilus-wwzkj
  May 14 03:53:08.264: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 14 03:53:08.264: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 14 03:53:08.264: INFO: update-demo-nautilus-wwzkj is verified up and running
  STEP: scaling down the replication controller @ 05/14/24 03:53:08.264
  May 14 03:53:08.265: INFO: scanned /root for discovery docs: <nil>
  May 14 03:53:08.265: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-5593 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  May 14 03:53:09.353: INFO: stderr: ""
  May 14 03:53:09.353: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/14/24 03:53:09.353
  May 14 03:53:09.353: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-5593 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 14 03:53:09.416: INFO: stderr: ""
  May 14 03:53:09.416: INFO: stdout: "update-demo-nautilus-7wpnj update-demo-nautilus-wwzkj "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 05/14/24 03:53:09.416
  May 14 03:53:14.418: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-5593 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 14 03:53:14.483: INFO: stderr: ""
  May 14 03:53:14.483: INFO: stdout: "update-demo-nautilus-wwzkj "
  May 14 03:53:14.483: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-5593 get pods update-demo-nautilus-wwzkj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 14 03:53:14.548: INFO: stderr: ""
  May 14 03:53:14.548: INFO: stdout: "true"
  May 14 03:53:14.548: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-5593 get pods update-demo-nautilus-wwzkj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 14 03:53:14.609: INFO: stderr: ""
  May 14 03:53:14.609: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 14 03:53:14.609: INFO: validating pod update-demo-nautilus-wwzkj
  May 14 03:53:14.614: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 14 03:53:14.614: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 14 03:53:14.614: INFO: update-demo-nautilus-wwzkj is verified up and running
  STEP: scaling up the replication controller @ 05/14/24 03:53:14.614
  May 14 03:53:14.616: INFO: scanned /root for discovery docs: <nil>
  May 14 03:53:14.616: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-5593 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  May 14 03:53:15.704: INFO: stderr: ""
  May 14 03:53:15.704: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/14/24 03:53:15.704
  May 14 03:53:15.704: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-5593 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 14 03:53:15.768: INFO: stderr: ""
  May 14 03:53:15.768: INFO: stdout: "update-demo-nautilus-wncdz update-demo-nautilus-wwzkj "
  May 14 03:53:15.768: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-5593 get pods update-demo-nautilus-wncdz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 14 03:53:15.839: INFO: stderr: ""
  May 14 03:53:15.839: INFO: stdout: "true"
  May 14 03:53:15.840: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-5593 get pods update-demo-nautilus-wncdz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 14 03:53:15.900: INFO: stderr: ""
  May 14 03:53:15.900: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 14 03:53:15.900: INFO: validating pod update-demo-nautilus-wncdz
  May 14 03:53:15.906: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 14 03:53:15.906: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 14 03:53:15.906: INFO: update-demo-nautilus-wncdz is verified up and running
  May 14 03:53:15.906: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-5593 get pods update-demo-nautilus-wwzkj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 14 03:53:15.983: INFO: stderr: ""
  May 14 03:53:15.983: INFO: stdout: "true"
  May 14 03:53:15.983: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-5593 get pods update-demo-nautilus-wwzkj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 14 03:53:16.041: INFO: stderr: ""
  May 14 03:53:16.041: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 14 03:53:16.041: INFO: validating pod update-demo-nautilus-wwzkj
  May 14 03:53:16.046: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 14 03:53:16.046: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 14 03:53:16.046: INFO: update-demo-nautilus-wwzkj is verified up and running
  STEP: using delete to clean up resources @ 05/14/24 03:53:16.046
  May 14 03:53:16.046: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-5593 delete --grace-period=0 --force -f -'
  May 14 03:53:16.119: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 14 03:53:16.119: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  May 14 03:53:16.119: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-5593 get rc,svc -l name=update-demo --no-headers'
  May 14 03:53:16.192: INFO: stderr: "No resources found in kubectl-5593 namespace.\n"
  May 14 03:53:16.192: INFO: stdout: ""
  May 14 03:53:16.192: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-5593 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  May 14 03:53:16.257: INFO: stderr: ""
  May 14 03:53:16.257: INFO: stdout: ""
  May 14 03:53:16.257: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5593" for this suite. @ 05/14/24 03:53:16.264
• [14.004 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:213
  STEP: Creating a kubernetes client @ 05/14/24 03:53:16.273
  May 14 03:53:16.273: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/14/24 03:53:16.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:53:16.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:53:16.306
  STEP: create the container to handle the HTTPGet hook request. @ 05/14/24 03:53:16.313
  STEP: create the pod with lifecycle hook @ 05/14/24 03:53:18.344
  STEP: delete the pod with lifecycle hook @ 05/14/24 03:53:20.368
  STEP: check prestop hook @ 05/14/24 03:53:22.398
  May 14 03:53:22.415: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-197" for this suite. @ 05/14/24 03:53:22.421
• [6.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 05/14/24 03:53:22.433
  May 14 03:53:22.433: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename downward-api @ 05/14/24 03:53:22.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:53:22.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:53:22.463
  STEP: Creating a pod to test downward API volume plugin @ 05/14/24 03:53:22.465
  STEP: Saw pod success @ 05/14/24 03:53:26.553
  May 14 03:53:26.556: INFO: Trying to get logs from node viola-paas-worker03 pod downwardapi-volume-d8609e8e-157d-4d36-a450-af3f4687eacc container client-container: <nil>
  STEP: delete the pod @ 05/14/24 03:53:26.561
  May 14 03:53:26.589: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1853" for this suite. @ 05/14/24 03:53:26.594
• [4.174 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 05/14/24 03:53:26.607
  May 14 03:53:26.607: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename secrets @ 05/14/24 03:53:26.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:53:26.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:53:26.641
  STEP: Creating secret with name secret-test-c049de8a-9dbf-4472-a9b1-3675299a7fe2 @ 05/14/24 03:53:26.643
  STEP: Creating a pod to test consume secrets @ 05/14/24 03:53:26.654
  STEP: Saw pod success @ 05/14/24 03:53:30.692
  May 14 03:53:30.696: INFO: Trying to get logs from node viola-paas-worker03 pod pod-secrets-ac702038-b89e-41f5-ae7f-f74873ed0394 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/14/24 03:53:30.703
  May 14 03:53:30.732: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7278" for this suite. @ 05/14/24 03:53:30.738
• [4.140 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]
test/e2e/apps/statefulset.go:1030
  STEP: Creating a kubernetes client @ 05/14/24 03:53:30.747
  May 14 03:53:30.747: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename statefulset @ 05/14/24 03:53:30.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:53:30.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:53:30.801
  STEP: Creating service test in namespace statefulset-2578 @ 05/14/24 03:53:30.804
  STEP: Creating statefulset ss in namespace statefulset-2578 @ 05/14/24 03:53:30.818
  May 14 03:53:30.833: INFO: Found 0 stateful pods, waiting for 1
  May 14 03:53:40.839: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 05/14/24 03:53:40.846
  STEP: Getting /status @ 05/14/24 03:53:40.866
  May 14 03:53:40.870: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 05/14/24 03:53:40.87
  May 14 03:53:41.094: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 05/14/24 03:53:41.094
  May 14 03:53:41.096: INFO: Observed &StatefulSet event: ADDED
  May 14 03:53:41.096: INFO: Found Statefulset ss in namespace statefulset-2578 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May 14 03:53:41.096: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 05/14/24 03:53:41.096
  May 14 03:53:41.096: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  May 14 03:53:41.107: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 05/14/24 03:53:41.107
  May 14 03:53:41.109: INFO: Observed &StatefulSet event: ADDED
  May 14 03:53:41.109: INFO: Observed Statefulset ss in namespace statefulset-2578 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May 14 03:53:41.109: INFO: Observed &StatefulSet event: MODIFIED
  May 14 03:53:41.109: INFO: Deleting all statefulset in ns statefulset-2578
  May 14 03:53:41.112: INFO: Scaling statefulset ss to 0
  May 14 03:53:51.142: INFO: Waiting for statefulset status.replicas updated to 0
  May 14 03:53:51.146: INFO: Deleting statefulset ss
  May 14 03:53:51.161: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2578" for this suite. @ 05/14/24 03:53:51.166
• [20.425 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance]
test/e2e/common/node/lease.go:72
  STEP: Creating a kubernetes client @ 05/14/24 03:53:51.174
  May 14 03:53:51.174: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename lease-test @ 05/14/24 03:53:51.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:53:51.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:53:51.232
  May 14 03:53:51.306: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-9981" for this suite. @ 05/14/24 03:53:51.312
• [0.149 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]
test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 05/14/24 03:53:51.323
  May 14 03:53:51.323: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename sched-pred @ 05/14/24 03:53:51.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:53:51.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:53:51.35
  May 14 03:53:51.357: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  May 14 03:53:51.368: INFO: Waiting for terminating namespaces to be deleted...
  May 14 03:53:51.371: INFO: 
  Logging pods the apiserver thinks is on node viola-paas-ingress01 before test
  May 14 03:53:51.387: INFO: vault-0 from common-datastore started at 2024-05-13 09:32:36 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.387: INFO: 	Container vault ready: true, restart count 0
  May 14 03:53:51.388: INFO: ingress-nginx-controller-dnlvp from ingress-nginx started at 2024-05-14 01:12:07 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.388: INFO: 	Container controller ready: true, restart count 0
  May 14 03:53:51.388: INFO: istio-ingress-mmtwf from istio-system started at 2024-05-14 01:12:07 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.388: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:53:51.388: INFO: istio-user-ingress-nwwkw from istio-user-system started at 2024-05-14 01:12:07 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.388: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:53:51.388: INFO: cilium-r9ckd from kube-system started at 2024-05-14 02:21:02 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.388: INFO: 	Container cilium-agent ready: true, restart count 0
  May 14 03:53:51.388: INFO: kube-proxy-6dkxt from kube-system started at 2024-05-13 12:02:37 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.388: INFO: 	Container kube-proxy ready: true, restart count 0
  May 14 03:53:51.388: INFO: prometheus-stack-prometheus-node-exporter-cnrmz from mgmt started at 2024-03-28 12:03:16 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.388: INFO: 	Container node-exporter ready: true, restart count 1
  May 14 03:53:51.388: INFO: sonobuoy-systemd-logs-daemon-set-1b7153daae854a0a-l2wdq from sonobuoy started at 2024-05-14 03:38:24 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.388: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 14 03:53:51.388: INFO: 	Container systemd-logs ready: true, restart count 0
  May 14 03:53:51.388: INFO: 
  Logging pods the apiserver thinks is on node viola-paas-ingress02 before test
  May 14 03:53:51.412: INFO: ingress-nginx-controller-h79jc from ingress-nginx started at 2024-05-14 01:12:10 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.412: INFO: 	Container controller ready: true, restart count 0
  May 14 03:53:51.412: INFO: istio-ingress-x8srp from istio-system started at 2024-05-14 01:12:10 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.412: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:53:51.412: INFO: istio-user-ingress-c5fg4 from istio-user-system started at 2024-05-14 01:12:10 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.412: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:53:51.412: INFO: cilium-ds74x from kube-system started at 2024-05-14 02:19:05 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.412: INFO: 	Container cilium-agent ready: true, restart count 0
  May 14 03:53:51.412: INFO: kube-proxy-zmkl9 from kube-system started at 2024-05-13 12:02:41 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.412: INFO: 	Container kube-proxy ready: true, restart count 0
  May 14 03:53:51.412: INFO: prometheus-stack-prometheus-node-exporter-7ktxd from mgmt started at 2024-03-28 12:03:14 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.412: INFO: 	Container node-exporter ready: true, restart count 3
  May 14 03:53:51.412: INFO: sonobuoy-systemd-logs-daemon-set-1b7153daae854a0a-rkcz2 from sonobuoy started at 2024-05-14 03:38:24 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.412: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 14 03:53:51.412: INFO: 	Container systemd-logs ready: true, restart count 0
  May 14 03:53:51.412: INFO: 
  Logging pods the apiserver thinks is on node viola-paas-worker01 before test
  May 14 03:53:51.431: INFO: keycloak-7dfcdb954d-ddtkq from auth started at 2024-05-13 09:32:27 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.431: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:53:51.431: INFO: 	Container keycloak ready: true, restart count 0
  May 14 03:53:51.431: INFO: oauth2-admin-redis-67b99d7dd8-pdcqg from auth started at 2024-03-28 13:06:51 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.431: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:53:51.431: INFO: 	Container redis ready: true, restart count 0
  May 14 03:53:51.431: INFO: oauth2-proxy-admin-5c875b487b-r7245 from auth started at 2024-03-28 13:06:51 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.431: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:53:51.431: INFO: 	Container oauth2-proxy-admin ready: true, restart count 1
  May 14 03:53:51.431: INFO: oauth2-user-redis-dc4bfdccb-b8mwc from auth started at 2024-05-13 09:32:28 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.431: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:53:51.431: INFO: 	Container redis ready: true, restart count 0
  May 14 03:53:51.431: INFO: cloud-service-api-59c74dd867-sq7s5 from cmp started at 2024-04-18 05:43:52 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.431: INFO: 	Container cloud-service-api ready: true, restart count 0
  May 14 03:53:51.431: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:53:51.431: INFO: maestro-common-api-user-8dbfd65-w2hqr from cmp started at 2024-05-09 07:53:01 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.431: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:53:51.431: INFO: 	Container maestro-common-api ready: true, restart count 0
  May 14 03:53:51.431: INFO: maestro-remote-app-admin-84cc4549f9-hjxwv from cmp started at 2024-05-10 04:04:26 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.431: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:53:51.431: INFO: 	Container maestro-remote-app ready: true, restart count 0
  May 14 03:53:51.431: INFO: maestro-remote-app-user-67fbbdc5-jzhd7 from cmp started at 2024-05-10 04:04:43 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.431: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:53:51.431: INFO: 	Container maestro-remote-app ready: true, restart count 0
  May 14 03:53:51.431: INFO: notification-adapter-api-69cfc9f979-bvlzf from cmp started at 2024-05-09 07:51:57 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.431: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:53:51.431: INFO: 	Container noti-api ready: true, restart count 0
  May 14 03:53:51.431: INFO: maestro-mariadb-0 from common-datastore started at 2024-04-18 06:31:19 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.431: INFO: 	Container mariadb ready: true, restart count 0
  May 14 03:53:51.431: INFO: my-cluster-entity-operator-779c9f5f4c-rpz6r from common-datastore started at 2024-03-28 07:48:11 +0000 UTC (3 container statuses recorded)
  May 14 03:53:51.431: INFO: 	Container tls-sidecar ready: true, restart count 0
  May 14 03:53:51.431: INFO: 	Container topic-operator ready: true, restart count 1
  May 14 03:53:51.431: INFO: 	Container user-operator ready: true, restart count 1
  May 14 03:53:51.431: INFO: my-cluster-kafka-1 from common-datastore started at 2024-03-28 07:47:41 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.431: INFO: 	Container kafka ready: true, restart count 0
  May 14 03:53:51.431: INFO: my-cluster-zookeeper-1 from common-datastore started at 2024-03-28 07:47:16 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.431: INFO: 	Container zookeeper ready: true, restart count 0
  May 14 03:53:51.431: INFO: strimzi-cluster-operator-666f999656-x2vc4 from common-datastore started at 2024-03-28 07:46:33 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.431: INFO: 	Container strimzi-cluster-operator ready: true, restart count 1
  May 14 03:53:51.431: INFO: vault-2 from common-datastore started at 2024-03-28 06:52:13 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.431: INFO: 	Container vault ready: true, restart count 2
  May 14 03:53:51.431: INFO: cilium-v8g5j from kube-system started at 2024-05-14 02:20:22 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.431: INFO: 	Container cilium-agent ready: true, restart count 0
  May 14 03:53:51.431: INFO: hubble-ui-646869c4b5-mvq7x from kube-system started at 2024-03-27 17:21:13 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.431: INFO: 	Container backend ready: true, restart count 0
  May 14 03:53:51.431: INFO: 	Container frontend ready: true, restart count 0
  May 14 03:53:51.431: INFO: kube-proxy-lc4sl from kube-system started at 2024-05-13 12:02:32 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.431: INFO: 	Container kube-proxy ready: true, restart count 0
  May 14 03:53:51.431: INFO: metrics-server-97d69fdbb-vkp8h from kube-system started at 2024-05-13 09:32:28 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.431: INFO: 	Container metrics-server ready: true, restart count 0
  May 14 03:53:51.431: INFO: alertmanager-prometheus-stack-kube-prom-alertmanager-0 from mgmt started at 2024-05-13 09:32:30 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.431: INFO: 	Container alertmanager ready: true, restart count 0
  May 14 03:53:51.431: INFO: 	Container config-reloader ready: true, restart count 0
  May 14 03:53:51.431: INFO: cert-manager-webhook-856f997ff9-ssskc from mgmt started at 2024-03-27 20:52:27 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.431: INFO: 	Container cert-manager-webhook ready: true, restart count 3
  May 14 03:53:51.431: INFO: prometheus-stack-kube-prom-operator-6d44cc4cd-jmw7g from mgmt started at 2024-03-28 12:03:26 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.431: INFO: 	Container kube-prometheus-stack ready: true, restart count 0
  May 14 03:53:51.431: INFO: prometheus-stack-kube-state-metrics-57875d899b-czk45 from mgmt started at 2024-03-28 12:03:26 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.431: INFO: 	Container kube-state-metrics ready: true, restart count 0
  May 14 03:53:51.431: INFO: prometheus-stack-prometheus-node-exporter-77hhw from mgmt started at 2024-03-28 12:03:26 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.431: INFO: 	Container node-exporter ready: true, restart count 2
  May 14 03:53:51.431: INFO: nfs-subdir-external-provisioner-5694fcbb-vjvn6 from nfs-provisioner started at 2024-03-27 21:06:36 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.431: INFO: 	Container nfs-subdir-external-provisioner ready: true, restart count 31
  May 14 03:53:51.431: INFO: sonobuoy-systemd-logs-daemon-set-1b7153daae854a0a-2rtjg from sonobuoy started at 2024-05-14 03:38:24 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.431: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 14 03:53:51.431: INFO: 	Container systemd-logs ready: true, restart count 0
  May 14 03:53:51.431: INFO: trombone-pipeline-api-admin-57f4974bbb-4r5bp from trombone started at 2024-05-13 09:32:28 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.431: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:53:51.431: INFO: 	Container trombone-pipeline-api ready: true, restart count 1
  May 14 03:53:51.431: INFO: trombone-pipeline-api-user-8c8fcf744-ptxnz from trombone started at 2024-05-13 09:32:28 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.431: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:53:51.431: INFO: 	Container trombone-pipeline-api ready: true, restart count 1
  May 14 03:53:51.431: INFO: trombone-pipeline-app-admin-57b9d994fc-9mpm4 from trombone started at 2024-05-09 07:54:31 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.431: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:53:51.431: INFO: 	Container trombone-pipeline-app ready: true, restart count 0
  May 14 03:53:51.431: INFO: trombone-pipeline-app-user-5478cb9869-kzvqg from trombone started at 2024-05-13 09:32:28 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.431: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:53:51.431: INFO: 	Container trombone-pipeline-app ready: true, restart count 0
  May 14 03:53:51.431: INFO: viola-remote-app-admin-9ff88f5d4-c26c7 from viola started at 2024-05-13 09:32:28 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.432: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:53:51.432: INFO: 	Container viola-remote-app ready: true, restart count 0
  May 14 03:53:51.432: INFO: 
  Logging pods the apiserver thinks is on node viola-paas-worker02 before test
  May 14 03:53:51.453: INFO: mariadb-keycloak-584dff4d9d-pzxmc from auth started at 2024-05-13 09:32:29 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.453: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:53:51.453: INFO: 	Container mariadb-keycloak ready: true, restart count 0
  May 14 03:53:51.453: INFO: oauth2-proxy-user-86844f69f7-snkzn from auth started at 2024-05-13 09:32:27 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.453: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:53:51.453: INFO: 	Container oauth2-proxy-user ready: true, restart count 2
  May 14 03:53:51.453: INFO: cloud-service-collector-bdd5f9bfd-4tnj9 from cmp started at 2024-05-13 09:32:28 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.453: INFO: 	Container cloud-service-collector ready: true, restart count 0
  May 14 03:53:51.453: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:53:51.453: INFO: maestro-auth-gateway-admin-569ddffb77-rfs89 from cmp started at 2024-05-09 07:50:57 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.453: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:53:51.453: INFO: 	Container maestro-auth-gateway ready: true, restart count 0
  May 14 03:53:51.453: INFO: maestro-auth-gateway-user-7b75fb9dfc-7dgjq from cmp started at 2024-05-10 00:34:20 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.453: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:53:51.453: INFO: 	Container maestro-auth-gateway ready: true, restart count 0
  May 14 03:53:51.453: INFO: maestro-common-api-admin-677664dc4c-8t6mm from cmp started at 2024-05-09 07:52:29 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.453: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:53:51.453: INFO: 	Container maestro-common-api ready: true, restart count 0
  May 14 03:53:51.453: INFO: maestro-host-app-admin-569c68fc7c-npbhm from cmp started at 2024-05-09 07:49:19 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.453: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:53:51.453: INFO: 	Container maestro-host-app ready: true, restart count 0
  May 14 03:53:51.453: INFO: maestro-host-app-user-85bd5cc7b9-whm6l from cmp started at 2024-05-09 07:49:40 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.453: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:53:51.453: INFO: 	Container maestro-host-app ready: true, restart count 0
  May 14 03:53:51.453: INFO: maestro-iam-adapter-api-684fbb5445-nrvlj from cmp started at 2024-05-09 07:50:16 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.453: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:53:51.453: INFO: 	Container maestro-iam-adapter-api ready: true, restart count 0
  May 14 03:53:51.453: INFO: my-cluster-kafka-0 from common-datastore started at 2024-05-13 09:32:38 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.453: INFO: 	Container kafka ready: true, restart count 0
  May 14 03:53:51.453: INFO: my-cluster-kafka-2 from common-datastore started at 2024-03-28 07:47:41 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.453: INFO: 	Container kafka ready: true, restart count 0
  May 14 03:53:51.453: INFO: my-cluster-zookeeper-0 from common-datastore started at 2024-05-13 09:32:31 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.453: INFO: 	Container zookeeper ready: true, restart count 0
  May 14 03:53:51.453: INFO: my-cluster-zookeeper-2 from common-datastore started at 2024-03-28 07:47:16 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.453: INFO: 	Container zookeeper ready: true, restart count 0
  May 14 03:53:51.453: INFO: single-redis-0 from common-datastore started at 2024-05-13 09:32:30 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.453: INFO: 	Container redis ready: true, restart count 0
  May 14 03:53:51.453: INFO: vault-1 from common-datastore started at 2024-03-28 07:00:49 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.453: INFO: 	Container vault ready: true, restart count 2
  May 14 03:53:51.453: INFO: istiod-56d7d75486-vmxxc from istio-system started at 2024-03-27 21:21:52 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.453: INFO: 	Container discovery ready: true, restart count 23
  May 14 03:53:51.453: INFO: cilium-z6wbd from kube-system started at 2024-05-14 02:22:04 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.453: INFO: 	Container cilium-agent ready: true, restart count 0
  May 14 03:53:51.453: INFO: hubble-relay-54d87f994b-w2kxc from kube-system started at 2024-03-27 17:21:13 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.453: INFO: 	Container hubble-relay ready: true, restart count 0
  May 14 03:53:51.453: INFO: kube-proxy-j6rpg from kube-system started at 2024-05-13 12:02:35 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.453: INFO: 	Container kube-proxy ready: true, restart count 0
  May 14 03:53:51.453: INFO: metrics-server-97d69fdbb-g84tz from kube-system started at 2024-03-27 20:50:53 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.453: INFO: 	Container metrics-server ready: true, restart count 5
  May 14 03:53:51.453: INFO: cert-manager-58b499b456-l7dqk from mgmt started at 2024-03-27 20:52:27 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.453: INFO: 	Container cert-manager-controller ready: true, restart count 30
  May 14 03:53:51.453: INFO: cert-manager-cainjector-6b5ffc8c69-qwqwr from mgmt started at 2024-05-13 09:32:28 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.453: INFO: 	Container cert-manager-cainjector ready: true, restart count 0
  May 14 03:53:51.453: INFO: prometheus-prometheus-stack-kube-prom-prometheus-0 from mgmt started at 2024-03-28 12:31:07 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.453: INFO: 	Container config-reloader ready: true, restart count 0
  May 14 03:53:51.453: INFO: 	Container prometheus ready: true, restart count 15
  May 14 03:53:51.453: INFO: prometheus-stack-grafana-56ccfbdc65-t5fdw from mgmt started at 2024-03-28 12:03:38 +0000 UTC (3 container statuses recorded)
  May 14 03:53:51.453: INFO: 	Container grafana ready: true, restart count 18
  May 14 03:53:51.453: INFO: 	Container grafana-sc-dashboard ready: true, restart count 31
  May 14 03:53:51.453: INFO: 	Container grafana-sc-datasources ready: true, restart count 31
  May 14 03:53:51.453: INFO: prometheus-stack-grafana-image-renderer-6865c676f-2cfxb from mgmt started at 2024-05-13 09:32:28 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.453: INFO: 	Container grafana-image-renderer ready: true, restart count 0
  May 14 03:53:51.453: INFO: prometheus-stack-prometheus-node-exporter-zb7pq from mgmt started at 2024-03-28 12:03:38 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.453: INFO: 	Container node-exporter ready: true, restart count 1
  May 14 03:53:51.453: INFO: nfs-subdir-external-provisioner-5694fcbb-jclrd from nfs-provisioner started at 2024-03-27 21:06:36 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.453: INFO: 	Container nfs-subdir-external-provisioner ready: true, restart count 30
  May 14 03:53:51.453: INFO: nfs-subdir-external-provisioner-5694fcbb-zvtz2 from nfs-provisioner started at 2024-05-13 09:32:29 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.453: INFO: 	Container nfs-subdir-external-provisioner ready: true, restart count 0
  May 14 03:53:51.453: INFO: sonobuoy-systemd-logs-daemon-set-1b7153daae854a0a-4whd9 from sonobuoy started at 2024-05-14 03:38:24 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.453: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 14 03:53:51.453: INFO: 	Container systemd-logs ready: true, restart count 0
  May 14 03:53:51.453: INFO: trombone-remote-app-admin-6956c889dc-v66vp from trombone started at 2024-05-09 07:53:46 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.453: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:53:51.453: INFO: 	Container trombone-remote-app ready: true, restart count 0
  May 14 03:53:51.453: INFO: viola-api-admin-848fc5bd96-xsbj2 from viola started at 2024-05-13 09:32:28 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.453: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:53:51.453: INFO: 	Container viola-api ready: true, restart count 0
  May 14 03:53:51.453: INFO: viola-api-user-68649f6448-s2r85 from viola started at 2024-05-13 09:32:28 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.453: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 03:53:51.453: INFO: 	Container viola-api ready: true, restart count 0
  May 14 03:53:51.453: INFO: 
  Logging pods the apiserver thinks is on node viola-paas-worker03 before test
  May 14 03:53:51.467: INFO: vault-unsealer-28594313-pz6qh from common-datastore started at 2024-05-14 03:53:00 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.467: INFO: 	Container unsealer ready: false, restart count 0
  May 14 03:53:51.467: INFO: cilium-dlqdw from kube-system started at 2024-05-14 02:22:35 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.467: INFO: 	Container cilium-agent ready: true, restart count 0
  May 14 03:53:51.467: INFO: cilium-operator-f5b4997d6-pqkmc from kube-system started at 2024-05-14 02:27:02 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.467: INFO: 	Container cilium-operator ready: true, restart count 0
  May 14 03:53:51.467: INFO: kube-proxy-n6xhs from kube-system started at 2024-05-13 12:02:44 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.468: INFO: 	Container kube-proxy ready: true, restart count 0
  May 14 03:53:51.468: INFO: prometheus-stack-prometheus-node-exporter-zq2jt from mgmt started at 2024-03-28 12:03:14 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.468: INFO: 	Container node-exporter ready: true, restart count 1
  May 14 03:53:51.468: INFO: sonobuoy from sonobuoy started at 2024-05-14 03:38:23 +0000 UTC (1 container statuses recorded)
  May 14 03:53:51.468: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  May 14 03:53:51.468: INFO: sonobuoy-e2e-job-f032179957ad4a3a from sonobuoy started at 2024-05-14 03:38:24 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.468: INFO: 	Container e2e ready: true, restart count 0
  May 14 03:53:51.468: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 14 03:53:51.468: INFO: sonobuoy-systemd-logs-daemon-set-1b7153daae854a0a-bwsh7 from sonobuoy started at 2024-05-14 03:38:24 +0000 UTC (2 container statuses recorded)
  May 14 03:53:51.468: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 14 03:53:51.468: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/14/24 03:53:51.469
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/14/24 03:53:53.495
  STEP: Trying to apply a random label on the found node. @ 05/14/24 03:53:53.512
  STEP: verifying the node has the label kubernetes.io/e2e-aa349c9a-f681-422e-99a0-5deadcc8fc81 42 @ 05/14/24 03:53:53.53
  STEP: Trying to relaunch the pod, now with labels. @ 05/14/24 03:53:53.535
  STEP: removing the label kubernetes.io/e2e-aa349c9a-f681-422e-99a0-5deadcc8fc81 off the node viola-paas-worker03 @ 05/14/24 03:53:55.559
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-aa349c9a-f681-422e-99a0-5deadcc8fc81 @ 05/14/24 03:53:55.576
  May 14 03:53:55.581: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2012" for this suite. @ 05/14/24 03:53:55.592
• [4.277 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 05/14/24 03:53:55.605
  May 14 03:53:55.605: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename kubelet-test @ 05/14/24 03:53:55.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:53:55.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:53:55.635
  May 14 03:53:57.673: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1623" for this suite. @ 05/14/24 03:53:57.679
• [2.080 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance]
test/e2e/apps/controller_revision.go:124
  STEP: Creating a kubernetes client @ 05/14/24 03:53:57.686
  May 14 03:53:57.686: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename controllerrevisions @ 05/14/24 03:53:57.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:53:57.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:53:57.714
  STEP: Creating DaemonSet "e2e-nc7r9-daemon-set" @ 05/14/24 03:53:57.746
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/14/24 03:53:57.759
  May 14 03:53:57.764: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 03:53:57.764: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 03:53:57.764: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 03:53:57.769: INFO: Number of nodes with available pods controlled by daemonset e2e-nc7r9-daemon-set: 0
  May 14 03:53:57.769: INFO: Node viola-paas-ingress01 is running 0 daemon pod, expected 1
  May 14 03:53:58.776: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 03:53:58.776: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 03:53:58.776: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 03:53:58.780: INFO: Number of nodes with available pods controlled by daemonset e2e-nc7r9-daemon-set: 0
  May 14 03:53:58.780: INFO: Node viola-paas-ingress01 is running 0 daemon pod, expected 1
  May 14 03:53:59.780: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 03:53:59.780: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 03:53:59.780: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 03:53:59.784: INFO: Number of nodes with available pods controlled by daemonset e2e-nc7r9-daemon-set: 5
  May 14 03:53:59.784: INFO: Number of running nodes: 5, number of available pods: 5 in daemonset e2e-nc7r9-daemon-set
  STEP: Confirm DaemonSet "e2e-nc7r9-daemon-set" successfully created with "daemonset-name=e2e-nc7r9-daemon-set" label @ 05/14/24 03:53:59.787
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-nc7r9-daemon-set" @ 05/14/24 03:53:59.793
  May 14 03:53:59.797: INFO: Located ControllerRevision: "e2e-nc7r9-daemon-set-8c9f9bb6"
  STEP: Patching ControllerRevision "e2e-nc7r9-daemon-set-8c9f9bb6" @ 05/14/24 03:53:59.799
  May 14 03:53:59.874: INFO: e2e-nc7r9-daemon-set-8c9f9bb6 has been patched
  STEP: Create a new ControllerRevision @ 05/14/24 03:53:59.874
  May 14 03:53:59.917: INFO: Created ControllerRevision: e2e-nc7r9-daemon-set-d45799b64
  STEP: Confirm that there are two ControllerRevisions @ 05/14/24 03:53:59.917
  May 14 03:53:59.917: INFO: Requesting list of ControllerRevisions to confirm quantity
  May 14 03:53:59.927: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-nc7r9-daemon-set-8c9f9bb6" @ 05/14/24 03:53:59.927
  STEP: Confirm that there is only one ControllerRevision @ 05/14/24 03:53:59.972
  May 14 03:53:59.972: INFO: Requesting list of ControllerRevisions to confirm quantity
  May 14 03:53:59.976: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-nc7r9-daemon-set-d45799b64" @ 05/14/24 03:53:59.991
  May 14 03:54:00.006: INFO: e2e-nc7r9-daemon-set-d45799b64 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 05/14/24 03:54:00.006
  W0514 03:54:00.034281      23 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 05/14/24 03:54:00.034
  May 14 03:54:00.034: INFO: Requesting list of ControllerRevisions to confirm quantity
  May 14 03:54:01.044: INFO: Requesting list of ControllerRevisions to confirm quantity
  May 14 03:54:01.047: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-nc7r9-daemon-set-d45799b64=updated" @ 05/14/24 03:54:01.048
  STEP: Confirm that there is only one ControllerRevision @ 05/14/24 03:54:01.056
  May 14 03:54:01.056: INFO: Requesting list of ControllerRevisions to confirm quantity
  May 14 03:54:01.059: INFO: Found 1 ControllerRevisions
  May 14 03:54:01.062: INFO: ControllerRevision "e2e-nc7r9-daemon-set-85976db849" has revision 3
  STEP: Deleting DaemonSet "e2e-nc7r9-daemon-set" @ 05/14/24 03:54:01.065
  STEP: deleting DaemonSet.extensions e2e-nc7r9-daemon-set in namespace controllerrevisions-82, will wait for the garbage collector to delete the pods @ 05/14/24 03:54:01.065
  May 14 03:54:01.126: INFO: Deleting DaemonSet.extensions e2e-nc7r9-daemon-set took: 8.303425ms
  May 14 03:54:01.227: INFO: Terminating DaemonSet.extensions e2e-nc7r9-daemon-set pods took: 101.16705ms
  May 14 03:54:03.534: INFO: Number of nodes with available pods controlled by daemonset e2e-nc7r9-daemon-set: 0
  May 14 03:54:03.534: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-nc7r9-daemon-set
  May 14 03:54:03.538: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26303387"},"items":null}

  May 14 03:54:03.541: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26303387"},"items":null}

  May 14 03:54:03.558: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-82" for this suite. @ 05/14/24 03:54:03.562
• [5.889 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 05/14/24 03:54:03.576
  May 14 03:54:03.576: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename container-runtime @ 05/14/24 03:54:03.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:54:03.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:54:03.61
  STEP: create the container @ 05/14/24 03:54:03.613
  W0514 03:54:03.621519      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/14/24 03:54:03.621
  STEP: get the container status @ 05/14/24 03:54:06.644
  STEP: the container should be terminated @ 05/14/24 03:54:06.648
  STEP: the termination message should be set @ 05/14/24 03:54:06.648
  May 14 03:54:06.648: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 05/14/24 03:54:06.648
  May 14 03:54:06.670: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7935" for this suite. @ 05/14/24 03:54:06.678
• [3.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 05/14/24 03:54:06.686
  May 14 03:54:06.686: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename projected @ 05/14/24 03:54:06.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:54:06.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:54:06.713
  STEP: Creating projection with secret that has name projected-secret-test-92aa34ec-4d4f-44c9-8fc1-7a4874a20fe2 @ 05/14/24 03:54:06.715
  STEP: Creating a pod to test consume secrets @ 05/14/24 03:54:06.727
  STEP: Saw pod success @ 05/14/24 03:54:10.753
  May 14 03:54:10.756: INFO: Trying to get logs from node viola-paas-worker03 pod pod-projected-secrets-f8550074-e295-407c-8d79-27fa121055a1 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/14/24 03:54:10.761
  May 14 03:54:10.783: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9907" for this suite. @ 05/14/24 03:54:10.788
• [4.110 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 05/14/24 03:54:10.796
  May 14 03:54:10.796: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename services @ 05/14/24 03:54:10.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:54:10.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:54:10.827
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-3516 @ 05/14/24 03:54:10.83
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/14/24 03:54:10.857
  STEP: creating service externalsvc in namespace services-3516 @ 05/14/24 03:54:10.858
  STEP: creating replication controller externalsvc in namespace services-3516 @ 05/14/24 03:54:10.904
  I0514 03:54:11.120439      23 runners.go:197] Created replication controller with name: externalsvc, namespace: services-3516, replica count: 2
  I0514 03:54:14.172180      23 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 05/14/24 03:54:14.177
  May 14 03:54:14.210: INFO: Creating new exec pod
  May 14 03:54:16.235: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-3516 exec execpodbfjwr -- /bin/sh -x -c nslookup nodeport-service.services-3516.svc.cluster.local'
  May 14 03:54:16.407: INFO: stderr: "+ nslookup nodeport-service.services-3516.svc.cluster.local\n"
  May 14 03:54:16.407: INFO: stdout: "Server:\t\t10.233.0.3\nAddress:\t10.233.0.3#53\n\nnodeport-service.services-3516.svc.cluster.local\tcanonical name = externalsvc.services-3516.svc.cluster.local.\nName:\texternalsvc.services-3516.svc.cluster.local\nAddress: 10.233.33.193\n\n"
  May 14 03:54:16.407: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-3516, will wait for the garbage collector to delete the pods @ 05/14/24 03:54:16.414
  May 14 03:54:16.479: INFO: Deleting ReplicationController externalsvc took: 11.427203ms
  May 14 03:54:16.579: INFO: Terminating ReplicationController externalsvc pods took: 100.551773ms
  May 14 03:54:20.012: INFO: Cleaning up the NodePort to ExternalName test service
  STEP: Destroying namespace "services-3516" for this suite. @ 05/14/24 03:54:20.038
• [9.254 seconds]
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]
test/e2e/network/endpointslice.go:355
  STEP: Creating a kubernetes client @ 05/14/24 03:54:20.05
  May 14 03:54:20.050: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename endpointslice @ 05/14/24 03:54:20.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:54:20.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:54:20.106
  STEP: getting /apis @ 05/14/24 03:54:20.109
  STEP: getting /apis/discovery.k8s.io @ 05/14/24 03:54:20.117
  STEP: getting /apis/discovery.k8s.iov1 @ 05/14/24 03:54:20.118
  STEP: creating @ 05/14/24 03:54:20.119
  STEP: getting @ 05/14/24 03:54:20.173
  STEP: listing @ 05/14/24 03:54:20.177
  STEP: watching @ 05/14/24 03:54:20.18
  May 14 03:54:20.180: INFO: starting watch
  STEP: cluster-wide listing @ 05/14/24 03:54:20.18
  STEP: cluster-wide watching @ 05/14/24 03:54:20.185
  May 14 03:54:20.185: INFO: starting watch
  STEP: patching @ 05/14/24 03:54:20.187
  STEP: updating @ 05/14/24 03:54:20.209
  May 14 03:54:20.218: INFO: waiting for watch events with expected annotations
  May 14 03:54:20.219: INFO: saw patched and updated annotations
  STEP: deleting @ 05/14/24 03:54:20.219
  STEP: deleting a collection @ 05/14/24 03:54:20.232
  May 14 03:54:20.252: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8873" for this suite. @ 05/14/24 03:54:20.258
• [0.216 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:135
  STEP: Creating a kubernetes client @ 05/14/24 03:54:20.265
  May 14 03:54:20.265: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/14/24 03:54:20.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:54:20.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:54:20.316
  STEP: create the container to handle the HTTPGet hook request. @ 05/14/24 03:54:20.324
  STEP: create the pod with lifecycle hook @ 05/14/24 03:54:22.355
  STEP: check poststart hook @ 05/14/24 03:54:24.394
  STEP: delete the pod with lifecycle hook @ 05/14/24 03:54:24.401
  May 14 03:54:26.421: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3488" for this suite. @ 05/14/24 03:54:26.428
• [6.247 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
test/e2e/apimachinery/aggregator.go:96
  STEP: Creating a kubernetes client @ 05/14/24 03:54:26.513
  May 14 03:54:26.513: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename aggregator @ 05/14/24 03:54:26.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:54:26.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:54:26.594
  May 14 03:54:26.596: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Registering the sample API server. @ 05/14/24 03:54:26.597
  May 14 03:54:27.157: INFO: Found ClusterRoles; assuming RBAC is enabled.
  May 14 03:54:27.202: INFO: new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  May 14 03:54:29.272: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 14 03:54:31.277: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 14 03:54:33.278: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 14 03:54:35.279: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 14 03:54:37.278: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 14 03:54:39.277: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 14 03:54:41.278: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 14 03:54:43.277: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 14 03:54:45.277: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 14 03:54:47.279: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 14 03:54:49.279: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 3, 54, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 14 03:54:51.400: INFO: Waited 114.7448ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 05/14/24 03:54:51.456
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 05/14/24 03:54:51.46
  STEP: List APIServices @ 05/14/24 03:54:51.48
  May 14 03:54:51.487: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 05/14/24 03:54:51.487
  May 14 03:54:51.504: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 05/14/24 03:54:51.504
  May 14 03:54:51.516: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.May, 14, 3, 54, 51, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 05/14/24 03:54:51.516
  May 14 03:54:51.520: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-05-14 03:54:51 +0000 UTC Passed all checks passed}
  May 14 03:54:51.520: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May 14 03:54:51.520: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 05/14/24 03:54:51.52
  May 14 03:54:51.535: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete APIService "dynamic-flunder-481579742" @ 05/14/24 03:54:51.535
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 05/14/24 03:54:51.548
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 05/14/24 03:54:51.557
  STEP: Patch APIService Status @ 05/14/24 03:54:51.56
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 05/14/24 03:54:51.575
  May 14 03:54:51.578: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-05-14 03:54:51 +0000 UTC Passed all checks passed}
  May 14 03:54:51.579: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May 14 03:54:51.579: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  May 14 03:54:51.579: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "e2e-apiservice=patched" @ 05/14/24 03:54:51.579
  STEP: Confirm that the generated APIService has been deleted @ 05/14/24 03:54:51.588
  May 14 03:54:51.588: INFO: Requesting list of APIServices to confirm quantity
  May 14 03:54:51.593: INFO: Found 0 APIService with label "e2e-apiservice=patched"
  May 14 03:54:51.593: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  May 14 03:54:52.019: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-6271" for this suite. @ 05/14/24 03:54:52.062
• [25.563 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 05/14/24 03:54:52.077
  May 14 03:54:52.077: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename disruption @ 05/14/24 03:54:52.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:54:52.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:54:52.115
  STEP: creating the pdb @ 05/14/24 03:54:52.117
  STEP: Waiting for the pdb to be processed @ 05/14/24 03:54:52.124
  STEP: updating the pdb @ 05/14/24 03:54:54.133
  STEP: Waiting for the pdb to be processed @ 05/14/24 03:54:54.146
  STEP: patching the pdb @ 05/14/24 03:54:56.154
  STEP: Waiting for the pdb to be processed @ 05/14/24 03:54:56.178
  STEP: Waiting for the pdb to be deleted @ 05/14/24 03:54:58.201
  May 14 03:54:58.205: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5089" for this suite. @ 05/14/24 03:54:58.21
• [6.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 05/14/24 03:54:58.232
  May 14 03:54:58.232: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename services @ 05/14/24 03:54:58.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:54:58.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:54:58.275
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-4558 @ 05/14/24 03:54:58.279
  STEP: changing the ExternalName service to type=ClusterIP @ 05/14/24 03:54:58.289
  STEP: creating replication controller externalname-service in namespace services-4558 @ 05/14/24 03:54:58.31
  I0514 03:54:58.329788      23 runners.go:197] Created replication controller with name: externalname-service, namespace: services-4558, replica count: 2
  I0514 03:55:01.381066      23 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 14 03:55:01.381: INFO: Creating new exec pod
  May 14 03:55:04.398: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-4558 exec execpodzcdm8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  May 14 03:55:04.520: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  May 14 03:55:04.520: INFO: stdout: "externalname-service-68dzr"
  May 14 03:55:04.520: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-4558 exec execpodzcdm8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.7.229 80'
  May 14 03:55:04.624: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.7.229 80\nConnection to 10.233.7.229 80 port [tcp/http] succeeded!\n"
  May 14 03:55:04.624: INFO: stdout: "externalname-service-p2fsx"
  May 14 03:55:04.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May 14 03:55:04.631: INFO: Cleaning up the ExternalName to ClusterIP test service
  STEP: Destroying namespace "services-4558" for this suite. @ 05/14/24 03:55:04.658
• [6.446 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 05/14/24 03:55:04.679
  May 14 03:55:04.679: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename taint-multiple-pods @ 05/14/24 03:55:04.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:55:04.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:55:04.713
  May 14 03:55:04.716: INFO: Waiting up to 1m0s for all nodes to be ready
  May 14 03:56:04.799: INFO: Waiting for terminating namespaces to be deleted...
  May 14 03:56:04.803: INFO: Starting informer...
  STEP: Starting pods... @ 05/14/24 03:56:04.803
  May 14 03:56:05.025: INFO: Pod1 is running on viola-paas-worker03. Tainting Node
  May 14 03:56:07.252: INFO: Pod2 is running on viola-paas-worker03. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/14/24 03:56:07.252
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/14/24 03:56:07.271
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 05/14/24 03:56:07.276
  May 14 03:56:13.284: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  May 14 03:56:33.339: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  May 14 03:56:33.339: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/14/24 03:56:33.363
  STEP: Destroying namespace "taint-multiple-pods-6821" for this suite. @ 05/14/24 03:56:33.366
• [88.694 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:85
  STEP: Creating a kubernetes client @ 05/14/24 03:56:33.373
  May 14 03:56:33.373: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/14/24 03:56:33.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:56:33.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:56:33.411
  May 14 03:56:33.413: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 03:57:35.345: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4721" for this suite. @ 05/14/24 03:57:35.351
• [61.990 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 05/14/24 03:57:35.366
  May 14 03:57:35.366: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename container-runtime @ 05/14/24 03:57:35.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:57:35.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:57:35.405
  STEP: create the container @ 05/14/24 03:57:35.408
  W0514 03:57:35.417536      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 05/14/24 03:57:35.417
  STEP: get the container status @ 05/14/24 03:57:38.439
  STEP: the container should be terminated @ 05/14/24 03:57:38.442
  STEP: the termination message should be set @ 05/14/24 03:57:38.443
  May 14 03:57:38.443: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/14/24 03:57:38.443
  May 14 03:57:38.465: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3232" for this suite. @ 05/14/24 03:57:38.475
• [3.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 05/14/24 03:57:38.491
  May 14 03:57:38.491: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename cronjob @ 05/14/24 03:57:38.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 03:57:38.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 03:57:38.523
  STEP: Creating a suspended cronjob @ 05/14/24 03:57:38.526
  STEP: Ensuring no jobs are scheduled @ 05/14/24 03:57:38.532
  STEP: Ensuring no job exists by listing jobs explicitly @ 05/14/24 04:02:38.542
  STEP: Removing cronjob @ 05/14/24 04:02:38.546
  May 14 04:02:38.554: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9322" for this suite. @ 05/14/24 04:02:38.56
• [300.083 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]
test/e2e/kubectl/kubectl.go:830
  STEP: Creating a kubernetes client @ 05/14/24 04:02:38.575
  May 14 04:02:38.575: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename kubectl @ 05/14/24 04:02:38.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:02:38.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:02:38.608
  STEP: validating api versions @ 05/14/24 04:02:38.612
  May 14 04:02:38.612: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-2928 api-versions'
  May 14 04:02:38.687: INFO: stderr: ""
  May 14 04:02:38.687: INFO: stdout: "acme.cert-manager.io/v1\nadmissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncert-manager.io/v1\ncertificates.k8s.io/v1\ncilium.io/v2\ncilium.io/v2alpha1\ncoordination.k8s.io/v1\ncore.strimzi.io/v1beta2\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nextensions.istio.io/v1alpha1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\ninstall.istio.io/v1alpha1\nkafka.strimzi.io/v1alpha1\nkafka.strimzi.io/v1beta1\nkafka.strimzi.io/v1beta2\nmetrics.k8s.io/v1beta1\nmonitoring.coreos.com/v1\nmonitoring.coreos.com/v1alpha1\nnetworking.istio.io/v1alpha3\nnetworking.istio.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nsecurity.istio.io/v1\nsecurity.istio.io/v1beta1\nstorage.k8s.io/v1\ntelemetry.istio.io/v1alpha1\nv1\n"
  May 14 04:02:38.687: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2928" for this suite. @ 05/14/24 04:02:38.695
• [0.127 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 05/14/24 04:02:38.702
  May 14 04:02:38.702: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename downward-api @ 05/14/24 04:02:38.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:02:38.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:02:38.741
  STEP: Creating a pod to test downward API volume plugin @ 05/14/24 04:02:38.744
  STEP: Saw pod success @ 05/14/24 04:02:42.774
  May 14 04:02:42.777: INFO: Trying to get logs from node viola-paas-worker03 pod downwardapi-volume-c7ed4a45-1758-404b-8a83-7e8253e20d25 container client-container: <nil>
  STEP: delete the pod @ 05/14/24 04:02:42.795
  May 14 04:02:42.817: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5063" for this suite. @ 05/14/24 04:02:42.822
• [4.128 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 05/14/24 04:02:42.83
  May 14 04:02:42.830: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename sched-preemption @ 05/14/24 04:02:42.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:02:42.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:02:42.88
  May 14 04:02:42.900: INFO: Waiting up to 1m0s for all nodes to be ready
  May 14 04:03:42.998: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/14/24 04:03:43.02
  May 14 04:03:43.067: INFO: Created pod: pod0-0-sched-preemption-low-priority
  May 14 04:03:43.087: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  May 14 04:03:43.119: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  May 14 04:03:43.132: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  May 14 04:03:43.184: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  May 14 04:03:43.198: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  May 14 04:03:43.240: INFO: Created pod: pod3-0-sched-preemption-medium-priority
  May 14 04:03:43.251: INFO: Created pod: pod3-1-sched-preemption-medium-priority
  May 14 04:03:43.282: INFO: Created pod: pod4-0-sched-preemption-medium-priority
  May 14 04:03:43.287: INFO: Created pod: pod4-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/14/24 04:03:43.287
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 05/14/24 04:03:45.333
  May 14 04:03:49.382: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6267" for this suite. @ 05/14/24 04:03:49.453
• [66.633 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 05/14/24 04:03:49.464
  May 14 04:03:49.464: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename webhook @ 05/14/24 04:03:49.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:03:49.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:03:49.493
  STEP: Setting up server cert @ 05/14/24 04:03:49.54
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/14/24 04:03:49.757
  STEP: Deploying the webhook pod @ 05/14/24 04:03:49.769
  STEP: Wait for the deployment to be ready @ 05/14/24 04:03:49.788
  May 14 04:03:49.817: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/14/24 04:03:51.829
  STEP: Verifying the service has paired with the endpoint @ 05/14/24 04:03:51.849
  May 14 04:03:52.849: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 05/14/24 04:03:52.857
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 05/14/24 04:03:52.858
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 05/14/24 04:03:52.859
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 05/14/24 04:03:52.859
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 05/14/24 04:03:52.86
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/14/24 04:03:52.86
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/14/24 04:03:52.861
  May 14 04:03:52.861: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-289" for this suite. @ 05/14/24 04:03:52.922
  STEP: Destroying namespace "webhook-markers-4374" for this suite. @ 05/14/24 04:03:52.951
• [3.501 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:91
  STEP: Creating a kubernetes client @ 05/14/24 04:03:52.965
  May 14 04:03:52.965: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename downward-api @ 05/14/24 04:03:52.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:03:52.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:03:53.001
  STEP: Creating a pod to test downward api env vars @ 05/14/24 04:03:53.005
  STEP: Saw pod success @ 05/14/24 04:03:57.034
  May 14 04:03:57.037: INFO: Trying to get logs from node viola-paas-worker03 pod downward-api-e2fe8920-5f27-48b1-b8f5-8f9d5f1b62e8 container dapi-container: <nil>
  STEP: delete the pod @ 05/14/24 04:03:57.044
  May 14 04:03:57.065: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7217" for this suite. @ 05/14/24 04:03:57.071
• [4.115 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:127
  STEP: Creating a kubernetes client @ 05/14/24 04:03:57.08
  May 14 04:03:57.080: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename emptydir @ 05/14/24 04:03:57.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:03:57.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:03:57.108
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/14/24 04:03:57.111
  STEP: Saw pod success @ 05/14/24 04:04:01.134
  May 14 04:04:01.138: INFO: Trying to get logs from node viola-paas-worker03 pod pod-9a2622fa-afec-4f83-80c3-eda3f76a69d4 container test-container: <nil>
  STEP: delete the pod @ 05/14/24 04:04:01.144
  May 14 04:04:01.163: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3998" for this suite. @ 05/14/24 04:04:01.168
• [4.096 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 05/14/24 04:04:01.176
  May 14 04:04:01.176: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename projected @ 05/14/24 04:04:01.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:04:01.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:04:01.336
  STEP: Creating secret with name projected-secret-test-1bba1c36-1761-4f51-af73-54c7943a1e24 @ 05/14/24 04:04:01.348
  STEP: Creating a pod to test consume secrets @ 05/14/24 04:04:01.369
  STEP: Saw pod success @ 05/14/24 04:04:05.404
  May 14 04:04:05.407: INFO: Trying to get logs from node viola-paas-worker03 pod pod-projected-secrets-b21b6a4b-cac6-4ffd-b3b1-316865225efb container secret-volume-test: <nil>
  STEP: delete the pod @ 05/14/24 04:04:05.414
  May 14 04:04:05.442: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3670" for this suite. @ 05/14/24 04:04:05.448
• [4.282 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]
test/e2e/common/node/podtemplates.go:53
  STEP: Creating a kubernetes client @ 05/14/24 04:04:05.458
  May 14 04:04:05.458: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename podtemplate @ 05/14/24 04:04:05.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:04:05.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:04:05.503
  May 14 04:04:05.547: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3064" for this suite. @ 05/14/24 04:04:05.552
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 05/14/24 04:04:05.56
  May 14 04:04:05.560: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename webhook @ 05/14/24 04:04:05.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:04:05.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:04:05.6
  STEP: Setting up server cert @ 05/14/24 04:04:05.634
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/14/24 04:04:05.801
  STEP: Deploying the webhook pod @ 05/14/24 04:04:05.808
  STEP: Wait for the deployment to be ready @ 05/14/24 04:04:05.829
  May 14 04:04:05.841: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/14/24 04:04:07.854
  STEP: Verifying the service has paired with the endpoint @ 05/14/24 04:04:07.87
  May 14 04:04:08.870: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  May 14 04:04:08.879: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4769-crds.webhook.example.com via the AdmissionRegistration API @ 05/14/24 04:04:14.392
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/14/24 04:04:14.413
  May 14 04:04:16.443: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-22" for this suite. @ 05/14/24 04:04:17.17
  STEP: Destroying namespace "webhook-markers-6756" for this suite. @ 05/14/24 04:04:17.184
• [11.640 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 05/14/24 04:04:17.201
  May 14 04:04:17.201: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename webhook @ 05/14/24 04:04:17.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:04:17.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:04:17.242
  STEP: Setting up server cert @ 05/14/24 04:04:17.282
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/14/24 04:04:17.613
  STEP: Deploying the webhook pod @ 05/14/24 04:04:17.62
  STEP: Wait for the deployment to be ready @ 05/14/24 04:04:17.64
  May 14 04:04:17.646: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/14/24 04:04:19.658
  STEP: Verifying the service has paired with the endpoint @ 05/14/24 04:04:19.672
  May 14 04:04:20.673: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  May 14 04:04:20.680: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 05/14/24 04:04:26.194
  STEP: Creating a custom resource that should be denied by the webhook @ 05/14/24 04:04:26.216
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 05/14/24 04:04:28.238
  STEP: Updating the custom resource with disallowed data should be denied @ 05/14/24 04:04:28.27
  STEP: Deleting the custom resource should be denied @ 05/14/24 04:04:28.279
  STEP: Remove the offending key and value from the custom resource data @ 05/14/24 04:04:28.286
  STEP: Deleting the updated custom resource should be successful @ 05/14/24 04:04:28.297
  May 14 04:04:28.305: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5774" for this suite. @ 05/14/24 04:04:28.904
  STEP: Destroying namespace "webhook-markers-717" for this suite. @ 05/14/24 04:04:28.913
• [11.718 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 05/14/24 04:04:28.919
  May 14 04:04:28.919: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename projected @ 05/14/24 04:04:28.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:04:28.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:04:28.951
  STEP: Creating configMap with name projected-configmap-test-volume-06305160-d202-4a24-b974-8cef3ce745ae @ 05/14/24 04:04:28.954
  STEP: Creating a pod to test consume configMaps @ 05/14/24 04:04:28.96
  STEP: Saw pod success @ 05/14/24 04:04:32.992
  May 14 04:04:32.995: INFO: Trying to get logs from node viola-paas-worker03 pod pod-projected-configmaps-b74ade7b-fb0e-4232-b9a8-fca90d9a10d7 container agnhost-container: <nil>
  STEP: delete the pod @ 05/14/24 04:04:33
  May 14 04:04:33.026: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1787" for this suite. @ 05/14/24 04:04:33.033
• [4.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 05/14/24 04:04:33.041
  May 14 04:04:33.041: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename webhook @ 05/14/24 04:04:33.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:04:33.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:04:33.086
  STEP: Setting up server cert @ 05/14/24 04:04:33.136
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/14/24 04:04:33.513
  STEP: Deploying the webhook pod @ 05/14/24 04:04:33.526
  STEP: Wait for the deployment to be ready @ 05/14/24 04:04:33.573
  May 14 04:04:33.613: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/14/24 04:04:35.624
  STEP: Verifying the service has paired with the endpoint @ 05/14/24 04:04:35.636
  May 14 04:04:36.636: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/14/24 04:04:36.644
  STEP: create a pod that should be denied by the webhook @ 05/14/24 04:04:36.669
  STEP: create a pod that causes the webhook to hang @ 05/14/24 04:04:36.685
  STEP: create a configmap that should be denied by the webhook @ 05/14/24 04:04:46.712
  STEP: create a configmap that should be admitted by the webhook @ 05/14/24 04:04:46.722
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/14/24 04:04:46.75
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/14/24 04:04:46.763
  STEP: create a namespace that bypass the webhook @ 05/14/24 04:04:46.784
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 05/14/24 04:04:46.825
  May 14 04:04:46.836: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1272" for this suite. @ 05/14/24 04:04:46.917
  STEP: Destroying namespace "webhook-markers-356" for this suite. @ 05/14/24 04:04:46.93
  STEP: Destroying namespace "exempted-namespace-9301" for this suite. @ 05/14/24 04:04:46.942
• [13.918 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 05/14/24 04:04:46.961
  May 14 04:04:46.961: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename cronjob @ 05/14/24 04:04:46.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:04:46.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:04:46.994
  STEP: Creating a cronjob @ 05/14/24 04:04:46.997
  STEP: Ensuring more than one job is running at a time @ 05/14/24 04:04:47.01
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 05/14/24 04:06:01.016
  STEP: Removing cronjob @ 05/14/24 04:06:01.021
  May 14 04:06:01.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5267" for this suite. @ 05/14/24 04:06:01.037
• [74.101 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 05/14/24 04:06:01.062
  May 14 04:06:01.062: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename deployment @ 05/14/24 04:06:01.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:06:01.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:06:01.127
  May 14 04:06:01.130: INFO: Creating deployment "webserver-deployment"
  May 14 04:06:01.144: INFO: Waiting for observed generation 1
  May 14 04:06:03.153: INFO: Waiting for all required pods to come up
  May 14 04:06:03.159: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 05/14/24 04:06:03.159
  May 14 04:06:05.168: INFO: Waiting for deployment "webserver-deployment" to complete
  May 14 04:06:05.175: INFO: Updating deployment "webserver-deployment" with a non-existent image
  May 14 04:06:05.190: INFO: Updating deployment webserver-deployment
  May 14 04:06:05.190: INFO: Waiting for observed generation 2
  May 14 04:06:07.209: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  May 14 04:06:07.217: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  May 14 04:06:07.220: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  May 14 04:06:07.229: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  May 14 04:06:07.229: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  May 14 04:06:07.232: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  May 14 04:06:07.240: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  May 14 04:06:07.241: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  May 14 04:06:07.256: INFO: Updating deployment webserver-deployment
  May 14 04:06:07.256: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  May 14 04:06:07.261: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  May 14 04:06:07.266: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  May 14 04:06:09.278: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d39c0f37-b3b8-4c34-8cb0-5d978dca379f",
      ResourceVersion: (string) (len=8) "26309366",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256361,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 10,
      AvailableReplicas: (int32) 10,
      UnavailableReplicas: (int32) 23,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 14 04:06:09.283: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fac6340f-afe3-4a1c-adaa-08f348d1218d",
      ResourceVersion: (string) (len=8) "26309235",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256365,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "d39c0f37-b3b8-4c34-8cb0-5d978dca379f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 33 39 63 30 66  33 37 2d 62 33 62 38 2d  |\"d39c0f37-b3b8-|
              00000120  34 63 33 34 2d 38 63 62  30 2d 35 64 39 37 38 64  |4c34-8cb0-5d978d|
              00000130  63 61 33 37 39 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ca379f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 14 04:06:09.283: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  May 14 04:06:09.284: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e9ee0258-6c24-4237-a006-dacaba24d2b8",
      ResourceVersion: (string) (len=8) "26309365",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256361,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "d39c0f37-b3b8-4c34-8cb0-5d978dca379f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 33 39 63 30 66  33 37 2d 62 33 62 38 2d  |\"d39c0f37-b3b8-|
              00000120  34 63 33 34 2d 38 63 62  30 2d 35 64 39 37 38 64  |4c34-8cb0-5d978d|
              00000130  63 61 33 37 39 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ca379f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 10,
      AvailableReplicas: (int32) 10,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 14 04:06:09.296: INFO: Pod "webserver-deployment-557759b7c7-2s9ps" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2s9ps",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f98cb3ee-beb6-4116-b567-d2831b80cfc5",
      ResourceVersion: (string) (len=8) "26309259",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e9ee0258-6c24-4237-a006-dacaba24d2b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 65 30 32 35 38 2d 36  |d\":\"e9ee0258-6|
              00000090  63 32 34 2d 34 32 33 37  2d 61 30 30 36 2d 64 61  |c24-4237-a006-da|
              000000a0  63 61 62 61 32 34 64 32  62 38 5c 22 7d 22 3a 7b  |caba24d2b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nd6jb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nd6jb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.165",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.297: INFO: Pod "webserver-deployment-557759b7c7-4zq7c" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4zq7c",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "86131176-29b3-45d2-89f7-1775edf83422",
      ResourceVersion: (string) (len=8) "26309043",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256361,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e9ee0258-6c24-4237-a006-dacaba24d2b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 65 30 32 35 38 2d 36  |d\":\"e9ee0258-6|
              00000090  63 32 34 2d 34 32 33 37  2d 61 30 30 36 2d 64 61  |c24-4237-a006-da|
              000000a0  63 61 62 61 32 34 64 32  62 38 5c 22 7d 22 3a 7b  |caba24d2b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256363,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 37  31 2e 31 37 33 5c 22 7d  |10.233.71.173\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kk25x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kk25x",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256363,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256363,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.165",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.71.173",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.71.173"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256361,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851256362,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3dbaacdd6e0acee7843bf75c4a8bf44077a370e2d02cf59f3fe9a094036795ad",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.298: INFO: Pod "webserver-deployment-557759b7c7-52wm5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-52wm5",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4e1bf7cd-98d4-4bb6-85d6-5caf3674fa68",
      ResourceVersion: (string) (len=8) "26309233",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e9ee0258-6c24-4237-a006-dacaba24d2b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 65 30 32 35 38 2d 36  |d\":\"e9ee0258-6|
              00000090  63 32 34 2d 34 32 33 37  2d 61 30 30 36 2d 64 61  |c24-4237-a006-da|
              000000a0  63 61 62 61 32 34 64 32  62 38 5c 22 7d 22 3a 7b  |caba24d2b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hm72r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hm72r",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.107",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.300: INFO: Pod "webserver-deployment-557759b7c7-5vvz4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5vvz4",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6ece3fdc-7f90-439b-95c2-80dfa81c39b4",
      ResourceVersion: (string) (len=8) "26309044",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256361,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e9ee0258-6c24-4237-a006-dacaba24d2b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 65 30 32 35 38 2d 36  |d\":\"e9ee0258-6|
              00000090  63 32 34 2d 34 32 33 37  2d 61 30 30 36 2d 64 61  |c24-4237-a006-da|
              000000a0  63 61 62 61 32 34 64 32  62 38 5c 22 7d 22 3a 7b  |caba24d2b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256363,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 37  31 2e 33 34 5c 22 7d 22  |10.233.71.34\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m9q58",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m9q58",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256363,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256363,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.165",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.71.34",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.71.34"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256361,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851256362,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5ef15abff9745bc1e6fbf4d0831f8e078e585bd012de18edd3ec3f8692fd3d63",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.301: INFO: Pod "webserver-deployment-557759b7c7-6l4hk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-6l4hk",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "229d9596-8c00-4c35-8af8-675300809ba8",
      ResourceVersion: (string) (len=8) "26309260",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e9ee0258-6c24-4237-a006-dacaba24d2b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 65 30 32 35 38 2d 36  |d\":\"e9ee0258-6|
              00000090  63 32 34 2d 34 32 33 37  2d 61 30 30 36 2d 64 61  |c24-4237-a006-da|
              000000a0  63 61 62 61 32 34 64 32  62 38 5c 22 7d 22 3a 7b  |caba24d2b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rlz44",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rlz44",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.241",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.302: INFO: Pod "webserver-deployment-557759b7c7-8k7m8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-8k7m8",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6667fc0c-7bbc-408c-aae2-5a52b9a2bb5a",
      ResourceVersion: (string) (len=8) "26309037",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256361,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e9ee0258-6c24-4237-a006-dacaba24d2b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 65 30 32 35 38 2d 36  |d\":\"e9ee0258-6|
              00000090  63 32 34 2d 34 32 33 37  2d 61 30 30 36 2d 64 61  |c24-4237-a006-da|
              000000a0  63 61 62 61 32 34 64 32  62 38 5c 22 7d 22 3a 7b  |caba24d2b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 32 30 32 5c 22 7d  |10.233.64.202\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qt59g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qt59g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.241",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.64.202",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.202"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256361,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851256362,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://41be336305fc582e08d8721b4c7c6be6cfb92cce8bbbc0665cad97bdfc4d93c4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.303: INFO: Pod "webserver-deployment-557759b7c7-b55tz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-b55tz",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c0376cf9-bf67-442c-a6ce-a400efa14251",
      ResourceVersion: (string) (len=8) "26309363",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e9ee0258-6c24-4237-a006-dacaba24d2b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 65 30 32 35 38 2d 36  |d\":\"e9ee0258-6|
              00000090  63 32 34 2d 34 32 33 37  2d 61 30 30 36 2d 64 61  |c24-4237-a006-da|
              000000a0  63 61 62 61 32 34 64 32  62 38 5c 22 7d 22 3a 7b  |caba24d2b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 36 31 5c 22 7d 22  |10.233.64.61\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7cc4r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7cc4r",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.241",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.64.61",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.64.61"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851256368,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://697f327b5cdd471c3981bd8ea63a4f3ba5d3a461ef79a53ce99fbbebf3a963df",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.304: INFO: Pod "webserver-deployment-557759b7c7-bsqrf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-bsqrf",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "55f00737-afe7-4442-9a00-80599433118f",
      ResourceVersion: (string) (len=8) "26309023",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256361,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e9ee0258-6c24-4237-a006-dacaba24d2b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 65 30 32 35 38 2d 36  |d\":\"e9ee0258-6|
              00000090  63 32 34 2d 34 32 33 37  2d 61 30 30 36 2d 64 61  |c24-4237-a006-da|
              000000a0  63 61 62 61 32 34 64 32  62 38 5c 22 7d 22 3a 7b  |caba24d2b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  39 2e 32 33 32 5c 22 7d  |10.233.69.232\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kgbxl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kgbxl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.107",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.69.232",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.69.232"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256361,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851256362,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f3815c457e1f50fe9f9d7f478b3219842f155ba4f284123d8ed5b5fa9979218a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.305: INFO: Pod "webserver-deployment-557759b7c7-clsbh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-clsbh",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6cb04a14-11fd-4bba-86b3-9133b40e94e5",
      ResourceVersion: (string) (len=8) "26309020",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256361,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e9ee0258-6c24-4237-a006-dacaba24d2b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 65 30 32 35 38 2d 36  |d\":\"e9ee0258-6|
              00000090  63 32 34 2d 34 32 33 37  2d 61 30 30 36 2d 64 61  |c24-4237-a006-da|
              000000a0  63 61 62 61 32 34 64 32  62 38 5c 22 7d 22 3a 7b  |caba24d2b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  39 2e 31 30 30 5c 22 7d  |10.233.69.100\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g2qg6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g2qg6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.107",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.69.100",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.69.100"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256361,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851256362,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://786977d878b59cfae619477445af16d15b73509282a1b04752cd3958050d784c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.308: INFO: Pod "webserver-deployment-557759b7c7-dnp26" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-dnp26",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "24c34a90-fcb3-40dc-b1a3-7680d290f627",
      ResourceVersion: (string) (len=8) "26309018",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256361,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e9ee0258-6c24-4237-a006-dacaba24d2b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 65 30 32 35 38 2d 36  |d\":\"e9ee0258-6|
              00000090  63 32 34 2d 34 32 33 37  2d 61 30 30 36 2d 64 61  |c24-4237-a006-da|
              000000a0  63 61 62 61 32 34 64 32  62 38 5c 22 7d 22 3a 7b  |caba24d2b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  39 2e 32 33 36 5c 22 7d  |10.233.69.236\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n7x9m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n7x9m",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.107",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.69.236",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.69.236"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256361,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851256362,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d8b34ebb333adb2ec1a671ed092ac19ee1007f8537d541fb202298b38c10ef5f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.309: INFO: Pod "webserver-deployment-557759b7c7-k2bkq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-k2bkq",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "99cb67ba-11fb-44cb-b731-50745351701f",
      ResourceVersion: (string) (len=8) "26309253",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e9ee0258-6c24-4237-a006-dacaba24d2b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 65 30 32 35 38 2d 36  |d\":\"e9ee0258-6|
              00000090  63 32 34 2d 34 32 33 37  2d 61 30 30 36 2d 64 61  |c24-4237-a006-da|
              000000a0  63 61 62 61 32 34 64 32  62 38 5c 22 7d 22 3a 7b  |caba24d2b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4b7q9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4b7q9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.165",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.310: INFO: Pod "webserver-deployment-557759b7c7-kp9jk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-kp9jk",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7fcc0053-b76b-4f81-8685-8756f301bd29",
      ResourceVersion: (string) (len=8) "26309232",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e9ee0258-6c24-4237-a006-dacaba24d2b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 65 30 32 35 38 2d 36  |d\":\"e9ee0258-6|
              00000090  63 32 34 2d 34 32 33 37  2d 61 30 30 36 2d 64 61  |c24-4237-a006-da|
              000000a0  63 61 62 61 32 34 64 32  62 38 5c 22 7d 22 3a 7b  |caba24d2b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m7qx8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m7qx8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.241",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.311: INFO: Pod "webserver-deployment-557759b7c7-lb2zz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-lb2zz",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3b31cfcb-c76f-48d1-a7fe-93213ab433aa",
      ResourceVersion: (string) (len=8) "26309266",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e9ee0258-6c24-4237-a006-dacaba24d2b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 65 30 32 35 38 2d 36  |d\":\"e9ee0258-6|
              00000090  63 32 34 2d 34 32 33 37  2d 61 30 30 36 2d 64 61  |c24-4237-a006-da|
              000000a0  63 61 62 61 32 34 64 32  62 38 5c 22 7d 22 3a 7b  |caba24d2b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zm4hl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zm4hl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.241",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.312: INFO: Pod "webserver-deployment-557759b7c7-lv6wj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-lv6wj",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ce0873fc-5521-417d-bd38-579e446b127b",
      ResourceVersion: (string) (len=8) "26309243",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e9ee0258-6c24-4237-a006-dacaba24d2b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 65 30 32 35 38 2d 36  |d\":\"e9ee0258-6|
              00000090  63 32 34 2d 34 32 33 37  2d 61 30 30 36 2d 64 61  |c24-4237-a006-da|
              000000a0  63 61 62 61 32 34 64 32  62 38 5c 22 7d 22 3a 7b  |caba24d2b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5bqsj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5bqsj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.107",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.313: INFO: Pod "webserver-deployment-557759b7c7-mhg2t" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-mhg2t",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "088eabde-3339-43c2-93af-7d82d952dcdd",
      ResourceVersion: (string) (len=8) "26309027",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256361,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e9ee0258-6c24-4237-a006-dacaba24d2b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 65 30 32 35 38 2d 36  |d\":\"e9ee0258-6|
              00000090  63 32 34 2d 34 32 33 37  2d 61 30 30 36 2d 64 61  |c24-4237-a006-da|
              000000a0  63 61 62 61 32 34 64 32  62 38 5c 22 7d 22 3a 7b  |caba24d2b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 31 37 35 5c 22 7d  |10.233.64.175\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jrpls",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jrpls",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.241",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.64.175",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.175"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256361,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851256362,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ebb990e2d37a0d7b6a1b5343f55ae78a88984c6a7047f829b370c1dd17c355a5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.314: INFO: Pod "webserver-deployment-557759b7c7-pzh6m" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-pzh6m",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e308b0a9-1ed4-4d50-a528-cc65cb3937d9",
      ResourceVersion: (string) (len=8) "26309255",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e9ee0258-6c24-4237-a006-dacaba24d2b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 65 30 32 35 38 2d 36  |d\":\"e9ee0258-6|
              00000090  63 32 34 2d 34 32 33 37  2d 61 30 30 36 2d 64 61  |c24-4237-a006-da|
              000000a0  63 61 62 61 32 34 64 32  62 38 5c 22 7d 22 3a 7b  |caba24d2b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-88mtl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-88mtl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.107",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.315: INFO: Pod "webserver-deployment-557759b7c7-qrgc8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-qrgc8",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "362235d6-efe0-4d23-ae95-feb5d87d29a2",
      ResourceVersion: (string) (len=8) "26309256",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e9ee0258-6c24-4237-a006-dacaba24d2b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 65 30 32 35 38 2d 36  |d\":\"e9ee0258-6|
              00000090  63 32 34 2d 34 32 33 37  2d 61 30 30 36 2d 64 61  |c24-4237-a006-da|
              000000a0  63 61 62 61 32 34 64 32  62 38 5c 22 7d 22 3a 7b  |caba24d2b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cbkgz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cbkgz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.241",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.316: INFO: Pod "webserver-deployment-557759b7c7-trxbf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-trxbf",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b0034cfb-7102-4032-8089-f836998aabcc",
      ResourceVersion: (string) (len=8) "26309238",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e9ee0258-6c24-4237-a006-dacaba24d2b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 65 30 32 35 38 2d 36  |d\":\"e9ee0258-6|
              00000090  63 32 34 2d 34 32 33 37  2d 61 30 30 36 2d 64 61  |c24-4237-a006-da|
              000000a0  63 61 62 61 32 34 64 32  62 38 5c 22 7d 22 3a 7b  |caba24d2b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ql24d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ql24d",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.165",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.317: INFO: Pod "webserver-deployment-557759b7c7-vjjt7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vjjt7",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e8c499cd-e448-4436-9c8a-90eb07f3fb53",
      ResourceVersion: (string) (len=8) "26309358",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e9ee0258-6c24-4237-a006-dacaba24d2b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 65 30 32 35 38 2d 36  |d\":\"e9ee0258-6|
              00000090  63 32 34 2d 34 32 33 37  2d 61 30 30 36 2d 64 61  |c24-4237-a006-da|
              000000a0  63 61 62 61 32 34 64 32  62 38 5c 22 7d 22 3a 7b  |caba24d2b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 32 33 35 5c 22 7d  |10.233.64.235\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-25czb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-25czb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.241",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.64.235",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.235"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851256368,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c2c7ea8dfd783c9ab1fba3842279febd123de88831646c61f6d8e7caa3db687c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.318: INFO: Pod "webserver-deployment-557759b7c7-ztrcj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-ztrcj",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "681c8682-5205-49fa-b1c2-5c50d99a299d",
      ResourceVersion: (string) (len=8) "26309001",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256361,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e9ee0258-6c24-4237-a006-dacaba24d2b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 65 30 32 35 38 2d 36  |d\":\"e9ee0258-6|
              00000090  63 32 34 2d 34 32 33 37  2d 61 30 30 36 2d 64 61  |c24-4237-a006-da|
              000000a0  63 61 62 61 32 34 64 32  62 38 5c 22 7d 22 3a 7b  |caba24d2b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 37  31 2e 33 38 5c 22 7d 22  |10.233.71.38\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6svzb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6svzb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.165",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.71.38",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.71.38"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256361,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851256362,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2debe1179d6f66a6beae1c8139d305c41732306e1f0e48ef65613a6cc0bebd29",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.319: INFO: Pod "webserver-deployment-9b4f5bf69-69tdn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-69tdn",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cdbc01d0-84b3-4b35-9726-aab9e05cea77",
      ResourceVersion: (string) (len=8) "26309271",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "fac6340f-afe3-4a1c-adaa-08f348d1218d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 61  63 36 33 34 30 66 2d 61  |d\":\"fac6340f-a|
              00000090  66 65 33 2d 34 61 31 63  2d 61 64 61 61 2d 30 38  |fe3-4a1c-adaa-08|
              000000a0  66 33 34 38 64 31 32 31  38 64 5c 22 7d 22 3a 7b  |f348d1218d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rzts7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rzts7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.241",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.320: INFO: Pod "webserver-deployment-9b4f5bf69-89rh7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-89rh7",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6e7756a8-21c7-491d-9eb6-ccee82bd863e",
      ResourceVersion: (string) (len=8) "26309119",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256365,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "fac6340f-afe3-4a1c-adaa-08f348d1218d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256365,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 61  63 36 33 34 30 66 2d 61  |d\":\"fac6340f-a|
              00000090  66 65 33 2d 34 61 31 63  2d 61 64 61 61 2d 30 38  |fe3-4a1c-adaa-08|
              000000a0  66 33 34 38 64 31 32 31  38 64 5c 22 7d 22 3a 7b  |f348d1218d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256365,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jkqss",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jkqss",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256365,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256365,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256365,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256365,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.107",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256365,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.321: INFO: Pod "webserver-deployment-9b4f5bf69-9cgw4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-9cgw4",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a75fb417-e1c3-42ec-8964-616324986363",
      ResourceVersion: (string) (len=8) "26309364",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256365,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "fac6340f-afe3-4a1c-adaa-08f348d1218d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256365,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 61  63 36 33 34 30 66 2d 61  |d\":\"fac6340f-a|
              00000090  66 65 33 2d 34 61 31 63  2d 61 64 61 61 2d 30 38  |fe3-4a1c-adaa-08|
              000000a0  66 33 34 38 64 31 32 31  38 64 5c 22 7d 22 3a 7b  |f348d1218d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  32 33 33 2e 36 34 2e 31  30 36 5c 22 7d 22 3a 7b  |233.64.106\"}":{|
              00000210  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000220  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b6htw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b6htw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256365,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256365,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256365,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256365,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.241",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.64.106",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.106"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256365,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.323: INFO: Pod "webserver-deployment-9b4f5bf69-9qx68" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-9qx68",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "19a86e18-0bf3-409e-b84b-f4e6c1b6b5d4",
      ResourceVersion: (string) (len=8) "26309249",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "fac6340f-afe3-4a1c-adaa-08f348d1218d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 61  63 36 33 34 30 66 2d 61  |d\":\"fac6340f-a|
              00000090  66 65 33 2d 34 61 31 63  2d 61 64 61 61 2d 30 38  |fe3-4a1c-adaa-08|
              000000a0  66 33 34 38 64 31 32 31  38 64 5c 22 7d 22 3a 7b  |f348d1218d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c6jhn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c6jhn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.107",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.326: INFO: Pod "webserver-deployment-9b4f5bf69-cbjpx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-cbjpx",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4df22183-eae0-449e-b702-48b7c2659246",
      ResourceVersion: (string) (len=8) "26309284",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256365,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "fac6340f-afe3-4a1c-adaa-08f348d1218d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256365,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 61  63 36 33 34 30 66 2d 61  |d\":\"fac6340f-a|
              00000090  66 65 33 2d 34 61 31 63  2d 61 64 61 61 2d 30 38  |fe3-4a1c-adaa-08|
              000000a0  66 33 34 38 64 31 32 31  38 64 5c 22 7d 22 3a 7b  |f348d1218d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  32 33 33 2e 36 34 2e 31  38 30 5c 22 7d 22 3a 7b  |233.64.180\"}":{|
              00000210  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000220  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q2854",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q2854",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256365,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256365,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256365,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256365,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.241",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.64.180",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.180"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256365,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.327: INFO: Pod "webserver-deployment-9b4f5bf69-fb2n6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-fb2n6",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4dd9d8a8-6933-4257-bc8b-6bb7cae8a01a",
      ResourceVersion: (string) (len=8) "26309222",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "fac6340f-afe3-4a1c-adaa-08f348d1218d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 61  63 36 33 34 30 66 2d 61  |d\":\"fac6340f-a|
              00000090  66 65 33 2d 34 61 31 63  2d 61 64 61 61 2d 30 38  |fe3-4a1c-adaa-08|
              000000a0  66 33 34 38 64 31 32 31  38 64 5c 22 7d 22 3a 7b  |f348d1218d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lpwl4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lpwl4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.165",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.329: INFO: Pod "webserver-deployment-9b4f5bf69-k7t5m" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-k7t5m",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "471e6d01-1a9d-46ca-adbe-93b7c9ee2890",
      ResourceVersion: (string) (len=8) "26309247",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "fac6340f-afe3-4a1c-adaa-08f348d1218d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 61  63 36 33 34 30 66 2d 61  |d\":\"fac6340f-a|
              00000090  66 65 33 2d 34 61 31 63  2d 61 64 61 61 2d 30 38  |fe3-4a1c-adaa-08|
              000000a0  66 33 34 38 64 31 32 31  38 64 5c 22 7d 22 3a 7b  |f348d1218d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dqhfr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dqhfr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.241",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.331: INFO: Pod "webserver-deployment-9b4f5bf69-kjbkw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-kjbkw",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5f4e87c3-369f-4c9d-a2c6-7dbc261240b3",
      ResourceVersion: (string) (len=8) "26309245",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "fac6340f-afe3-4a1c-adaa-08f348d1218d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 61  63 36 33 34 30 66 2d 61  |d\":\"fac6340f-a|
              00000090  66 65 33 2d 34 61 31 63  2d 61 64 61 61 2d 30 38  |fe3-4a1c-adaa-08|
              000000a0  66 33 34 38 64 31 32 31  38 64 5c 22 7d 22 3a 7b  |f348d1218d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c9krm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c9krm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.165",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.332: INFO: Pod "webserver-deployment-9b4f5bf69-l79c9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-l79c9",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9430ad3b-eb97-4260-9de0-a86fff64312f",
      ResourceVersion: (string) (len=8) "26309240",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "fac6340f-afe3-4a1c-adaa-08f348d1218d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 61  63 36 33 34 30 66 2d 61  |d\":\"fac6340f-a|
              00000090  66 65 33 2d 34 61 31 63  2d 61 64 61 61 2d 30 38  |fe3-4a1c-adaa-08|
              000000a0  66 33 34 38 64 31 32 31  38 64 5c 22 7d 22 3a 7b  |f348d1218d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ptzrt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ptzrt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.241",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.334: INFO: Pod "webserver-deployment-9b4f5bf69-lmwc8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-lmwc8",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "982fcf04-d085-4c98-9446-864bc43acc80",
      ResourceVersion: (string) (len=8) "26309267",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256365,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "fac6340f-afe3-4a1c-adaa-08f348d1218d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256365,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 61  63 36 33 34 30 66 2d 61  |d\":\"fac6340f-a|
              00000090  66 65 33 2d 34 61 31 63  2d 61 64 61 61 2d 30 38  |fe3-4a1c-adaa-08|
              000000a0  66 33 34 38 64 31 32 31  38 64 5c 22 7d 22 3a 7b  |f348d1218d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=564) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  32 33 33 2e 36 39 2e 36  35 5c 22 7d 22 3a 7b 22  |233.69.65\"}":{"|
              00000210  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000220  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000230  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vw4fr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vw4fr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256365,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256365,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256365,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256365,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.107",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.69.65",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.69.65"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256365,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.335: INFO: Pod "webserver-deployment-9b4f5bf69-n4rh9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-n4rh9",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b68f682c-d780-4884-ac73-c5fc2d247233",
      ResourceVersion: (string) (len=8) "26309188",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "fac6340f-afe3-4a1c-adaa-08f348d1218d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 61  63 36 33 34 30 66 2d 61  |d\":\"fac6340f-a|
              00000090  66 65 33 2d 34 61 31 63  2d 61 64 61 61 2d 30 38  |fe3-4a1c-adaa-08|
              000000a0  66 33 34 38 64 31 32 31  38 64 5c 22 7d 22 3a 7b  |f348d1218d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hlzb8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hlzb8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.165",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.336: INFO: Pod "webserver-deployment-9b4f5bf69-qsm9f" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-qsm9f",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ad279fe1-8953-469f-9567-2e697b634c01",
      ResourceVersion: (string) (len=8) "26309303",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256365,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "fac6340f-afe3-4a1c-adaa-08f348d1218d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256365,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 61  63 36 33 34 30 66 2d 61  |d\":\"fac6340f-a|
              00000090  66 65 33 2d 34 61 31 63  2d 61 64 61 61 2d 30 38  |fe3-4a1c-adaa-08|
              000000a0  66 33 34 38 64 31 32 31  38 64 5c 22 7d 22 3a 7b  |f348d1218d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=564) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  32 33 33 2e 37 31 2e 32  36 5c 22 7d 22 3a 7b 22  |233.71.26\"}":{"|
              00000210  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000220  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000230  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-shjdl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-shjdl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256365,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256365,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256365,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256365,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.165",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.71.26",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.71.26"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256365,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.338: INFO: Pod "webserver-deployment-9b4f5bf69-x2vkl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-x2vkl",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e0128510-f2e3-4ff3-9d08-ce02716ffefc",
      ResourceVersion: (string) (len=8) "26309213",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "fac6340f-afe3-4a1c-adaa-08f348d1218d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 61  63 36 33 34 30 66 2d 61  |d\":\"fac6340f-a|
              00000090  66 65 33 2d 34 61 31 63  2d 61 64 61 61 2d 30 38  |fe3-4a1c-adaa-08|
              000000a0  66 33 34 38 64 31 32 31  38 64 5c 22 7d 22 3a 7b  |f348d1218d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sdp6p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sdp6p",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851256367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.107",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851256367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:06:09.340: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6047" for this suite. @ 05/14/24 04:06:09.354
• [8.314 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 05/14/24 04:06:09.378
  May 14 04:06:09.378: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename cronjob @ 05/14/24 04:06:09.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:06:09.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:06:09.437
  STEP: Creating a cronjob @ 05/14/24 04:06:09.44
  STEP: creating @ 05/14/24 04:06:09.44
  STEP: getting @ 05/14/24 04:06:09.45
  STEP: listing @ 05/14/24 04:06:09.456
  STEP: watching @ 05/14/24 04:06:09.459
  May 14 04:06:09.459: INFO: starting watch
  STEP: cluster-wide listing @ 05/14/24 04:06:09.46
  STEP: cluster-wide watching @ 05/14/24 04:06:09.463
  May 14 04:06:09.463: INFO: starting watch
  STEP: patching @ 05/14/24 04:06:09.464
  STEP: updating @ 05/14/24 04:06:09.477
  May 14 04:06:09.494: INFO: waiting for watch events with expected annotations
  May 14 04:06:09.494: INFO: saw patched and updated annotations
  STEP: patching /status @ 05/14/24 04:06:09.494
  STEP: updating /status @ 05/14/24 04:06:09.517
  STEP: get /status @ 05/14/24 04:06:09.525
  STEP: deleting @ 05/14/24 04:06:09.528
  STEP: deleting a collection @ 05/14/24 04:06:09.554
  May 14 04:06:09.565: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4688" for this suite. @ 05/14/24 04:06:09.571
• [0.204 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 05/14/24 04:06:09.583
  May 14 04:06:09.583: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename field-validation @ 05/14/24 04:06:09.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:06:09.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:06:09.623
  May 14 04:06:09.625: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  W0514 04:06:17.215022      23 warnings.go:70] unknown field "alpha"
  W0514 04:06:17.215069      23 warnings.go:70] unknown field "beta"
  W0514 04:06:17.215074      23 warnings.go:70] unknown field "delta"
  W0514 04:06:17.215078      23 warnings.go:70] unknown field "epsilon"
  W0514 04:06:17.215081      23 warnings.go:70] unknown field "gamma"
  May 14 04:06:17.811: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8256" for this suite. @ 05/14/24 04:06:17.829
• [8.257 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 05/14/24 04:06:17.841
  May 14 04:06:17.841: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename webhook @ 05/14/24 04:06:17.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:06:17.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:06:17.869
  STEP: Setting up server cert @ 05/14/24 04:06:17.907
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/14/24 04:06:18.094
  STEP: Deploying the webhook pod @ 05/14/24 04:06:18.111
  STEP: Wait for the deployment to be ready @ 05/14/24 04:06:18.127
  May 14 04:06:18.165: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/14/24 04:06:20.179
  STEP: Verifying the service has paired with the endpoint @ 05/14/24 04:06:20.198
  May 14 04:06:21.198: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 05/14/24 04:06:21.206
  STEP: Creating a custom resource definition that should be denied by the webhook @ 05/14/24 04:06:21.225
  May 14 04:06:21.225: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 04:06:21.234: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3186" for this suite. @ 05/14/24 04:06:21.308
  STEP: Destroying namespace "webhook-markers-574" for this suite. @ 05/14/24 04:06:21.331
• [3.498 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]
test/e2e/apimachinery/resource_quota.go:693
  STEP: Creating a kubernetes client @ 05/14/24 04:06:21.34
  May 14 04:06:21.340: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename resourcequota @ 05/14/24 04:06:21.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:06:21.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:06:21.365
  STEP: Creating a ResourceQuota with terminating scope @ 05/14/24 04:06:21.369
  STEP: Ensuring ResourceQuota status is calculated @ 05/14/24 04:06:21.378
  STEP: Creating a ResourceQuota with not terminating scope @ 05/14/24 04:06:23.384
  STEP: Ensuring ResourceQuota status is calculated @ 05/14/24 04:06:23.389
  STEP: Creating a long running pod @ 05/14/24 04:06:25.396
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 05/14/24 04:06:25.423
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 05/14/24 04:06:27.428
  STEP: Deleting the pod @ 05/14/24 04:06:29.433
  STEP: Ensuring resource quota status released the pod usage @ 05/14/24 04:06:29.456
  STEP: Creating a terminating pod @ 05/14/24 04:06:31.462
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 05/14/24 04:06:31.485
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 05/14/24 04:06:33.49
  STEP: Deleting the pod @ 05/14/24 04:06:35.496
  STEP: Ensuring resource quota status released the pod usage @ 05/14/24 04:06:35.519
  May 14 04:06:37.525: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6267" for this suite. @ 05/14/24 04:06:37.531
• [16.200 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service  [Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 05/14/24 04:06:37.543
  May 14 04:06:37.543: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename services @ 05/14/24 04:06:37.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:06:37.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:06:37.584
  May 14 04:06:37.589: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3553" for this suite. @ 05/14/24 04:06:37.594
• [0.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 05/14/24 04:06:37.606
  May 14 04:06:37.606: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename var-expansion @ 05/14/24 04:06:37.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:06:37.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:06:37.633
  STEP: Creating a pod to test env composition @ 05/14/24 04:06:37.635
  STEP: Saw pod success @ 05/14/24 04:06:41.661
  May 14 04:06:41.665: INFO: Trying to get logs from node viola-paas-worker03 pod var-expansion-60407f62-2e21-4ae7-88be-7109ef29f4cb container dapi-container: <nil>
  STEP: delete the pod @ 05/14/24 04:06:41.679
  May 14 04:06:41.697: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2857" for this suite. @ 05/14/24 04:06:41.703
• [4.106 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 05/14/24 04:06:41.713
  May 14 04:06:41.713: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename container-runtime @ 05/14/24 04:06:41.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:06:41.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:06:41.74
  STEP: create the container @ 05/14/24 04:06:41.742
  W0514 04:06:41.754511      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/14/24 04:06:41.754
  STEP: get the container status @ 05/14/24 04:06:44.797
  STEP: the container should be terminated @ 05/14/24 04:06:44.8
  STEP: the termination message should be set @ 05/14/24 04:06:44.8
  May 14 04:06:44.800: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/14/24 04:06:44.8
  May 14 04:06:44.888: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1011" for this suite. @ 05/14/24 04:06:44.897
• [3.206 seconds]
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:95
  STEP: Creating a kubernetes client @ 05/14/24 04:06:44.919
  May 14 04:06:44.919: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename pod-network-test @ 05/14/24 04:06:44.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:06:44.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:06:44.949
  STEP: Performing setup for networking test in namespace pod-network-test-6303 @ 05/14/24 04:06:44.951
  STEP: creating a selector @ 05/14/24 04:06:44.951
  STEP: Creating the service pods in kubernetes @ 05/14/24 04:06:44.952
  May 14 04:06:44.952: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/14/24 04:06:57.108
  May 14 04:06:59.138: INFO: Setting MaxTries for pod polling to 55 for networking test based on endpoint count 5
  May 14 04:06:59.138: INFO: Breadth first check of 10.233.67.85 on host 172.10.50.45...
  May 14 04:06:59.141: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.64.189:9080/dial?request=hostname&protocol=udp&host=10.233.67.85&port=8081&tries=1'] Namespace:pod-network-test-6303 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 04:06:59.141: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 04:06:59.141: INFO: ExecWithOptions: Clientset creation
  May 14 04:06:59.141: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6303/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.64.189%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.67.85%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 14 04:06:59.195: INFO: Waiting for responses: map[]
  May 14 04:06:59.195: INFO: reached 10.233.67.85 after 0/1 tries
  May 14 04:06:59.195: INFO: Breadth first check of 10.233.70.205 on host 172.10.50.211...
  May 14 04:06:59.199: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.64.189:9080/dial?request=hostname&protocol=udp&host=10.233.70.205&port=8081&tries=1'] Namespace:pod-network-test-6303 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 04:06:59.199: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 04:06:59.200: INFO: ExecWithOptions: Clientset creation
  May 14 04:06:59.200: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6303/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.64.189%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.70.205%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 14 04:06:59.255: INFO: Waiting for responses: map[]
  May 14 04:06:59.255: INFO: reached 10.233.70.205 after 0/1 tries
  May 14 04:06:59.255: INFO: Breadth first check of 10.233.69.167 on host 172.10.50.107...
  May 14 04:06:59.259: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.64.189:9080/dial?request=hostname&protocol=udp&host=10.233.69.167&port=8081&tries=1'] Namespace:pod-network-test-6303 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 04:06:59.259: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 04:06:59.260: INFO: ExecWithOptions: Clientset creation
  May 14 04:06:59.260: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6303/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.64.189%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.69.167%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 14 04:06:59.306: INFO: Waiting for responses: map[]
  May 14 04:06:59.306: INFO: reached 10.233.69.167 after 0/1 tries
  May 14 04:06:59.306: INFO: Breadth first check of 10.233.71.46 on host 172.10.50.165...
  May 14 04:06:59.310: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.64.189:9080/dial?request=hostname&protocol=udp&host=10.233.71.46&port=8081&tries=1'] Namespace:pod-network-test-6303 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 04:06:59.310: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 04:06:59.311: INFO: ExecWithOptions: Clientset creation
  May 14 04:06:59.311: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6303/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.64.189%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.71.46%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 14 04:06:59.356: INFO: Waiting for responses: map[]
  May 14 04:06:59.356: INFO: reached 10.233.71.46 after 0/1 tries
  May 14 04:06:59.356: INFO: Breadth first check of 10.233.64.195 on host 172.10.50.241...
  May 14 04:06:59.360: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.64.189:9080/dial?request=hostname&protocol=udp&host=10.233.64.195&port=8081&tries=1'] Namespace:pod-network-test-6303 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 04:06:59.360: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 04:06:59.360: INFO: ExecWithOptions: Clientset creation
  May 14 04:06:59.360: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6303/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.64.189%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.64.195%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 14 04:06:59.405: INFO: Waiting for responses: map[]
  May 14 04:06:59.405: INFO: reached 10.233.64.195 after 0/1 tries
  May 14 04:06:59.405: INFO: Going to retry 0 out of 5 pods....
  May 14 04:06:59.406: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6303" for this suite. @ 05/14/24 04:06:59.412
• [14.504 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 05/14/24 04:06:59.424
  May 14 04:06:59.424: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename var-expansion @ 05/14/24 04:06:59.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:06:59.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:06:59.479
  STEP: Creating a pod to test substitution in volume subpath @ 05/14/24 04:06:59.489
  STEP: Saw pod success @ 05/14/24 04:07:03.517
  May 14 04:07:03.520: INFO: Trying to get logs from node viola-paas-worker03 pod var-expansion-6002f2fe-a515-47b4-a4c6-4f78a29c63cd container dapi-container: <nil>
  STEP: delete the pod @ 05/14/24 04:07:03.527
  May 14 04:07:03.551: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9769" for this suite. @ 05/14/24 04:07:03.556
• [4.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance]
test/e2e/apimachinery/namespace.go:303
  STEP: Creating a kubernetes client @ 05/14/24 04:07:03.569
  May 14 04:07:03.569: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename namespaces @ 05/14/24 04:07:03.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:07:03.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:07:03.598
  STEP: Read namespace status @ 05/14/24 04:07:03.6
  May 14 04:07:03.603: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 05/14/24 04:07:03.603
  May 14 04:07:03.612: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 05/14/24 04:07:03.612
  May 14 04:07:03.623: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  May 14 04:07:03.623: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9571" for this suite. @ 05/14/24 04:07:03.627
• [0.065 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 05/14/24 04:07:03.634
  May 14 04:07:03.634: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename container-probe @ 05/14/24 04:07:03.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:07:03.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:07:03.673
  STEP: Creating pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397 @ 05/14/24 04:07:03.675
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/14/24 04:07:05.71
  May 14 04:07:05.713: INFO: Initial restart count of pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 is 0
  May 14 04:07:05.717: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:07:07.723: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:07:09.728: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:07:11.762: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:07:13.767: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:07:15.776: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:07:17.787: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:07:19.793: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:07:22.018: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:07:24.024: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:07:26.029: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:07:28.036: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:07:30.041: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:07:32.046: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:07:34.052: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:07:36.058: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:07:38.067: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:07:40.073: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:07:42.079: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:07:44.085: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:07:46.090: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:07:48.096: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:07:50.102: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:07:52.109: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:07:54.114: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:07:56.119: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:07:58.126: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:08:00.134: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:08:02.140: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:08:04.146: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:08:06.151: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:08:08.158: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:08:10.166: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:08:12.173: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:08:14.179: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:08:16.185: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:08:18.191: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:08:20.197: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:08:22.202: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:08:24.212: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:08:26.218: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:08:28.225: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:08:30.230: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:08:32.236: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:08:34.242: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:08:36.249: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:08:38.255: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:08:40.261: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:08:42.266: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:08:44.272: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:08:46.279: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:08:48.285: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:08:50.292: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:08:52.299: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:08:54.307: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:08:56.313: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:08:58.319: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:09:00.325: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:09:02.330: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:09:04.335: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:09:06.345: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:09:08.351: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:09:10.357: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:09:12.364: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:09:14.370: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:09:16.376: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:09:18.383: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:09:20.389: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:09:22.395: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:09:24.400: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:09:26.404: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:09:28.410: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:09:30.415: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:09:32.422: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:09:34.428: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:09:36.433: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:09:38.440: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:09:40.445: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:09:42.451: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:09:44.458: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:09:46.464: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:09:48.472: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:09:50.478: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:09:52.484: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:09:54.491: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:09:56.498: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:09:58.505: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:10:00.510: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:10:02.519: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:10:04.526: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:10:06.532: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:10:08.539: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:10:10.545: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:10:12.550: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:10:14.556: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:10:16.563: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:10:18.570: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:10:20.575: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:10:22.581: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:10:24.589: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:10:26.594: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:10:28.602: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:10:30.607: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:10:32.614: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:10:34.620: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:10:36.626: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:10:38.633: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:10:40.639: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:10:42.644: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:10:44.650: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:10:46.656: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:10:48.662: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:10:50.668: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:10:52.674: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:10:54.679: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:10:56.686: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:10:58.693: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:11:00.699: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:11:02.704: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:11:04.709: INFO: Get pod test-webserver-52f93463-70b3-4713-bc83-0db55c742454 in namespace container-probe-2397
  May 14 04:11:06.710: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/14/24 04:11:06.718
  STEP: Destroying namespace "container-probe-2397" for this suite. @ 05/14/24 04:11:06.749
• [243.122 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 05/14/24 04:11:06.758
  May 14 04:11:06.758: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename pods @ 05/14/24 04:11:06.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:11:06.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:11:06.786
  STEP: creating a Pod with a static label @ 05/14/24 04:11:06.811
  STEP: watching for Pod to be ready @ 05/14/24 04:11:06.832
  May 14 04:11:06.836: INFO: observed Pod pod-test in namespace pods-837 in phase Pending with labels: map[test-pod-static:true] & conditions []
  May 14 04:11:06.840: INFO: observed Pod pod-test in namespace pods-837 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:11:06 +0000 UTC  }]
  May 14 04:11:06.863: INFO: observed Pod pod-test in namespace pods-837 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:11:06 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:11:06 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:11:06 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:11:06 +0000 UTC  }]
  May 14 04:11:07.704: INFO: Found Pod pod-test in namespace pods-837 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:11:06 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:11:07 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:11:07 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:11:06 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 05/14/24 04:11:07.707
  STEP: getting the Pod and ensuring that it's patched @ 05/14/24 04:11:07.721
  STEP: replacing the Pod's status Ready condition to False @ 05/14/24 04:11:07.724
  STEP: check the Pod again to ensure its Ready conditions are False @ 05/14/24 04:11:07.745
  STEP: deleting the Pod via a Collection with a LabelSelector @ 05/14/24 04:11:07.745
  STEP: watching for the Pod to be deleted @ 05/14/24 04:11:07.762
  May 14 04:11:07.764: INFO: observed event type MODIFIED
  May 14 04:11:09.717: INFO: observed event type MODIFIED
  May 14 04:11:09.893: INFO: observed event type MODIFIED
  May 14 04:11:10.716: INFO: observed event type MODIFIED
  May 14 04:11:10.730: INFO: observed event type MODIFIED
  May 14 04:11:10.750: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-837" for this suite. @ 05/14/24 04:11:10.756
• [4.008 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 05/14/24 04:11:10.767
  May 14 04:11:10.767: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename projected @ 05/14/24 04:11:10.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:11:10.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:11:10.804
  STEP: Creating a pod to test downward API volume plugin @ 05/14/24 04:11:10.806
  STEP: Saw pod success @ 05/14/24 04:11:14.833
  May 14 04:11:14.836: INFO: Trying to get logs from node viola-paas-worker03 pod downwardapi-volume-f2485274-23e0-4b6f-8d02-4d959254e775 container client-container: <nil>
  STEP: delete the pod @ 05/14/24 04:11:14.85
  May 14 04:11:14.883: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4886" for this suite. @ 05/14/24 04:11:14.888
• [4.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:269
  STEP: Creating a kubernetes client @ 05/14/24 04:11:14.897
  May 14 04:11:14.897: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/14/24 04:11:14.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:11:14.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:11:14.932
  May 14 04:11:14.934: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 04:11:23.185: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6429" for this suite. @ 05/14/24 04:11:23.193
• [8.305 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]
test/e2e/storage/csistoragecapacity.go:49
  STEP: Creating a kubernetes client @ 05/14/24 04:11:23.202
  May 14 04:11:23.202: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename csistoragecapacity @ 05/14/24 04:11:23.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:11:23.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:11:23.231
  STEP: getting /apis @ 05/14/24 04:11:23.234
  STEP: getting /apis/storage.k8s.io @ 05/14/24 04:11:23.239
  STEP: getting /apis/storage.k8s.io/v1 @ 05/14/24 04:11:23.24
  STEP: creating @ 05/14/24 04:11:23.241
  STEP: watching @ 05/14/24 04:11:23.262
  May 14 04:11:23.262: INFO: starting watch
  STEP: getting @ 05/14/24 04:11:23.271
  STEP: listing in namespace @ 05/14/24 04:11:23.274
  STEP: listing across namespaces @ 05/14/24 04:11:23.276
  STEP: patching @ 05/14/24 04:11:23.279
  STEP: updating @ 05/14/24 04:11:23.283
  May 14 04:11:23.288: INFO: waiting for watch events with expected annotations in namespace
  May 14 04:11:23.289: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 05/14/24 04:11:23.289
  STEP: deleting a collection @ 05/14/24 04:11:23.302
  May 14 04:11:23.328: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-1071" for this suite. @ 05/14/24 04:11:23.332
• [0.137 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 05/14/24 04:11:23.34
  May 14 04:11:23.340: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename projected @ 05/14/24 04:11:23.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:11:23.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:11:23.366
  STEP: Creating projection with secret that has name projected-secret-test-d6bfcceb-c4c4-4616-9c44-3ea568adbd0e @ 05/14/24 04:11:23.369
  STEP: Creating a pod to test consume secrets @ 05/14/24 04:11:23.375
  STEP: Saw pod success @ 05/14/24 04:11:27.419
  May 14 04:11:27.436: INFO: Trying to get logs from node viola-paas-worker03 pod pod-projected-secrets-48a061c0-df9c-431c-bb16-a589aa658d19 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/14/24 04:11:27.443
  May 14 04:11:27.473: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7193" for this suite. @ 05/14/24 04:11:27.479
• [4.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 05/14/24 04:11:27.488
  May 14 04:11:27.488: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename container-probe @ 05/14/24 04:11:27.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:11:27.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:11:27.569
  STEP: Creating pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229 @ 05/14/24 04:11:27.571
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/14/24 04:11:29.617
  May 14 04:11:29.621: INFO: Initial restart count of pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea is 0
  May 14 04:11:29.624: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:11:31.627: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:11:33.635: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:11:35.640: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:11:37.646: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:11:39.652: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:11:41.678: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:11:43.685: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:11:45.690: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:11:47.696: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:11:49.702: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:11:49.702: INFO: Restart count of pod container-probe-3229/liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea is now 1 (20.081449769s elapsed)
  May 14 04:11:51.708: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:11:53.714: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:11:55.719: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:11:57.723: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:11:59.729: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:12:01.735: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:12:03.739: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:12:05.745: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:12:07.749: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:12:09.755: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:12:09.755: INFO: Restart count of pod container-probe-3229/liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea is now 2 (40.134438145s elapsed)
  May 14 04:12:11.760: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:12:13.768: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:12:15.773: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:12:17.779: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:12:19.784: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:12:21.789: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:12:23.795: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:12:25.800: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:12:27.807: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:12:29.814: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:12:29.814: INFO: Restart count of pod container-probe-3229/liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea is now 3 (1m0.192948726s elapsed)
  May 14 04:12:31.820: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:12:33.827: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:12:35.831: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:12:37.840: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:12:39.845: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:12:41.852: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:12:43.861: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:12:45.867: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:12:47.875: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:12:49.884: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:12:49.884: INFO: Restart count of pod container-probe-3229/liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea is now 4 (1m20.262940801s elapsed)
  May 14 04:12:51.889: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:12:53.897: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:12:55.902: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:12:57.908: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:12:59.916: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:13:01.921: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:13:03.928: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:13:05.932: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:13:07.941: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:13:09.946: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:13:11.952: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:13:13.959: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:13:15.965: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:13:17.970: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:13:19.976: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:13:21.982: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:13:23.988: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:13:25.992: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:13:27.997: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:13:30.003: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:13:32.011: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:13:34.018: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:13:36.023: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:13:38.029: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:13:40.035: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:13:42.042: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:13:44.048: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:13:46.053: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:13:48.060: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:13:50.064: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:13:52.071: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:13:54.077: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:13:56.083: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:13:58.089: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:14:00.094: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:14:02.100: INFO: Get pod liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea in namespace container-probe-3229
  May 14 04:14:02.100: INFO: Restart count of pod container-probe-3229/liveness-3462ce36-b78b-448b-b563-9ae8c2fea0ea is now 5 (2m32.478937476s elapsed)
  May 14 04:14:02.100: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/14/24 04:14:02.107
  STEP: Destroying namespace "container-probe-3229" for this suite. @ 05/14/24 04:14:02.127
• [154.652 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance]
test/e2e/apimachinery/resource_quota.go:946
  STEP: Creating a kubernetes client @ 05/14/24 04:14:02.14
  May 14 04:14:02.140: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename resourcequota @ 05/14/24 04:14:02.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:14:02.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:14:02.173
  STEP: Creating a ResourceQuota @ 05/14/24 04:14:02.176
  STEP: Getting a ResourceQuota @ 05/14/24 04:14:02.192
  STEP: Listing all ResourceQuotas with LabelSelector @ 05/14/24 04:14:02.195
  STEP: Patching the ResourceQuota @ 05/14/24 04:14:02.204
  STEP: Deleting a Collection of ResourceQuotas @ 05/14/24 04:14:02.212
  STEP: Verifying the deleted ResourceQuota @ 05/14/24 04:14:02.236
  May 14 04:14:02.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7897" for this suite. @ 05/14/24 04:14:02.245
• [0.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance]
test/e2e/common/node/podtemplates.go:122
  STEP: Creating a kubernetes client @ 05/14/24 04:14:02.254
  May 14 04:14:02.254: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename podtemplate @ 05/14/24 04:14:02.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:14:02.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:14:02.286
  STEP: Create set of pod templates @ 05/14/24 04:14:02.289
  May 14 04:14:02.296: INFO: created test-podtemplate-1
  May 14 04:14:02.310: INFO: created test-podtemplate-2
  May 14 04:14:02.316: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 05/14/24 04:14:02.316
  STEP: delete collection of pod templates @ 05/14/24 04:14:02.319
  May 14 04:14:02.320: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 05/14/24 04:14:02.339
  May 14 04:14:02.339: INFO: requesting list of pod templates to confirm quantity
  May 14 04:14:02.342: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4398" for this suite. @ 05/14/24 04:14:02.348
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance]
test/e2e/apimachinery/server_version.go:40
  STEP: Creating a kubernetes client @ 05/14/24 04:14:02.36
  May 14 04:14:02.360: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename server-version @ 05/14/24 04:14:02.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:14:02.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:14:02.393
  STEP: Request ServerVersion @ 05/14/24 04:14:02.395
  STEP: Confirm major version @ 05/14/24 04:14:02.396
  May 14 04:14:02.396: INFO: Major version: 1
  STEP: Confirm minor version @ 05/14/24 04:14:02.396
  May 14 04:14:02.396: INFO: cleanMinorVersion: 28
  May 14 04:14:02.396: INFO: Minor version: 28
  May 14 04:14:02.396: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-1091" for this suite. @ 05/14/24 04:14:02.402
• [0.050 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2202
  STEP: Creating a kubernetes client @ 05/14/24 04:14:02.411
  May 14 04:14:02.411: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename services @ 05/14/24 04:14:02.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:14:02.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:14:02.452
  STEP: creating service in namespace services-2769 @ 05/14/24 04:14:02.461
  STEP: creating service affinity-nodeport in namespace services-2769 @ 05/14/24 04:14:02.461
  STEP: creating replication controller affinity-nodeport in namespace services-2769 @ 05/14/24 04:14:02.485
  I0514 04:14:02.498758      23 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-2769, replica count: 3
  I0514 04:14:05.549803      23 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 14 04:14:05.564: INFO: Creating new exec pod
  May 14 04:14:08.594: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-2769 exec execpod-affinity5rkg6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  May 14 04:14:08.732: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  May 14 04:14:08.732: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 14 04:14:08.732: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-2769 exec execpod-affinity5rkg6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.50.147 80'
  May 14 04:14:08.837: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.50.147 80\nConnection to 10.233.50.147 80 port [tcp/http] succeeded!\n"
  May 14 04:14:08.837: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 14 04:14:08.837: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-2769 exec execpod-affinity5rkg6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.10.50.241 31713'
  May 14 04:14:08.951: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.10.50.241 31713\nConnection to 172.10.50.241 31713 port [tcp/*] succeeded!\n"
  May 14 04:14:08.951: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 14 04:14:08.951: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-2769 exec execpod-affinity5rkg6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.10.50.45 31713'
  May 14 04:14:09.056: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.10.50.45 31713\nConnection to 172.10.50.45 31713 port [tcp/*] succeeded!\n"
  May 14 04:14:09.056: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 14 04:14:09.057: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-2769 exec execpod-affinity5rkg6 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.10.50.45:31713/ ; done'
  May 14 04:14:09.218: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31713/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31713/\n"
  May 14 04:14:09.218: INFO: stdout: "\naffinity-nodeport-k89cx\naffinity-nodeport-k89cx\naffinity-nodeport-k89cx\naffinity-nodeport-k89cx\naffinity-nodeport-k89cx\naffinity-nodeport-k89cx\naffinity-nodeport-k89cx\naffinity-nodeport-k89cx\naffinity-nodeport-k89cx\naffinity-nodeport-k89cx\naffinity-nodeport-k89cx\naffinity-nodeport-k89cx\naffinity-nodeport-k89cx\naffinity-nodeport-k89cx\naffinity-nodeport-k89cx\naffinity-nodeport-k89cx"
  May 14 04:14:09.218: INFO: Received response from host: affinity-nodeport-k89cx
  May 14 04:14:09.218: INFO: Received response from host: affinity-nodeport-k89cx
  May 14 04:14:09.218: INFO: Received response from host: affinity-nodeport-k89cx
  May 14 04:14:09.218: INFO: Received response from host: affinity-nodeport-k89cx
  May 14 04:14:09.218: INFO: Received response from host: affinity-nodeport-k89cx
  May 14 04:14:09.218: INFO: Received response from host: affinity-nodeport-k89cx
  May 14 04:14:09.218: INFO: Received response from host: affinity-nodeport-k89cx
  May 14 04:14:09.218: INFO: Received response from host: affinity-nodeport-k89cx
  May 14 04:14:09.218: INFO: Received response from host: affinity-nodeport-k89cx
  May 14 04:14:09.218: INFO: Received response from host: affinity-nodeport-k89cx
  May 14 04:14:09.218: INFO: Received response from host: affinity-nodeport-k89cx
  May 14 04:14:09.218: INFO: Received response from host: affinity-nodeport-k89cx
  May 14 04:14:09.218: INFO: Received response from host: affinity-nodeport-k89cx
  May 14 04:14:09.218: INFO: Received response from host: affinity-nodeport-k89cx
  May 14 04:14:09.218: INFO: Received response from host: affinity-nodeport-k89cx
  May 14 04:14:09.218: INFO: Received response from host: affinity-nodeport-k89cx
  May 14 04:14:09.218: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May 14 04:14:09.233: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-2769, will wait for the garbage collector to delete the pods @ 05/14/24 04:14:09.273
  May 14 04:14:09.352: INFO: Deleting ReplicationController affinity-nodeport took: 9.576805ms
  May 14 04:14:09.452: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.219489ms
  STEP: Destroying namespace "services-2769" for this suite. @ 05/14/24 04:14:12.794
• [10.393 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 05/14/24 04:14:12.804
  May 14 04:14:12.804: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename watch @ 05/14/24 04:14:12.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:14:12.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:14:12.834
  STEP: creating a watch on configmaps @ 05/14/24 04:14:12.837
  STEP: creating a new configmap @ 05/14/24 04:14:12.838
  STEP: modifying the configmap once @ 05/14/24 04:14:12.846
  STEP: closing the watch once it receives two notifications @ 05/14/24 04:14:12.855
  May 14 04:14:12.856: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9647  3c978b36-0ce2-48f7-91e6-7a4978f23365 26313239 0 2024-05-14 04:14:12 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-14 04:14:12 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May 14 04:14:12.857: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9647  3c978b36-0ce2-48f7-91e6-7a4978f23365 26313240 0 2024-05-14 04:14:12 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-14 04:14:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 05/14/24 04:14:12.857
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 05/14/24 04:14:12.869
  STEP: deleting the configmap @ 05/14/24 04:14:12.87
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 05/14/24 04:14:12.877
  May 14 04:14:12.877: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9647  3c978b36-0ce2-48f7-91e6-7a4978f23365 26313241 0 2024-05-14 04:14:12 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-14 04:14:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 14 04:14:12.877: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9647  3c978b36-0ce2-48f7-91e6-7a4978f23365 26313242 0 2024-05-14 04:14:12 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-14 04:14:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 14 04:14:12.877: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9647" for this suite. @ 05/14/24 04:14:12.883
• [0.087 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]
test/e2e/apps/statefulset.go:792
  STEP: Creating a kubernetes client @ 05/14/24 04:14:12.892
  May 14 04:14:12.892: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename statefulset @ 05/14/24 04:14:12.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:14:12.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:14:12.925
  STEP: Creating service test in namespace statefulset-57 @ 05/14/24 04:14:12.928
  STEP: Looking for a node to schedule stateful set and pod @ 05/14/24 04:14:12.938
  STEP: Creating pod with conflicting port in namespace statefulset-57 @ 05/14/24 04:14:12.955
  STEP: Waiting until pod test-pod will start running in namespace statefulset-57 @ 05/14/24 04:14:12.964
  STEP: Creating statefulset with conflicting port in namespace statefulset-57 @ 05/14/24 04:14:14.973
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-57 @ 05/14/24 04:14:14.993
  May 14 04:14:15.071: INFO: Observed stateful pod in namespace: statefulset-57, name: ss-0, uid: 99b4f97a-7e6f-4fac-ba75-669fc80a4eab, status phase: Pending. Waiting for statefulset controller to delete.
  May 14 04:14:15.097: INFO: Observed stateful pod in namespace: statefulset-57, name: ss-0, uid: 99b4f97a-7e6f-4fac-ba75-669fc80a4eab, status phase: Failed. Waiting for statefulset controller to delete.
  May 14 04:14:15.126: INFO: Observed stateful pod in namespace: statefulset-57, name: ss-0, uid: 99b4f97a-7e6f-4fac-ba75-669fc80a4eab, status phase: Failed. Waiting for statefulset controller to delete.
  May 14 04:14:15.129: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-57
  STEP: Removing pod with conflicting port in namespace statefulset-57 @ 05/14/24 04:14:15.129
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-57 and will be in running state @ 05/14/24 04:14:15.199
  May 14 04:14:17.238: INFO: Deleting all statefulset in ns statefulset-57
  May 14 04:14:17.241: INFO: Scaling statefulset ss to 0
  May 14 04:14:27.270: INFO: Waiting for statefulset status.replicas updated to 0
  May 14 04:14:27.275: INFO: Deleting statefulset ss
  May 14 04:14:27.293: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-57" for this suite. @ 05/14/24 04:14:27.299
• [14.415 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 05/14/24 04:14:27.307
  May 14 04:14:27.307: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename webhook @ 05/14/24 04:14:27.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:14:27.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:14:27.333
  STEP: Setting up server cert @ 05/14/24 04:14:27.379
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/14/24 04:14:27.985
  STEP: Deploying the webhook pod @ 05/14/24 04:14:28
  STEP: Wait for the deployment to be ready @ 05/14/24 04:14:28.024
  May 14 04:14:28.029: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/14/24 04:14:30.043
  STEP: Verifying the service has paired with the endpoint @ 05/14/24 04:14:30.061
  May 14 04:14:31.061: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 05/14/24 04:14:31.075
  STEP: create a configmap that should be updated by the webhook @ 05/14/24 04:14:31.093
  May 14 04:14:31.106: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6934" for this suite. @ 05/14/24 04:14:31.176
  STEP: Destroying namespace "webhook-markers-3171" for this suite. @ 05/14/24 04:14:31.19
• [3.894 seconds]
------------------------------
S
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance]
test/e2e/network/ingress.go:556
  STEP: Creating a kubernetes client @ 05/14/24 04:14:31.201
  May 14 04:14:31.201: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename ingress @ 05/14/24 04:14:31.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:14:31.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:14:31.245
  STEP: getting /apis @ 05/14/24 04:14:31.249
  STEP: getting /apis/networking.k8s.io @ 05/14/24 04:14:31.254
  STEP: getting /apis/networking.k8s.iov1 @ 05/14/24 04:14:31.255
  STEP: creating @ 05/14/24 04:14:31.256
  STEP: getting @ 05/14/24 04:14:31.296
  STEP: listing @ 05/14/24 04:14:31.3
  STEP: watching @ 05/14/24 04:14:31.304
  May 14 04:14:31.304: INFO: starting watch
  STEP: cluster-wide listing @ 05/14/24 04:14:31.306
  STEP: cluster-wide watching @ 05/14/24 04:14:31.31
  May 14 04:14:31.310: INFO: starting watch
  STEP: patching @ 05/14/24 04:14:31.311
  STEP: updating @ 05/14/24 04:14:31.323
  May 14 04:14:31.336: INFO: waiting for watch events with expected annotations
  May 14 04:14:31.337: INFO: saw patched and updated annotations
  STEP: patching /status @ 05/14/24 04:14:31.337
  STEP: updating /status @ 05/14/24 04:14:31.344
  STEP: get /status @ 05/14/24 04:14:31.355
  STEP: deleting @ 05/14/24 04:14:31.358
  STEP: deleting a collection @ 05/14/24 04:14:31.388
  May 14 04:14:31.418: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-7272" for this suite. @ 05/14/24 04:14:31.431
• [0.251 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:117
  STEP: Creating a kubernetes client @ 05/14/24 04:14:31.453
  May 14 04:14:31.453: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename emptydir @ 05/14/24 04:14:31.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:14:31.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:14:31.487
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/14/24 04:14:31.49
  STEP: Saw pod success @ 05/14/24 04:14:35.519
  May 14 04:14:35.522: INFO: Trying to get logs from node viola-paas-worker03 pod pod-e39a9d7f-c9ad-4fb0-bd0d-423d50fd534d container test-container: <nil>
  STEP: delete the pod @ 05/14/24 04:14:35.542
  May 14 04:14:35.661: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8873" for this suite. @ 05/14/24 04:14:35.665
• [4.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 05/14/24 04:14:35.673
  May 14 04:14:35.673: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename container-probe @ 05/14/24 04:14:35.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:14:35.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:14:35.705
  STEP: Creating pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904 @ 05/14/24 04:14:35.707
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/14/24 04:14:37.729
  May 14 04:14:37.732: INFO: Initial restart count of pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e is 0
  May 14 04:14:37.736: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:14:39.742: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:14:41.748: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:14:43.755: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:14:45.760: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:14:47.767: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:14:49.773: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:14:51.781: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:14:53.786: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:14:55.791: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:14:57.798: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:14:59.806: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:15:01.811: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:15:03.818: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:15:05.823: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:15:07.852: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:15:09.858: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:15:11.865: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:15:13.871: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:15:15.878: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:15:17.884: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:15:19.891: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:15:21.897: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:15:23.903: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:15:25.908: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:15:27.915: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:15:29.923: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:15:31.930: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:15:33.936: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:15:35.941: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:15:37.947: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:15:39.962: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:15:42.046: INFO: Get pod test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e in namespace container-probe-4904
  May 14 04:15:42.046: INFO: Restart count of pod container-probe-4904/test-grpc-d3622eb8-e269-4d2c-8222-f32605e1396e is now 1 (1m4.313394977s elapsed)
  May 14 04:15:42.046: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/14/24 04:15:42.055
  STEP: Destroying namespace "container-probe-4904" for this suite. @ 05/14/24 04:15:42.08
• [66.421 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 05/14/24 04:15:42.096
  May 14 04:15:42.096: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename configmap @ 05/14/24 04:15:42.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:15:42.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:15:42.138
  STEP: Creating configMap with name configmap-test-volume-e488949c-1393-4161-a006-2c145f42da53 @ 05/14/24 04:15:42.141
  STEP: Creating a pod to test consume configMaps @ 05/14/24 04:15:42.15
  STEP: Saw pod success @ 05/14/24 04:15:46.18
  May 14 04:15:46.183: INFO: Trying to get logs from node viola-paas-worker03 pod pod-configmaps-e2ca52da-7843-4dfc-9655-b6b77fb88c8d container configmap-volume-test: <nil>
  STEP: delete the pod @ 05/14/24 04:15:46.191
  May 14 04:15:46.213: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9718" for this suite. @ 05/14/24 04:15:46.219
• [4.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance]
test/e2e/apps/replica_set.go:154
  STEP: Creating a kubernetes client @ 05/14/24 04:15:46.233
  May 14 04:15:46.233: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename replicaset @ 05/14/24 04:15:46.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:15:46.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:15:46.272
  May 14 04:15:46.301: INFO: Pod name sample-pod: Found 0 pods out of 1
  May 14 04:15:51.306: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/14/24 04:15:51.306
  STEP: Scaling up "test-rs" replicaset  @ 05/14/24 04:15:51.306
  May 14 04:15:51.320: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 05/14/24 04:15:51.32
  May 14 04:15:51.332: INFO: observed ReplicaSet test-rs in namespace replicaset-5272 with ReadyReplicas 1, AvailableReplicas 1
  May 14 04:15:51.587: INFO: observed ReplicaSet test-rs in namespace replicaset-5272 with ReadyReplicas 1, AvailableReplicas 1
  May 14 04:15:51.625: INFO: observed ReplicaSet test-rs in namespace replicaset-5272 with ReadyReplicas 1, AvailableReplicas 1
  May 14 04:15:51.641: INFO: observed ReplicaSet test-rs in namespace replicaset-5272 with ReadyReplicas 1, AvailableReplicas 1
  May 14 04:15:52.685: INFO: observed ReplicaSet test-rs in namespace replicaset-5272 with ReadyReplicas 2, AvailableReplicas 2
  May 14 04:15:53.019: INFO: observed Replicaset test-rs in namespace replicaset-5272 with ReadyReplicas 3 found true
  May 14 04:15:53.019: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5272" for this suite. @ 05/14/24 04:15:53.025
• [6.801 seconds]
------------------------------
SSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:45
  STEP: Creating a kubernetes client @ 05/14/24 04:15:53.035
  May 14 04:15:53.035: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename configmap @ 05/14/24 04:15:53.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:15:53.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:15:53.068
  STEP: Creating configMap configmap-4949/configmap-test-aeef9105-972a-4391-a47f-b1e0dba31a57 @ 05/14/24 04:15:53.071
  STEP: Creating a pod to test consume configMaps @ 05/14/24 04:15:53.083
  STEP: Saw pod success @ 05/14/24 04:15:57.111
  May 14 04:15:57.113: INFO: Trying to get logs from node viola-paas-worker03 pod pod-configmaps-21a25ba1-691b-4448-abfd-1e5653d9068e container env-test: <nil>
  STEP: delete the pod @ 05/14/24 04:15:57.119
  May 14 04:15:57.141: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4949" for this suite. @ 05/14/24 04:15:57.146
• [4.123 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:58
  STEP: Creating a kubernetes client @ 05/14/24 04:15:57.158
  May 14 04:15:57.158: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/14/24 04:15:57.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:15:57.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:15:57.189
  May 14 04:15:57.191: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 04:16:03.218: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3794" for this suite. @ 05/14/24 04:16:03.225
• [6.098 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:93
  STEP: Creating a kubernetes client @ 05/14/24 04:16:03.257
  May 14 04:16:03.257: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename configmap @ 05/14/24 04:16:03.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:16:03.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:16:03.298
  STEP: Creating configMap configmap-6442/configmap-test-29530adf-cdd0-4aa6-becc-437f74ba5aff @ 05/14/24 04:16:03.301
  STEP: Creating a pod to test consume configMaps @ 05/14/24 04:16:03.308
  STEP: Saw pod success @ 05/14/24 04:16:07.332
  May 14 04:16:07.336: INFO: Trying to get logs from node viola-paas-worker03 pod pod-configmaps-4f528780-0cb2-4037-bf19-fd13c98bd2ee container env-test: <nil>
  STEP: delete the pod @ 05/14/24 04:16:07.342
  May 14 04:16:07.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6442" for this suite. @ 05/14/24 04:16:07.369
• [4.123 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs  [Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 05/14/24 04:16:07.38
  May 14 04:16:07.380: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename kubectl-logs @ 05/14/24 04:16:07.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:16:07.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:16:07.413
  STEP: creating an pod @ 05/14/24 04:16:07.415
  May 14 04:16:07.415: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-logs-1834 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.45 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  May 14 04:16:07.492: INFO: stderr: ""
  May 14 04:16:07.492: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 05/14/24 04:16:07.492
  May 14 04:16:07.492: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  May 14 04:16:09.524: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 05/14/24 04:16:09.524
  May 14 04:16:09.524: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-logs-1834 logs logs-generator logs-generator'
  May 14 04:16:09.619: INFO: stderr: ""
  May 14 04:16:09.620: INFO: stdout: "I0514 04:16:08.230076       1 logs_generator.go:76] 0 POST /api/v1/namespaces/kube-system/pods/t66 523\nI0514 04:16:08.430279       1 logs_generator.go:76] 1 GET /api/v1/namespaces/default/pods/xv8 561\nI0514 04:16:08.630899       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/lbb 428\nI0514 04:16:08.830186       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/mjq 269\nI0514 04:16:09.030577       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/5shq 387\nI0514 04:16:09.230944       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/dt9d 495\nI0514 04:16:09.430235       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/xz5 469\n"
  STEP: limiting log lines @ 05/14/24 04:16:09.62
  May 14 04:16:09.620: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-logs-1834 logs logs-generator logs-generator --tail=1'
  May 14 04:16:09.697: INFO: stderr: ""
  May 14 04:16:09.697: INFO: stdout: "I0514 04:16:09.630548       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/8v2 300\n"
  May 14 04:16:09.697: INFO: got output "I0514 04:16:09.630548       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/8v2 300\n"
  STEP: limiting log bytes @ 05/14/24 04:16:09.697
  May 14 04:16:09.697: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-logs-1834 logs logs-generator logs-generator --limit-bytes=1'
  May 14 04:16:09.771: INFO: stderr: ""
  May 14 04:16:09.771: INFO: stdout: "I"
  May 14 04:16:09.771: INFO: got output "I"
  STEP: exposing timestamps @ 05/14/24 04:16:09.771
  May 14 04:16:09.771: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-logs-1834 logs logs-generator logs-generator --tail=1 --timestamps'
  May 14 04:16:09.838: INFO: stderr: ""
  May 14 04:16:09.839: INFO: stdout: "2024-05-14T13:16:09.831118968+09:00 I0514 04:16:09.830941       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/b72 312\n"
  May 14 04:16:09.839: INFO: got output "2024-05-14T13:16:09.831118968+09:00 I0514 04:16:09.830941       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/b72 312\n"
  STEP: restricting to a time range @ 05/14/24 04:16:09.839
  May 14 04:16:12.340: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-logs-1834 logs logs-generator logs-generator --since=1s'
  May 14 04:16:12.409: INFO: stderr: ""
  May 14 04:16:12.409: INFO: stdout: "I0514 04:16:11.430176       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/kube-system/pods/9m6m 263\nI0514 04:16:11.630567       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/jzwh 264\nI0514 04:16:11.831003       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/mnnp 262\nI0514 04:16:12.030350       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/kube-system/pods/zdc 392\nI0514 04:16:12.230771       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/lk9j 319\n"
  May 14 04:16:12.409: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-logs-1834 logs logs-generator logs-generator --since=24h'
  May 14 04:16:12.528: INFO: stderr: ""
  May 14 04:16:12.528: INFO: stdout: "I0514 04:16:08.230076       1 logs_generator.go:76] 0 POST /api/v1/namespaces/kube-system/pods/t66 523\nI0514 04:16:08.430279       1 logs_generator.go:76] 1 GET /api/v1/namespaces/default/pods/xv8 561\nI0514 04:16:08.630899       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/lbb 428\nI0514 04:16:08.830186       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/mjq 269\nI0514 04:16:09.030577       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/5shq 387\nI0514 04:16:09.230944       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/dt9d 495\nI0514 04:16:09.430235       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/xz5 469\nI0514 04:16:09.630548       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/8v2 300\nI0514 04:16:09.830941       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/b72 312\nI0514 04:16:10.030544       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/default/pods/dtt 297\nI0514 04:16:10.230960       1 logs_generator.go:76] 10 POST /api/v1/namespaces/ns/pods/qg2 340\nI0514 04:16:10.430272       1 logs_generator.go:76] 11 POST /api/v1/namespaces/ns/pods/hzr 228\nI0514 04:16:10.630716       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/kube-system/pods/4bk 288\nI0514 04:16:10.831088       1 logs_generator.go:76] 13 POST /api/v1/namespaces/ns/pods/z6ht 375\nI0514 04:16:11.030453       1 logs_generator.go:76] 14 GET /api/v1/namespaces/default/pods/vmpw 354\nI0514 04:16:11.230874       1 logs_generator.go:76] 15 GET /api/v1/namespaces/ns/pods/w6wb 297\nI0514 04:16:11.430176       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/kube-system/pods/9m6m 263\nI0514 04:16:11.630567       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/jzwh 264\nI0514 04:16:11.831003       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/mnnp 262\nI0514 04:16:12.030350       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/kube-system/pods/zdc 392\nI0514 04:16:12.230771       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/lk9j 319\nI0514 04:16:12.431124       1 logs_generator.go:76] 21 GET /api/v1/namespaces/default/pods/hvj 567\n"
  May 14 04:16:12.528: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-logs-1834 delete pod logs-generator'
  May 14 04:16:13.590: INFO: stderr: ""
  May 14 04:16:13.590: INFO: stdout: "pod \"logs-generator\" deleted\n"
  May 14 04:16:13.590: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-1834" for this suite. @ 05/14/24 04:16:13.608
• [6.242 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:398
  STEP: Creating a kubernetes client @ 05/14/24 04:16:13.624
  May 14 04:16:13.624: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename namespaces @ 05/14/24 04:16:13.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:16:13.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:16:13.661
  STEP: Creating namespace "e2e-ns-ch76g" @ 05/14/24 04:16:13.663
  May 14 04:16:13.691: INFO: Namespace "e2e-ns-ch76g-8743" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-ch76g-8743" @ 05/14/24 04:16:13.691
  May 14 04:16:13.701: INFO: Namespace "e2e-ns-ch76g-8743" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-ch76g-8743" @ 05/14/24 04:16:13.701
  May 14 04:16:13.717: INFO: Namespace "e2e-ns-ch76g-8743" has []v1.FinalizerName{"kubernetes"}
  May 14 04:16:13.717: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7251" for this suite. @ 05/14/24 04:16:13.723
  STEP: Destroying namespace "e2e-ns-ch76g-8743" for this suite. @ 05/14/24 04:16:13.744
• [0.145 seconds]
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2165
  STEP: Creating a kubernetes client @ 05/14/24 04:16:13.769
  May 14 04:16:13.769: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename services @ 05/14/24 04:16:13.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:16:13.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:16:13.798
  STEP: creating service in namespace services-3972 @ 05/14/24 04:16:13.801
  STEP: creating service affinity-clusterip in namespace services-3972 @ 05/14/24 04:16:13.801
  STEP: creating replication controller affinity-clusterip in namespace services-3972 @ 05/14/24 04:16:13.817
  I0514 04:16:13.828439      23 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-3972, replica count: 3
  I0514 04:16:16.880646      23 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 14 04:16:16.888: INFO: Creating new exec pod
  May 14 04:16:19.907: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-3972 exec execpod-affinitykzhl5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  May 14 04:16:20.014: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  May 14 04:16:20.014: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 14 04:16:20.014: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-3972 exec execpod-affinitykzhl5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.11.68 80'
  May 14 04:16:20.120: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.11.68 80\nConnection to 10.233.11.68 80 port [tcp/http] succeeded!\n"
  May 14 04:16:20.120: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 14 04:16:20.120: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-3972 exec execpod-affinitykzhl5 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.11.68:80/ ; done'
  May 14 04:16:20.282: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.11.68:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.11.68:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.11.68:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.11.68:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.11.68:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.11.68:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.11.68:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.11.68:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.11.68:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.11.68:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.11.68:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.11.68:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.11.68:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.11.68:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.11.68:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.11.68:80/\n"
  May 14 04:16:20.282: INFO: stdout: "\naffinity-clusterip-l4smr\naffinity-clusterip-l4smr\naffinity-clusterip-l4smr\naffinity-clusterip-l4smr\naffinity-clusterip-l4smr\naffinity-clusterip-l4smr\naffinity-clusterip-l4smr\naffinity-clusterip-l4smr\naffinity-clusterip-l4smr\naffinity-clusterip-l4smr\naffinity-clusterip-l4smr\naffinity-clusterip-l4smr\naffinity-clusterip-l4smr\naffinity-clusterip-l4smr\naffinity-clusterip-l4smr\naffinity-clusterip-l4smr"
  May 14 04:16:20.282: INFO: Received response from host: affinity-clusterip-l4smr
  May 14 04:16:20.282: INFO: Received response from host: affinity-clusterip-l4smr
  May 14 04:16:20.282: INFO: Received response from host: affinity-clusterip-l4smr
  May 14 04:16:20.282: INFO: Received response from host: affinity-clusterip-l4smr
  May 14 04:16:20.282: INFO: Received response from host: affinity-clusterip-l4smr
  May 14 04:16:20.282: INFO: Received response from host: affinity-clusterip-l4smr
  May 14 04:16:20.282: INFO: Received response from host: affinity-clusterip-l4smr
  May 14 04:16:20.282: INFO: Received response from host: affinity-clusterip-l4smr
  May 14 04:16:20.282: INFO: Received response from host: affinity-clusterip-l4smr
  May 14 04:16:20.282: INFO: Received response from host: affinity-clusterip-l4smr
  May 14 04:16:20.282: INFO: Received response from host: affinity-clusterip-l4smr
  May 14 04:16:20.282: INFO: Received response from host: affinity-clusterip-l4smr
  May 14 04:16:20.282: INFO: Received response from host: affinity-clusterip-l4smr
  May 14 04:16:20.282: INFO: Received response from host: affinity-clusterip-l4smr
  May 14 04:16:20.282: INFO: Received response from host: affinity-clusterip-l4smr
  May 14 04:16:20.282: INFO: Received response from host: affinity-clusterip-l4smr
  May 14 04:16:20.282: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May 14 04:16:20.288: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-3972, will wait for the garbage collector to delete the pods @ 05/14/24 04:16:20.308
  May 14 04:16:20.374: INFO: Deleting ReplicationController affinity-clusterip took: 12.342722ms
  May 14 04:16:20.475: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.153997ms
  STEP: Destroying namespace "services-3972" for this suite. @ 05/14/24 04:16:23.813
• [10.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 05/14/24 04:16:23.823
  May 14 04:16:23.823: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename container-probe @ 05/14/24 04:16:23.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:16:23.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:16:23.867
  STEP: Creating pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802 @ 05/14/24 04:16:23.869
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/14/24 04:16:25.895
  May 14 04:16:25.897: INFO: Initial restart count of pod busybox-116da955-8398-47b3-94fb-d09720b82867 is 0
  May 14 04:16:25.900: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:16:27.907: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:16:29.913: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:16:31.921: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:16:33.928: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:16:35.935: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:16:37.941: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:16:39.947: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:16:41.954: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:16:43.959: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:16:45.964: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:16:47.970: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:16:49.980: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:16:51.987: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:16:53.994: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:16:55.999: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:16:58.006: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:17:00.013: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:17:02.018: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:17:04.025: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:17:06.030: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:17:08.036: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:17:10.043: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:17:12.048: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:17:14.056: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:17:16.061: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:17:18.067: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:17:20.073: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:17:22.080: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:17:24.086: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:17:26.092: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:17:28.098: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:17:30.104: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:17:32.112: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:17:34.120: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:17:36.126: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:17:38.133: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:17:40.139: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:17:42.150: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:17:44.157: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:17:46.161: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:17:48.167: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:17:50.173: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:17:52.178: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:17:54.185: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:17:56.194: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:17:58.201: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:18:00.207: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:18:02.212: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:18:04.218: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:18:06.224: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:18:08.231: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:18:10.238: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:18:12.245: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:18:14.251: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:18:16.257: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:18:18.263: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:18:20.269: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:18:22.275: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:18:24.282: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:18:26.286: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:18:28.294: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:18:30.299: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:18:32.304: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:18:34.310: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:18:36.317: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:18:38.324: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:18:40.329: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:18:42.339: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:18:44.346: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:18:46.351: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:18:48.356: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:18:50.361: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:18:52.367: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:18:54.373: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:18:56.379: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:18:58.385: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:19:00.391: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:19:02.397: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:19:04.405: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:19:06.411: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:19:08.419: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:19:10.425: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:19:12.432: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:19:14.438: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:19:16.444: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:19:18.451: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:19:20.456: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:19:22.463: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:19:24.469: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:19:26.476: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:19:28.483: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:19:30.488: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:19:32.494: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:19:34.500: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:19:36.507: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:19:38.514: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:19:40.520: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:19:42.526: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:19:44.540: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:19:46.547: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:19:48.553: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:19:50.561: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:19:52.567: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:19:54.573: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:19:56.579: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:19:58.586: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:20:00.592: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:20:02.598: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:20:04.605: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:20:06.613: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:20:08.619: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:20:10.627: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:20:12.633: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:20:14.640: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:20:16.647: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:20:18.652: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:20:20.658: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:20:22.663: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:20:24.671: INFO: Get pod busybox-116da955-8398-47b3-94fb-d09720b82867 in namespace container-probe-6802
  May 14 04:20:26.672: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/14/24 04:20:26.681
  STEP: Destroying namespace "container-probe-6802" for this suite. @ 05/14/24 04:20:26.712
• [242.897 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 05/14/24 04:20:26.725
  May 14 04:20:26.725: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename pods @ 05/14/24 04:20:26.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:20:26.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:20:26.765
  STEP: creating the pod @ 05/14/24 04:20:26.768
  STEP: submitting the pod to kubernetes @ 05/14/24 04:20:26.768
  STEP: verifying QOS class is set on the pod @ 05/14/24 04:20:26.779
  May 14 04:20:26.782: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2198" for this suite. @ 05/14/24 04:20:26.788
• [0.078 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:125
  STEP: Creating a kubernetes client @ 05/14/24 04:20:26.803
  May 14 04:20:26.803: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename discovery @ 05/14/24 04:20:26.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:20:26.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:20:26.835
  STEP: Setting up server cert @ 05/14/24 04:20:26.839
  May 14 04:20:27.136: INFO: Checking APIGroup: apiregistration.k8s.io
  May 14 04:20:27.137: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  May 14 04:20:27.138: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  May 14 04:20:27.138: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  May 14 04:20:27.138: INFO: Checking APIGroup: apps
  May 14 04:20:27.139: INFO: PreferredVersion.GroupVersion: apps/v1
  May 14 04:20:27.139: INFO: Versions found [{apps/v1 v1}]
  May 14 04:20:27.139: INFO: apps/v1 matches apps/v1
  May 14 04:20:27.139: INFO: Checking APIGroup: events.k8s.io
  May 14 04:20:27.140: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  May 14 04:20:27.140: INFO: Versions found [{events.k8s.io/v1 v1}]
  May 14 04:20:27.140: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  May 14 04:20:27.140: INFO: Checking APIGroup: authentication.k8s.io
  May 14 04:20:27.141: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  May 14 04:20:27.141: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  May 14 04:20:27.141: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  May 14 04:20:27.141: INFO: Checking APIGroup: authorization.k8s.io
  May 14 04:20:27.142: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  May 14 04:20:27.142: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  May 14 04:20:27.142: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  May 14 04:20:27.142: INFO: Checking APIGroup: autoscaling
  May 14 04:20:27.143: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  May 14 04:20:27.143: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  May 14 04:20:27.143: INFO: autoscaling/v2 matches autoscaling/v2
  May 14 04:20:27.143: INFO: Checking APIGroup: batch
  May 14 04:20:27.143: INFO: PreferredVersion.GroupVersion: batch/v1
  May 14 04:20:27.144: INFO: Versions found [{batch/v1 v1}]
  May 14 04:20:27.144: INFO: batch/v1 matches batch/v1
  May 14 04:20:27.144: INFO: Checking APIGroup: certificates.k8s.io
  May 14 04:20:27.144: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  May 14 04:20:27.144: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  May 14 04:20:27.144: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  May 14 04:20:27.144: INFO: Checking APIGroup: networking.k8s.io
  May 14 04:20:27.145: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  May 14 04:20:27.145: INFO: Versions found [{networking.k8s.io/v1 v1}]
  May 14 04:20:27.145: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  May 14 04:20:27.145: INFO: Checking APIGroup: policy
  May 14 04:20:27.146: INFO: PreferredVersion.GroupVersion: policy/v1
  May 14 04:20:27.146: INFO: Versions found [{policy/v1 v1}]
  May 14 04:20:27.146: INFO: policy/v1 matches policy/v1
  May 14 04:20:27.146: INFO: Checking APIGroup: rbac.authorization.k8s.io
  May 14 04:20:27.147: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  May 14 04:20:27.147: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  May 14 04:20:27.147: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  May 14 04:20:27.147: INFO: Checking APIGroup: storage.k8s.io
  May 14 04:20:27.148: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  May 14 04:20:27.148: INFO: Versions found [{storage.k8s.io/v1 v1}]
  May 14 04:20:27.148: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  May 14 04:20:27.148: INFO: Checking APIGroup: admissionregistration.k8s.io
  May 14 04:20:27.149: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  May 14 04:20:27.149: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  May 14 04:20:27.149: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  May 14 04:20:27.149: INFO: Checking APIGroup: apiextensions.k8s.io
  May 14 04:20:27.150: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  May 14 04:20:27.150: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  May 14 04:20:27.150: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  May 14 04:20:27.150: INFO: Checking APIGroup: scheduling.k8s.io
  May 14 04:20:27.151: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  May 14 04:20:27.151: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  May 14 04:20:27.151: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  May 14 04:20:27.151: INFO: Checking APIGroup: coordination.k8s.io
  May 14 04:20:27.152: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  May 14 04:20:27.152: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  May 14 04:20:27.152: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  May 14 04:20:27.152: INFO: Checking APIGroup: node.k8s.io
  May 14 04:20:27.153: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  May 14 04:20:27.153: INFO: Versions found [{node.k8s.io/v1 v1}]
  May 14 04:20:27.153: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  May 14 04:20:27.153: INFO: Checking APIGroup: discovery.k8s.io
  May 14 04:20:27.154: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  May 14 04:20:27.154: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  May 14 04:20:27.154: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  May 14 04:20:27.154: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  May 14 04:20:27.155: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
  May 14 04:20:27.155: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
  May 14 04:20:27.155: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
  May 14 04:20:27.155: INFO: Checking APIGroup: acme.cert-manager.io
  May 14 04:20:27.156: INFO: PreferredVersion.GroupVersion: acme.cert-manager.io/v1
  May 14 04:20:27.156: INFO: Versions found [{acme.cert-manager.io/v1 v1}]
  May 14 04:20:27.156: INFO: acme.cert-manager.io/v1 matches acme.cert-manager.io/v1
  May 14 04:20:27.156: INFO: Checking APIGroup: cert-manager.io
  May 14 04:20:27.157: INFO: PreferredVersion.GroupVersion: cert-manager.io/v1
  May 14 04:20:27.157: INFO: Versions found [{cert-manager.io/v1 v1}]
  May 14 04:20:27.157: INFO: cert-manager.io/v1 matches cert-manager.io/v1
  May 14 04:20:27.157: INFO: Checking APIGroup: monitoring.coreos.com
  May 14 04:20:27.158: INFO: PreferredVersion.GroupVersion: monitoring.coreos.com/v1
  May 14 04:20:27.158: INFO: Versions found [{monitoring.coreos.com/v1 v1} {monitoring.coreos.com/v1alpha1 v1alpha1}]
  May 14 04:20:27.158: INFO: monitoring.coreos.com/v1 matches monitoring.coreos.com/v1
  May 14 04:20:27.158: INFO: Checking APIGroup: security.istio.io
  May 14 04:20:27.159: INFO: PreferredVersion.GroupVersion: security.istio.io/v1
  May 14 04:20:27.159: INFO: Versions found [{security.istio.io/v1 v1} {security.istio.io/v1beta1 v1beta1}]
  May 14 04:20:27.159: INFO: security.istio.io/v1 matches security.istio.io/v1
  May 14 04:20:27.159: INFO: Checking APIGroup: extensions.istio.io
  May 14 04:20:27.160: INFO: PreferredVersion.GroupVersion: extensions.istio.io/v1alpha1
  May 14 04:20:27.160: INFO: Versions found [{extensions.istio.io/v1alpha1 v1alpha1}]
  May 14 04:20:27.160: INFO: extensions.istio.io/v1alpha1 matches extensions.istio.io/v1alpha1
  May 14 04:20:27.160: INFO: Checking APIGroup: install.istio.io
  May 14 04:20:27.161: INFO: PreferredVersion.GroupVersion: install.istio.io/v1alpha1
  May 14 04:20:27.161: INFO: Versions found [{install.istio.io/v1alpha1 v1alpha1}]
  May 14 04:20:27.161: INFO: install.istio.io/v1alpha1 matches install.istio.io/v1alpha1
  May 14 04:20:27.161: INFO: Checking APIGroup: kafka.strimzi.io
  May 14 04:20:27.163: INFO: PreferredVersion.GroupVersion: kafka.strimzi.io/v1beta2
  May 14 04:20:27.163: INFO: Versions found [{kafka.strimzi.io/v1beta2 v1beta2} {kafka.strimzi.io/v1beta1 v1beta1} {kafka.strimzi.io/v1alpha1 v1alpha1}]
  May 14 04:20:27.163: INFO: kafka.strimzi.io/v1beta2 matches kafka.strimzi.io/v1beta2
  May 14 04:20:27.163: INFO: Checking APIGroup: telemetry.istio.io
  May 14 04:20:27.163: INFO: PreferredVersion.GroupVersion: telemetry.istio.io/v1alpha1
  May 14 04:20:27.164: INFO: Versions found [{telemetry.istio.io/v1alpha1 v1alpha1}]
  May 14 04:20:27.164: INFO: telemetry.istio.io/v1alpha1 matches telemetry.istio.io/v1alpha1
  May 14 04:20:27.164: INFO: Checking APIGroup: networking.istio.io
  May 14 04:20:27.165: INFO: PreferredVersion.GroupVersion: networking.istio.io/v1beta1
  May 14 04:20:27.165: INFO: Versions found [{networking.istio.io/v1beta1 v1beta1} {networking.istio.io/v1alpha3 v1alpha3}]
  May 14 04:20:27.165: INFO: networking.istio.io/v1beta1 matches networking.istio.io/v1beta1
  May 14 04:20:27.165: INFO: Checking APIGroup: core.strimzi.io
  May 14 04:20:27.166: INFO: PreferredVersion.GroupVersion: core.strimzi.io/v1beta2
  May 14 04:20:27.166: INFO: Versions found [{core.strimzi.io/v1beta2 v1beta2}]
  May 14 04:20:27.166: INFO: core.strimzi.io/v1beta2 matches core.strimzi.io/v1beta2
  May 14 04:20:27.166: INFO: Checking APIGroup: cilium.io
  May 14 04:20:27.167: INFO: PreferredVersion.GroupVersion: cilium.io/v2
  May 14 04:20:27.167: INFO: Versions found [{cilium.io/v2 v2} {cilium.io/v2alpha1 v2alpha1}]
  May 14 04:20:27.167: INFO: cilium.io/v2 matches cilium.io/v2
  May 14 04:20:27.167: INFO: Checking APIGroup: metrics.k8s.io
  May 14 04:20:27.168: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  May 14 04:20:27.168: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  May 14 04:20:27.168: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  May 14 04:20:27.169: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-1217" for this suite. @ 05/14/24 04:20:27.177
• [0.382 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 05/14/24 04:20:27.186
  May 14 04:20:27.186: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename deployment @ 05/14/24 04:20:27.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:20:27.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:20:27.221
  May 14 04:20:27.224: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  May 14 04:20:27.246: INFO: Pod name sample-pod: Found 0 pods out of 1
  May 14 04:20:32.253: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/14/24 04:20:32.253
  May 14 04:20:32.253: INFO: Creating deployment "test-rolling-update-deployment"
  May 14 04:20:32.263: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  May 14 04:20:32.273: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  May 14 04:20:34.283: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  May 14 04:20:34.286: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  May 14 04:20:34.296: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2505",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "987c17eb-a0a0-4fa3-80db-5d98c1234e90",
      ResourceVersion: (string) (len=8) "26316143",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851257232,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=82) "ReplicaSet \"test-rolling-update-deployment-7f5c55c64\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 14 04:20:34.300: INFO: New ReplicaSet "test-rolling-update-deployment-7f5c55c64" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2505",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b77a7654-c9c0-4a1c-a237-0cdaf876e55e",
      ResourceVersion: (string) (len=8) "26316129",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851257232,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "987c17eb-a0a0-4fa3-80db-5d98c1234e90",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 38 37 63 31 37  65 62 2d 61 30 61 30 2d  |\"987c17eb-a0a0-|
              00000120  34 66 61 33 2d 38 30 64  62 2d 35 64 39 38 63 31  |4fa3-80db-5d98c1|
              00000130  32 33 34 65 39 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |234e90\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 14 04:20:34.300: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  May 14 04:20:34.301: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2505",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bf87dac6-8865-4045-96aa-e16f2bc80398",
      ResourceVersion: (string) (len=8) "26316142",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851257227,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "987c17eb-a0a0-4fa3-80db-5d98c1234e90",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 39 38 37 63 31 37 65  |"uid\":\"987c17e|
              000000b0  62 2d 61 30 61 30 2d 34  66 61 33 2d 38 30 64 62  |b-a0a0-4fa3-80db|
              000000c0  2d 35 64 39 38 63 31 32  33 34 65 39 30 5c 22 7d  |-5d98c1234e90\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 14 04:20:34.305: INFO: Pod "test-rolling-update-deployment-7f5c55c64-hrvb9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=46) "test-rolling-update-deployment-7f5c55c64-hrvb9",
      GenerateName: (string) (len=41) "test-rolling-update-deployment-7f5c55c64-",
      Namespace: (string) (len=15) "deployment-2505",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1e1fa1eb-0237-4f9d-969c-fc2a8515c40c",
      ResourceVersion: (string) (len=8) "26316128",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851257232,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
          UID: (types.UID) (len=36) "b77a7654-c9c0-4a1c-a237-0cdaf876e55e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 37  37 61 37 36 35 34 2d 63  |d\":\"b77a7654-c|
              00000090  39 63 30 2d 34 61 31 63  2d 61 32 33 37 2d 30 63  |9c0-4a1c-a237-0c|
              000000a0  64 61 66 38 37 36 65 35  35 65 5c 22 7d 22 3a 7b  |daf876e55e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 31 39 35 5c 22 7d  |10.233.64.195\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4n2s4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4n2s4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.241",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.64.195",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.195"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851257232,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851257233,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://8ec2723620bdf09118adf2c6f875f129a28e3d11065f4348ee89ad060f10fa6a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:20:34.306: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2505" for this suite. @ 05/14/24 04:20:34.313
• [7.136 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 05/14/24 04:20:34.321
  May 14 04:20:34.321: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename container-runtime @ 05/14/24 04:20:34.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:20:34.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:20:34.367
  STEP: create the container @ 05/14/24 04:20:34.37
  W0514 04:20:34.384526      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/14/24 04:20:34.384
  STEP: get the container status @ 05/14/24 04:20:38.41
  STEP: the container should be terminated @ 05/14/24 04:20:38.413
  STEP: the termination message should be set @ 05/14/24 04:20:38.413
  May 14 04:20:38.413: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 05/14/24 04:20:38.413
  May 14 04:20:38.437: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5295" for this suite. @ 05/14/24 04:20:38.447
• [4.132 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:84
  STEP: Creating a kubernetes client @ 05/14/24 04:20:38.454
  May 14 04:20:38.454: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename pod-network-test @ 05/14/24 04:20:38.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:20:38.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:20:38.486
  STEP: Performing setup for networking test in namespace pod-network-test-5933 @ 05/14/24 04:20:38.489
  STEP: creating a selector @ 05/14/24 04:20:38.489
  STEP: Creating the service pods in kubernetes @ 05/14/24 04:20:38.489
  May 14 04:20:38.489: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/14/24 04:21:00.7
  May 14 04:21:02.721: INFO: Setting MaxTries for pod polling to 55 for networking test based on endpoint count 5
  May 14 04:21:02.721: INFO: Breadth first check of 10.233.67.127 on host 172.10.50.45...
  May 14 04:21:02.724: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.64.69:9080/dial?request=hostname&protocol=http&host=10.233.67.127&port=8083&tries=1'] Namespace:pod-network-test-5933 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 04:21:02.724: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 04:21:02.725: INFO: ExecWithOptions: Clientset creation
  May 14 04:21:02.725: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5933/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.64.69%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.67.127%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 14 04:21:02.786: INFO: Waiting for responses: map[]
  May 14 04:21:02.786: INFO: reached 10.233.67.127 after 0/1 tries
  May 14 04:21:02.786: INFO: Breadth first check of 10.233.70.126 on host 172.10.50.211...
  May 14 04:21:02.789: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.64.69:9080/dial?request=hostname&protocol=http&host=10.233.70.126&port=8083&tries=1'] Namespace:pod-network-test-5933 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 04:21:02.789: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 04:21:02.790: INFO: ExecWithOptions: Clientset creation
  May 14 04:21:02.790: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5933/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.64.69%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.70.126%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 14 04:21:02.845: INFO: Waiting for responses: map[]
  May 14 04:21:02.845: INFO: reached 10.233.70.126 after 0/1 tries
  May 14 04:21:02.845: INFO: Breadth first check of 10.233.69.76 on host 172.10.50.107...
  May 14 04:21:02.850: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.64.69:9080/dial?request=hostname&protocol=http&host=10.233.69.76&port=8083&tries=1'] Namespace:pod-network-test-5933 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 04:21:02.850: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 04:21:02.851: INFO: ExecWithOptions: Clientset creation
  May 14 04:21:02.851: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5933/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.64.69%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.69.76%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 14 04:21:02.907: INFO: Waiting for responses: map[]
  May 14 04:21:02.907: INFO: reached 10.233.69.76 after 0/1 tries
  May 14 04:21:02.907: INFO: Breadth first check of 10.233.71.43 on host 172.10.50.165...
  May 14 04:21:02.943: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.64.69:9080/dial?request=hostname&protocol=http&host=10.233.71.43&port=8083&tries=1'] Namespace:pod-network-test-5933 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 04:21:02.943: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 04:21:02.944: INFO: ExecWithOptions: Clientset creation
  May 14 04:21:02.944: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5933/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.64.69%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.71.43%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 14 04:21:03.056: INFO: Waiting for responses: map[]
  May 14 04:21:03.056: INFO: reached 10.233.71.43 after 0/1 tries
  May 14 04:21:03.056: INFO: Breadth first check of 10.233.64.74 on host 172.10.50.241...
  May 14 04:21:03.061: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.64.69:9080/dial?request=hostname&protocol=http&host=10.233.64.74&port=8083&tries=1'] Namespace:pod-network-test-5933 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 04:21:03.061: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 04:21:03.061: INFO: ExecWithOptions: Clientset creation
  May 14 04:21:03.061: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5933/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.64.69%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.64.74%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 14 04:21:03.108: INFO: Waiting for responses: map[]
  May 14 04:21:03.108: INFO: reached 10.233.64.74 after 0/1 tries
  May 14 04:21:03.108: INFO: Going to retry 0 out of 5 pods....
  May 14 04:21:03.108: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5933" for this suite. @ 05/14/24 04:21:03.116
• [24.671 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]
test/e2e/apps/rc.go:85
  STEP: Creating a kubernetes client @ 05/14/24 04:21:03.128
  May 14 04:21:03.128: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename replication-controller @ 05/14/24 04:21:03.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:21:03.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:21:03.164
  May 14 04:21:03.166: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 05/14/24 04:21:04.181
  STEP: Checking rc "condition-test" has the desired failure condition set @ 05/14/24 04:21:04.188
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 05/14/24 04:21:05.198
  May 14 04:21:05.213: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 05/14/24 04:21:05.213
  May 14 04:21:06.224: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4040" for this suite. @ 05/14/24 04:21:06.231
• [3.110 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:46
  STEP: Creating a kubernetes client @ 05/14/24 04:21:06.238
  May 14 04:21:06.238: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename secrets @ 05/14/24 04:21:06.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:21:06.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:21:06.267
  STEP: Creating secret with name secret-test-1c450eef-6b80-4ba8-807a-6c71b0e4f8c1 @ 05/14/24 04:21:06.27
  STEP: Creating a pod to test consume secrets @ 05/14/24 04:21:06.278
  STEP: Saw pod success @ 05/14/24 04:21:10.3
  May 14 04:21:10.303: INFO: Trying to get logs from node viola-paas-worker03 pod pod-secrets-9d40cb52-f58a-4d95-93f9-381af26977ab container secret-env-test: <nil>
  STEP: delete the pod @ 05/14/24 04:21:10.321
  May 14 04:21:10.351: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1304" for this suite. @ 05/14/24 04:21:10.357
• [4.126 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]
test/e2e/kubectl/kubectl.go:1575
  STEP: Creating a kubernetes client @ 05/14/24 04:21:10.364
  May 14 04:21:10.364: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename kubectl @ 05/14/24 04:21:10.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:21:10.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:21:10.402
  STEP: creating the pod @ 05/14/24 04:21:10.405
  May 14 04:21:10.405: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-5189 create -f -'
  May 14 04:21:11.615: INFO: stderr: ""
  May 14 04:21:11.615: INFO: stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 05/14/24 04:21:13.627
  May 14 04:21:13.627: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-5189 label pods pause testing-label=testing-label-value'
  May 14 04:21:13.696: INFO: stderr: ""
  May 14 04:21:13.696: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 05/14/24 04:21:13.696
  May 14 04:21:13.696: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-5189 get pod pause -L testing-label'
  May 14 04:21:13.764: INFO: stderr: ""
  May 14 04:21:13.764: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 05/14/24 04:21:13.764
  May 14 04:21:13.764: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-5189 label pods pause testing-label-'
  May 14 04:21:13.840: INFO: stderr: ""
  May 14 04:21:13.840: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 05/14/24 04:21:13.84
  May 14 04:21:13.840: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-5189 get pod pause -L testing-label'
  May 14 04:21:13.907: INFO: stderr: ""
  May 14 04:21:13.907: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 05/14/24 04:21:13.907
  May 14 04:21:13.907: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-5189 delete --grace-period=0 --force -f -'
  May 14 04:21:13.999: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 14 04:21:13.999: INFO: stdout: "pod \"pause\" force deleted\n"
  May 14 04:21:13.999: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-5189 get rc,svc -l name=pause --no-headers'
  May 14 04:21:14.064: INFO: stderr: "No resources found in kubectl-5189 namespace.\n"
  May 14 04:21:14.064: INFO: stdout: ""
  May 14 04:21:14.064: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-5189 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  May 14 04:21:14.124: INFO: stderr: ""
  May 14 04:21:14.124: INFO: stdout: ""
  May 14 04:21:14.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5189" for this suite. @ 05/14/24 04:21:14.131
• [3.778 seconds]
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 05/14/24 04:21:14.143
  May 14 04:21:14.143: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename containers @ 05/14/24 04:21:14.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:21:14.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:21:14.185
  STEP: Creating a pod to test override arguments @ 05/14/24 04:21:14.188
  STEP: Saw pod success @ 05/14/24 04:21:18.212
  May 14 04:21:18.215: INFO: Trying to get logs from node viola-paas-worker03 pod client-containers-079580a0-43ed-4d6e-a07a-29a7d642c4d5 container agnhost-container: <nil>
  STEP: delete the pod @ 05/14/24 04:21:18.22
  May 14 04:21:18.248: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7279" for this suite. @ 05/14/24 04:21:18.254
• [4.121 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:168
  STEP: Creating a kubernetes client @ 05/14/24 04:21:18.264
  May 14 04:21:18.264: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/14/24 04:21:18.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:21:18.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:21:18.296
  STEP: create the container to handle the HTTPGet hook request. @ 05/14/24 04:21:18.304
  STEP: create the pod with lifecycle hook @ 05/14/24 04:21:20.327
  STEP: check poststart hook @ 05/14/24 04:21:22.352
  STEP: delete the pod with lifecycle hook @ 05/14/24 04:21:22.368
  May 14 04:21:24.388: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7432" for this suite. @ 05/14/24 04:21:24.395
• [6.146 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]
test/e2e/apps/rc.go:112
  STEP: Creating a kubernetes client @ 05/14/24 04:21:24.411
  May 14 04:21:24.411: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename replication-controller @ 05/14/24 04:21:24.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:21:24.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:21:24.442
  STEP: creating a ReplicationController @ 05/14/24 04:21:24.447
  STEP: waiting for RC to be added @ 05/14/24 04:21:24.459
  STEP: waiting for available Replicas @ 05/14/24 04:21:24.459
  STEP: patching ReplicationController @ 05/14/24 04:21:25.429
  STEP: waiting for RC to be modified @ 05/14/24 04:21:25.441
  STEP: patching ReplicationController status @ 05/14/24 04:21:25.442
  STEP: waiting for RC to be modified @ 05/14/24 04:21:25.454
  STEP: waiting for available Replicas @ 05/14/24 04:21:25.454
  STEP: fetching ReplicationController status @ 05/14/24 04:21:25.463
  STEP: patching ReplicationController scale @ 05/14/24 04:21:25.466
  STEP: waiting for RC to be modified @ 05/14/24 04:21:25.475
  STEP: waiting for ReplicationController's scale to be the max amount @ 05/14/24 04:21:25.475
  STEP: fetching ReplicationController; ensuring that it's patched @ 05/14/24 04:21:26.339
  STEP: updating ReplicationController status @ 05/14/24 04:21:26.345
  STEP: waiting for RC to be modified @ 05/14/24 04:21:26.352
  STEP: listing all ReplicationControllers @ 05/14/24 04:21:26.352
  STEP: checking that ReplicationController has expected values @ 05/14/24 04:21:26.355
  STEP: deleting ReplicationControllers by collection @ 05/14/24 04:21:26.355
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 05/14/24 04:21:26.372
  May 14 04:21:26.437: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0514 04:21:26.437864      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-9871" for this suite. @ 05/14/24 04:21:26.442
• [2.040 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
test/e2e/apimachinery/garbage_collector.go:638
  STEP: Creating a kubernetes client @ 05/14/24 04:21:26.451
  May 14 04:21:26.451: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename gc @ 05/14/24 04:21:26.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:21:26.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:21:26.474
  STEP: create the rc @ 05/14/24 04:21:26.483
  W0514 04:21:26.489040      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0514 04:21:27.438375      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:21:28.442923      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:21:29.443571      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:21:30.444401      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:21:31.451033      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:21:32.451820      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 05/14/24 04:21:32.493
  STEP: wait for the rc to be deleted @ 05/14/24 04:21:32.507
  E0514 04:21:33.452411      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:21:33.528: INFO: 87 pods remaining
  May 14 04:21:33.529: INFO: 80 pods has nil DeletionTimestamp
  May 14 04:21:33.529: INFO: 
  E0514 04:21:34.453348      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:21:34.572: INFO: 82 pods remaining
  May 14 04:21:34.573: INFO: 70 pods has nil DeletionTimestamp
  May 14 04:21:34.573: INFO: 
  E0514 04:21:35.453699      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:21:35.520: INFO: 77 pods remaining
  May 14 04:21:35.521: INFO: 60 pods has nil DeletionTimestamp
  May 14 04:21:35.521: INFO: 
  E0514 04:21:36.454318      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:21:36.521: INFO: 70 pods remaining
  May 14 04:21:36.521: INFO: 40 pods has nil DeletionTimestamp
  May 14 04:21:36.521: INFO: 
  E0514 04:21:37.454477      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:21:37.539: INFO: 69 pods remaining
  May 14 04:21:37.539: INFO: 31 pods has nil DeletionTimestamp
  May 14 04:21:37.539: INFO: 
  E0514 04:21:38.455126      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:21:38.538: INFO: 65 pods remaining
  May 14 04:21:38.538: INFO: 20 pods has nil DeletionTimestamp
  May 14 04:21:38.538: INFO: 
  E0514 04:21:39.455674      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:21:39.520: INFO: 61 pods remaining
  May 14 04:21:39.520: INFO: 1 pods has nil DeletionTimestamp
  May 14 04:21:39.520: INFO: 
  E0514 04:21:40.456683      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:21:40.526: INFO: 57 pods remaining
  May 14 04:21:40.526: INFO: 0 pods has nil DeletionTimestamp
  May 14 04:21:40.526: INFO: 
  E0514 04:21:41.456903      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:21:41.524: INFO: 46 pods remaining
  May 14 04:21:41.524: INFO: 0 pods has nil DeletionTimestamp
  May 14 04:21:41.524: INFO: 
  E0514 04:21:42.456980      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:21:42.519: INFO: 38 pods remaining
  May 14 04:21:42.519: INFO: 0 pods has nil DeletionTimestamp
  May 14 04:21:42.519: INFO: 
  E0514 04:21:43.457876      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:21:43.519: INFO: 26 pods remaining
  May 14 04:21:43.519: INFO: 0 pods has nil DeletionTimestamp
  May 14 04:21:43.519: INFO: 
  E0514 04:21:44.457932      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:21:44.518: INFO: 17 pods remaining
  May 14 04:21:44.518: INFO: 0 pods has nil DeletionTimestamp
  May 14 04:21:44.518: INFO: 
  E0514 04:21:45.458430      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:21:45.514: INFO: 7 pods remaining
  May 14 04:21:45.514: INFO: 0 pods has nil DeletionTimestamp
  May 14 04:21:45.514: INFO: 
  E0514 04:21:46.458954      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/14/24 04:21:46.515
  May 14 04:21:46.609: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May 14 04:21:46.609: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7330" for this suite. @ 05/14/24 04:21:46.616
• [20.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 05/14/24 04:21:46.629
  May 14 04:21:46.629: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename projected @ 05/14/24 04:21:46.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:21:46.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:21:46.659
  STEP: Creating configMap with name projected-configmap-test-volume-9bbac83a-5b78-4dd5-9968-5c0eb8b416bb @ 05/14/24 04:21:46.662
  STEP: Creating a pod to test consume configMaps @ 05/14/24 04:21:46.666
  E0514 04:21:47.459619      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:21:48.459920      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:21:49.460183      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:21:50.460876      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:21:50.697
  May 14 04:21:50.700: INFO: Trying to get logs from node viola-paas-worker03 pod pod-projected-configmaps-e729078b-cd4d-44e7-9174-4cbef6db11d9 container agnhost-container: <nil>
  STEP: delete the pod @ 05/14/24 04:21:50.706
  May 14 04:21:50.728: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9815" for this suite. @ 05/14/24 04:21:50.733
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:55
  STEP: Creating a kubernetes client @ 05/14/24 04:21:50.741
  May 14 04:21:50.741: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename runtimeclass @ 05/14/24 04:21:50.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:21:50.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:21:50.774
  May 14 04:21:50.783: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7465" for this suite. @ 05/14/24 04:21:50.789
• [0.057 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 05/14/24 04:21:50.798
  May 14 04:21:50.798: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/14/24 04:21:50.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:21:50.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:21:50.83
  STEP: Creating 50 configmaps @ 05/14/24 04:21:50.832
  STEP: Creating RC which spawns configmap-volume pods @ 05/14/24 04:21:51.156
  May 14 04:21:51.171: INFO: Pod name wrapped-volume-race-3a99439e-a137-407d-841a-d309cc0521ee: Found 0 pods out of 5
  E0514 04:21:51.461881      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:21:52.461978      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:21:53.462407      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:21:54.462789      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:21:55.463716      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:21:56.180: INFO: Pod name wrapped-volume-race-3a99439e-a137-407d-841a-d309cc0521ee: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/14/24 04:21:56.18
  STEP: Creating RC which spawns configmap-volume pods @ 05/14/24 04:21:56.214
  May 14 04:21:56.232: INFO: Pod name wrapped-volume-race-3f252f0f-90a4-4d27-acfc-ecd4291b94f3: Found 0 pods out of 5
  E0514 04:21:56.463752      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:21:57.464448      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:21:58.464753      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:21:59.465082      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:00.465587      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:22:01.244: INFO: Pod name wrapped-volume-race-3f252f0f-90a4-4d27-acfc-ecd4291b94f3: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/14/24 04:22:01.244
  STEP: Creating RC which spawns configmap-volume pods @ 05/14/24 04:22:01.268
  May 14 04:22:01.291: INFO: Pod name wrapped-volume-race-f4600a93-3928-4b03-b7e0-9bf83d78ab96: Found 0 pods out of 5
  E0514 04:22:01.465802      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:02.466024      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:03.466427      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:04.466536      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:05.467065      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:22:06.302: INFO: Pod name wrapped-volume-race-f4600a93-3928-4b03-b7e0-9bf83d78ab96: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/14/24 04:22:06.302
  May 14 04:22:06.324: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController wrapped-volume-race-f4600a93-3928-4b03-b7e0-9bf83d78ab96 in namespace emptydir-wrapper-7453, will wait for the garbage collector to delete the pods @ 05/14/24 04:22:06.329
  May 14 04:22:06.394: INFO: Deleting ReplicationController wrapped-volume-race-f4600a93-3928-4b03-b7e0-9bf83d78ab96 took: 10.552483ms
  E0514 04:22:06.467165      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:22:06.494: INFO: Terminating ReplicationController wrapped-volume-race-f4600a93-3928-4b03-b7e0-9bf83d78ab96 pods took: 100.394058ms
  E0514 04:22:07.467400      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-3f252f0f-90a4-4d27-acfc-ecd4291b94f3 in namespace emptydir-wrapper-7453, will wait for the garbage collector to delete the pods @ 05/14/24 04:22:07.795
  May 14 04:22:07.862: INFO: Deleting ReplicationController wrapped-volume-race-3f252f0f-90a4-4d27-acfc-ecd4291b94f3 took: 11.02133ms
  May 14 04:22:07.963: INFO: Terminating ReplicationController wrapped-volume-race-3f252f0f-90a4-4d27-acfc-ecd4291b94f3 pods took: 100.800845ms
  E0514 04:22:08.468510      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-3a99439e-a137-407d-841a-d309cc0521ee in namespace emptydir-wrapper-7453, will wait for the garbage collector to delete the pods @ 05/14/24 04:22:09.064
  May 14 04:22:09.134: INFO: Deleting ReplicationController wrapped-volume-race-3a99439e-a137-407d-841a-d309cc0521ee took: 13.50457ms
  May 14 04:22:09.234: INFO: Terminating ReplicationController wrapped-volume-race-3a99439e-a137-407d-841a-d309cc0521ee pods took: 100.549581ms
  E0514 04:22:09.469028      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:10.470080      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 05/14/24 04:22:11.036
  E0514 04:22:11.470258      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "emptydir-wrapper-7453" for this suite. @ 05/14/24 04:22:11.979
• [21.247 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]
test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 05/14/24 04:22:12.047
  May 14 04:22:12.047: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename sched-pred @ 05/14/24 04:22:12.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:22:12.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:22:12.093
  May 14 04:22:12.095: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  May 14 04:22:12.106: INFO: Waiting for terminating namespaces to be deleted...
  May 14 04:22:12.109: INFO: 
  Logging pods the apiserver thinks is on node viola-paas-ingress01 before test
  May 14 04:22:12.129: INFO: vault-0 from common-datastore started at 2024-05-13 09:32:36 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.129: INFO: 	Container vault ready: true, restart count 0
  May 14 04:22:12.129: INFO: ingress-nginx-controller-dnlvp from ingress-nginx started at 2024-05-14 01:12:07 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.129: INFO: 	Container controller ready: true, restart count 0
  May 14 04:22:12.129: INFO: istio-ingress-mmtwf from istio-system started at 2024-05-14 01:12:07 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.129: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:22:12.129: INFO: istio-user-ingress-nwwkw from istio-user-system started at 2024-05-14 01:12:07 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.129: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:22:12.129: INFO: cilium-r9ckd from kube-system started at 2024-05-14 02:21:02 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.129: INFO: 	Container cilium-agent ready: true, restart count 0
  May 14 04:22:12.129: INFO: kube-proxy-6dkxt from kube-system started at 2024-05-13 12:02:37 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.129: INFO: 	Container kube-proxy ready: true, restart count 0
  May 14 04:22:12.129: INFO: prometheus-stack-prometheus-node-exporter-cnrmz from mgmt started at 2024-03-28 12:03:16 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.129: INFO: 	Container node-exporter ready: true, restart count 1
  May 14 04:22:12.129: INFO: sonobuoy-systemd-logs-daemon-set-1b7153daae854a0a-l2wdq from sonobuoy started at 2024-05-14 03:38:24 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.129: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 14 04:22:12.129: INFO: 	Container systemd-logs ready: true, restart count 0
  May 14 04:22:12.129: INFO: 
  Logging pods the apiserver thinks is on node viola-paas-ingress02 before test
  May 14 04:22:12.195: INFO: ingress-nginx-controller-h79jc from ingress-nginx started at 2024-05-14 01:12:10 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.195: INFO: 	Container controller ready: true, restart count 0
  May 14 04:22:12.195: INFO: istio-ingress-x8srp from istio-system started at 2024-05-14 01:12:10 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.195: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:22:12.195: INFO: istio-user-ingress-c5fg4 from istio-user-system started at 2024-05-14 01:12:10 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.195: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:22:12.195: INFO: cilium-ds74x from kube-system started at 2024-05-14 02:19:05 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.195: INFO: 	Container cilium-agent ready: true, restart count 0
  May 14 04:22:12.195: INFO: kube-proxy-zmkl9 from kube-system started at 2024-05-13 12:02:41 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.195: INFO: 	Container kube-proxy ready: true, restart count 0
  May 14 04:22:12.195: INFO: prometheus-stack-prometheus-node-exporter-7ktxd from mgmt started at 2024-03-28 12:03:14 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.195: INFO: 	Container node-exporter ready: true, restart count 3
  May 14 04:22:12.195: INFO: sonobuoy-systemd-logs-daemon-set-1b7153daae854a0a-rkcz2 from sonobuoy started at 2024-05-14 03:38:24 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.195: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 14 04:22:12.195: INFO: 	Container systemd-logs ready: true, restart count 0
  May 14 04:22:12.195: INFO: 
  Logging pods the apiserver thinks is on node viola-paas-worker01 before test
  May 14 04:22:12.271: INFO: keycloak-7dfcdb954d-ddtkq from auth started at 2024-05-13 09:32:27 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.271: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:22:12.271: INFO: 	Container keycloak ready: true, restart count 0
  May 14 04:22:12.271: INFO: oauth2-admin-redis-67b99d7dd8-pdcqg from auth started at 2024-03-28 13:06:51 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.271: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:22:12.271: INFO: 	Container redis ready: true, restart count 0
  May 14 04:22:12.271: INFO: oauth2-proxy-admin-5c875b487b-r7245 from auth started at 2024-03-28 13:06:51 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.271: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:22:12.271: INFO: 	Container oauth2-proxy-admin ready: true, restart count 1
  May 14 04:22:12.271: INFO: oauth2-user-redis-dc4bfdccb-b8mwc from auth started at 2024-05-13 09:32:28 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.271: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:22:12.271: INFO: 	Container redis ready: true, restart count 0
  May 14 04:22:12.271: INFO: cloud-service-api-59c74dd867-sq7s5 from cmp started at 2024-04-18 05:43:52 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.271: INFO: 	Container cloud-service-api ready: true, restart count 0
  May 14 04:22:12.271: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:22:12.271: INFO: maestro-common-api-user-8dbfd65-w2hqr from cmp started at 2024-05-09 07:53:01 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.271: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:22:12.271: INFO: 	Container maestro-common-api ready: true, restart count 0
  May 14 04:22:12.271: INFO: maestro-remote-app-admin-84cc4549f9-hjxwv from cmp started at 2024-05-10 04:04:26 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.271: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:22:12.271: INFO: 	Container maestro-remote-app ready: true, restart count 0
  May 14 04:22:12.271: INFO: maestro-remote-app-user-67fbbdc5-jzhd7 from cmp started at 2024-05-10 04:04:43 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.271: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:22:12.271: INFO: 	Container maestro-remote-app ready: true, restart count 0
  May 14 04:22:12.271: INFO: notification-adapter-api-69cfc9f979-bvlzf from cmp started at 2024-05-09 07:51:57 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.271: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:22:12.271: INFO: 	Container noti-api ready: true, restart count 0
  May 14 04:22:12.271: INFO: maestro-mariadb-0 from common-datastore started at 2024-04-18 06:31:19 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.271: INFO: 	Container mariadb ready: true, restart count 0
  May 14 04:22:12.271: INFO: my-cluster-entity-operator-779c9f5f4c-rpz6r from common-datastore started at 2024-03-28 07:48:11 +0000 UTC (3 container statuses recorded)
  May 14 04:22:12.271: INFO: 	Container tls-sidecar ready: true, restart count 0
  May 14 04:22:12.271: INFO: 	Container topic-operator ready: true, restart count 1
  May 14 04:22:12.271: INFO: 	Container user-operator ready: true, restart count 1
  May 14 04:22:12.271: INFO: my-cluster-kafka-1 from common-datastore started at 2024-03-28 07:47:41 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.271: INFO: 	Container kafka ready: true, restart count 0
  May 14 04:22:12.271: INFO: my-cluster-zookeeper-1 from common-datastore started at 2024-03-28 07:47:16 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.271: INFO: 	Container zookeeper ready: true, restart count 0
  May 14 04:22:12.271: INFO: strimzi-cluster-operator-666f999656-x2vc4 from common-datastore started at 2024-03-28 07:46:33 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.271: INFO: 	Container strimzi-cluster-operator ready: true, restart count 1
  May 14 04:22:12.271: INFO: vault-2 from common-datastore started at 2024-03-28 06:52:13 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.271: INFO: 	Container vault ready: true, restart count 2
  May 14 04:22:12.271: INFO: cilium-v8g5j from kube-system started at 2024-05-14 02:20:22 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.271: INFO: 	Container cilium-agent ready: true, restart count 0
  May 14 04:22:12.271: INFO: hubble-ui-646869c4b5-mvq7x from kube-system started at 2024-03-27 17:21:13 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.271: INFO: 	Container backend ready: true, restart count 0
  May 14 04:22:12.271: INFO: 	Container frontend ready: true, restart count 0
  May 14 04:22:12.271: INFO: kube-proxy-lc4sl from kube-system started at 2024-05-13 12:02:32 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.271: INFO: 	Container kube-proxy ready: true, restart count 0
  May 14 04:22:12.271: INFO: metrics-server-97d69fdbb-vkp8h from kube-system started at 2024-05-13 09:32:28 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.271: INFO: 	Container metrics-server ready: true, restart count 0
  May 14 04:22:12.271: INFO: alertmanager-prometheus-stack-kube-prom-alertmanager-0 from mgmt started at 2024-05-13 09:32:30 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.271: INFO: 	Container alertmanager ready: true, restart count 0
  May 14 04:22:12.271: INFO: 	Container config-reloader ready: true, restart count 0
  May 14 04:22:12.271: INFO: cert-manager-webhook-856f997ff9-ssskc from mgmt started at 2024-03-27 20:52:27 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.271: INFO: 	Container cert-manager-webhook ready: true, restart count 3
  May 14 04:22:12.271: INFO: prometheus-stack-kube-prom-operator-6d44cc4cd-jmw7g from mgmt started at 2024-03-28 12:03:26 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.271: INFO: 	Container kube-prometheus-stack ready: true, restart count 0
  May 14 04:22:12.271: INFO: prometheus-stack-kube-state-metrics-57875d899b-czk45 from mgmt started at 2024-03-28 12:03:26 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.271: INFO: 	Container kube-state-metrics ready: true, restart count 0
  May 14 04:22:12.271: INFO: prometheus-stack-prometheus-node-exporter-77hhw from mgmt started at 2024-03-28 12:03:26 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.271: INFO: 	Container node-exporter ready: true, restart count 2
  May 14 04:22:12.271: INFO: nfs-subdir-external-provisioner-5694fcbb-vjvn6 from nfs-provisioner started at 2024-03-27 21:06:36 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.271: INFO: 	Container nfs-subdir-external-provisioner ready: true, restart count 31
  May 14 04:22:12.271: INFO: sonobuoy-systemd-logs-daemon-set-1b7153daae854a0a-2rtjg from sonobuoy started at 2024-05-14 03:38:24 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.271: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 14 04:22:12.271: INFO: 	Container systemd-logs ready: true, restart count 0
  May 14 04:22:12.271: INFO: trombone-pipeline-api-admin-57f4974bbb-4r5bp from trombone started at 2024-05-13 09:32:28 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.271: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:22:12.271: INFO: 	Container trombone-pipeline-api ready: true, restart count 1
  May 14 04:22:12.271: INFO: trombone-pipeline-api-user-8c8fcf744-ptxnz from trombone started at 2024-05-13 09:32:28 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.271: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:22:12.271: INFO: 	Container trombone-pipeline-api ready: true, restart count 1
  May 14 04:22:12.271: INFO: trombone-pipeline-app-admin-57b9d994fc-9mpm4 from trombone started at 2024-05-09 07:54:31 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.271: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:22:12.271: INFO: 	Container trombone-pipeline-app ready: true, restart count 0
  May 14 04:22:12.271: INFO: trombone-pipeline-app-user-5478cb9869-kzvqg from trombone started at 2024-05-13 09:32:28 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.271: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:22:12.271: INFO: 	Container trombone-pipeline-app ready: true, restart count 0
  May 14 04:22:12.271: INFO: viola-remote-app-admin-9ff88f5d4-c26c7 from viola started at 2024-05-13 09:32:28 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.271: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:22:12.271: INFO: 	Container viola-remote-app ready: true, restart count 0
  May 14 04:22:12.271: INFO: 
  Logging pods the apiserver thinks is on node viola-paas-worker02 before test
  May 14 04:22:12.300: INFO: mariadb-keycloak-584dff4d9d-pzxmc from auth started at 2024-05-13 09:32:29 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.300: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:22:12.300: INFO: 	Container mariadb-keycloak ready: true, restart count 0
  May 14 04:22:12.300: INFO: oauth2-proxy-user-86844f69f7-snkzn from auth started at 2024-05-13 09:32:27 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.300: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:22:12.300: INFO: 	Container oauth2-proxy-user ready: true, restart count 2
  May 14 04:22:12.300: INFO: cloud-service-collector-bdd5f9bfd-4tnj9 from cmp started at 2024-05-13 09:32:28 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.300: INFO: 	Container cloud-service-collector ready: true, restart count 0
  May 14 04:22:12.300: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:22:12.300: INFO: maestro-auth-gateway-admin-569ddffb77-rfs89 from cmp started at 2024-05-09 07:50:57 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.300: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:22:12.300: INFO: 	Container maestro-auth-gateway ready: true, restart count 0
  May 14 04:22:12.300: INFO: maestro-auth-gateway-user-7b75fb9dfc-7dgjq from cmp started at 2024-05-10 00:34:20 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.300: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:22:12.300: INFO: 	Container maestro-auth-gateway ready: true, restart count 0
  May 14 04:22:12.300: INFO: maestro-common-api-admin-677664dc4c-8t6mm from cmp started at 2024-05-09 07:52:29 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.300: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:22:12.300: INFO: 	Container maestro-common-api ready: true, restart count 0
  May 14 04:22:12.300: INFO: maestro-host-app-admin-569c68fc7c-npbhm from cmp started at 2024-05-09 07:49:19 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.300: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:22:12.300: INFO: 	Container maestro-host-app ready: true, restart count 0
  May 14 04:22:12.300: INFO: maestro-host-app-user-85bd5cc7b9-whm6l from cmp started at 2024-05-09 07:49:40 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.300: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:22:12.300: INFO: 	Container maestro-host-app ready: true, restart count 0
  May 14 04:22:12.300: INFO: maestro-iam-adapter-api-684fbb5445-nrvlj from cmp started at 2024-05-09 07:50:16 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.300: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:22:12.300: INFO: 	Container maestro-iam-adapter-api ready: true, restart count 0
  May 14 04:22:12.300: INFO: my-cluster-kafka-0 from common-datastore started at 2024-05-13 09:32:38 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.300: INFO: 	Container kafka ready: true, restart count 0
  May 14 04:22:12.300: INFO: my-cluster-kafka-2 from common-datastore started at 2024-03-28 07:47:41 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.300: INFO: 	Container kafka ready: true, restart count 0
  May 14 04:22:12.300: INFO: my-cluster-zookeeper-0 from common-datastore started at 2024-05-13 09:32:31 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.300: INFO: 	Container zookeeper ready: true, restart count 0
  May 14 04:22:12.300: INFO: my-cluster-zookeeper-2 from common-datastore started at 2024-03-28 07:47:16 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.300: INFO: 	Container zookeeper ready: true, restart count 0
  May 14 04:22:12.300: INFO: single-redis-0 from common-datastore started at 2024-05-13 09:32:30 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.300: INFO: 	Container redis ready: true, restart count 0
  May 14 04:22:12.300: INFO: vault-1 from common-datastore started at 2024-03-28 07:00:49 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.300: INFO: 	Container vault ready: true, restart count 2
  May 14 04:22:12.300: INFO: istiod-56d7d75486-vmxxc from istio-system started at 2024-03-27 21:21:52 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.300: INFO: 	Container discovery ready: true, restart count 23
  May 14 04:22:12.300: INFO: cilium-z6wbd from kube-system started at 2024-05-14 02:22:04 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.300: INFO: 	Container cilium-agent ready: true, restart count 0
  May 14 04:22:12.300: INFO: hubble-relay-54d87f994b-w2kxc from kube-system started at 2024-03-27 17:21:13 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.300: INFO: 	Container hubble-relay ready: true, restart count 0
  May 14 04:22:12.300: INFO: kube-proxy-j6rpg from kube-system started at 2024-05-13 12:02:35 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.300: INFO: 	Container kube-proxy ready: true, restart count 0
  May 14 04:22:12.300: INFO: metrics-server-97d69fdbb-g84tz from kube-system started at 2024-03-27 20:50:53 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.300: INFO: 	Container metrics-server ready: true, restart count 5
  May 14 04:22:12.300: INFO: cert-manager-58b499b456-l7dqk from mgmt started at 2024-03-27 20:52:27 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.300: INFO: 	Container cert-manager-controller ready: true, restart count 30
  May 14 04:22:12.300: INFO: cert-manager-cainjector-6b5ffc8c69-qwqwr from mgmt started at 2024-05-13 09:32:28 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.300: INFO: 	Container cert-manager-cainjector ready: true, restart count 0
  May 14 04:22:12.300: INFO: prometheus-prometheus-stack-kube-prom-prometheus-0 from mgmt started at 2024-03-28 12:31:07 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.300: INFO: 	Container config-reloader ready: true, restart count 0
  May 14 04:22:12.300: INFO: 	Container prometheus ready: true, restart count 15
  May 14 04:22:12.300: INFO: prometheus-stack-grafana-56ccfbdc65-t5fdw from mgmt started at 2024-03-28 12:03:38 +0000 UTC (3 container statuses recorded)
  May 14 04:22:12.300: INFO: 	Container grafana ready: true, restart count 18
  May 14 04:22:12.300: INFO: 	Container grafana-sc-dashboard ready: true, restart count 31
  May 14 04:22:12.300: INFO: 	Container grafana-sc-datasources ready: true, restart count 31
  May 14 04:22:12.300: INFO: prometheus-stack-grafana-image-renderer-6865c676f-2cfxb from mgmt started at 2024-05-13 09:32:28 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.300: INFO: 	Container grafana-image-renderer ready: true, restart count 0
  May 14 04:22:12.300: INFO: prometheus-stack-prometheus-node-exporter-zb7pq from mgmt started at 2024-03-28 12:03:38 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.300: INFO: 	Container node-exporter ready: true, restart count 1
  May 14 04:22:12.300: INFO: nfs-subdir-external-provisioner-5694fcbb-jclrd from nfs-provisioner started at 2024-03-27 21:06:36 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.300: INFO: 	Container nfs-subdir-external-provisioner ready: true, restart count 30
  May 14 04:22:12.300: INFO: nfs-subdir-external-provisioner-5694fcbb-zvtz2 from nfs-provisioner started at 2024-05-13 09:32:29 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.300: INFO: 	Container nfs-subdir-external-provisioner ready: true, restart count 0
  May 14 04:22:12.300: INFO: sonobuoy-systemd-logs-daemon-set-1b7153daae854a0a-4whd9 from sonobuoy started at 2024-05-14 03:38:24 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.300: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 14 04:22:12.300: INFO: 	Container systemd-logs ready: true, restart count 0
  May 14 04:22:12.300: INFO: trombone-remote-app-admin-6956c889dc-v66vp from trombone started at 2024-05-09 07:53:46 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.300: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:22:12.300: INFO: 	Container trombone-remote-app ready: true, restart count 0
  May 14 04:22:12.300: INFO: viola-api-admin-848fc5bd96-xsbj2 from viola started at 2024-05-13 09:32:28 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.300: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:22:12.300: INFO: 	Container viola-api ready: true, restart count 0
  May 14 04:22:12.300: INFO: viola-api-user-68649f6448-s2r85 from viola started at 2024-05-13 09:32:28 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.300: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:22:12.300: INFO: 	Container viola-api ready: true, restart count 0
  May 14 04:22:12.300: INFO: 
  Logging pods the apiserver thinks is on node viola-paas-worker03 before test
  May 14 04:22:12.316: INFO: vault-unsealer-28594342-bqbc2 from common-datastore started at 2024-05-14 04:22:00 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.316: INFO: 	Container unsealer ready: false, restart count 0
  May 14 04:22:12.316: INFO: cilium-dlqdw from kube-system started at 2024-05-14 02:22:35 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.316: INFO: 	Container cilium-agent ready: true, restart count 0
  May 14 04:22:12.316: INFO: cilium-operator-f5b4997d6-pqkmc from kube-system started at 2024-05-14 02:27:02 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.316: INFO: 	Container cilium-operator ready: true, restart count 0
  May 14 04:22:12.316: INFO: kube-proxy-n6xhs from kube-system started at 2024-05-13 12:02:44 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.316: INFO: 	Container kube-proxy ready: true, restart count 0
  May 14 04:22:12.316: INFO: prometheus-stack-prometheus-node-exporter-zq2jt from mgmt started at 2024-03-28 12:03:14 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.316: INFO: 	Container node-exporter ready: true, restart count 1
  May 14 04:22:12.316: INFO: sonobuoy from sonobuoy started at 2024-05-14 03:38:23 +0000 UTC (1 container statuses recorded)
  May 14 04:22:12.316: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  May 14 04:22:12.316: INFO: sonobuoy-e2e-job-f032179957ad4a3a from sonobuoy started at 2024-05-14 03:38:24 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.316: INFO: 	Container e2e ready: true, restart count 0
  May 14 04:22:12.316: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 14 04:22:12.316: INFO: sonobuoy-systemd-logs-daemon-set-1b7153daae854a0a-bwsh7 from sonobuoy started at 2024-05-14 03:38:24 +0000 UTC (2 container statuses recorded)
  May 14 04:22:12.316: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 14 04:22:12.316: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node viola-paas-ingress01 @ 05/14/24 04:22:12.359
  STEP: verifying the node has the label node viola-paas-ingress02 @ 05/14/24 04:22:12.388
  STEP: verifying the node has the label node viola-paas-worker01 @ 05/14/24 04:22:12.438
  E0514 04:22:12.471021      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the node has the label node viola-paas-worker02 @ 05/14/24 04:22:12.485
  STEP: verifying the node has the label node viola-paas-worker03 @ 05/14/24 04:22:12.549
  May 14 04:22:12.589: INFO: Pod keycloak-7dfcdb954d-ddtkq requesting resource cpu=100m on Node viola-paas-worker01
  May 14 04:22:12.589: INFO: Pod mariadb-keycloak-584dff4d9d-pzxmc requesting resource cpu=100m on Node viola-paas-worker02
  May 14 04:22:12.589: INFO: Pod oauth2-admin-redis-67b99d7dd8-pdcqg requesting resource cpu=100m on Node viola-paas-worker01
  May 14 04:22:12.589: INFO: Pod oauth2-proxy-admin-5c875b487b-r7245 requesting resource cpu=100m on Node viola-paas-worker01
  May 14 04:22:12.589: INFO: Pod oauth2-proxy-user-86844f69f7-snkzn requesting resource cpu=100m on Node viola-paas-worker02
  May 14 04:22:12.589: INFO: Pod oauth2-user-redis-dc4bfdccb-b8mwc requesting resource cpu=100m on Node viola-paas-worker01
  May 14 04:22:12.589: INFO: Pod cloud-service-api-59c74dd867-sq7s5 requesting resource cpu=100m on Node viola-paas-worker01
  May 14 04:22:12.589: INFO: Pod cloud-service-collector-bdd5f9bfd-4tnj9 requesting resource cpu=100m on Node viola-paas-worker02
  May 14 04:22:12.589: INFO: Pod maestro-auth-gateway-admin-569ddffb77-rfs89 requesting resource cpu=100m on Node viola-paas-worker02
  May 14 04:22:12.589: INFO: Pod maestro-auth-gateway-user-7b75fb9dfc-7dgjq requesting resource cpu=100m on Node viola-paas-worker02
  May 14 04:22:12.589: INFO: Pod maestro-common-api-admin-677664dc4c-8t6mm requesting resource cpu=100m on Node viola-paas-worker02
  May 14 04:22:12.589: INFO: Pod maestro-common-api-user-8dbfd65-w2hqr requesting resource cpu=100m on Node viola-paas-worker01
  May 14 04:22:12.589: INFO: Pod maestro-host-app-admin-569c68fc7c-npbhm requesting resource cpu=100m on Node viola-paas-worker02
  May 14 04:22:12.589: INFO: Pod maestro-host-app-user-85bd5cc7b9-whm6l requesting resource cpu=100m on Node viola-paas-worker02
  May 14 04:22:12.589: INFO: Pod maestro-iam-adapter-api-684fbb5445-nrvlj requesting resource cpu=100m on Node viola-paas-worker02
  May 14 04:22:12.589: INFO: Pod maestro-remote-app-admin-84cc4549f9-hjxwv requesting resource cpu=100m on Node viola-paas-worker01
  May 14 04:22:12.589: INFO: Pod maestro-remote-app-user-67fbbdc5-jzhd7 requesting resource cpu=100m on Node viola-paas-worker01
  May 14 04:22:12.589: INFO: Pod notification-adapter-api-69cfc9f979-bvlzf requesting resource cpu=100m on Node viola-paas-worker01
  May 14 04:22:12.589: INFO: Pod maestro-mariadb-0 requesting resource cpu=100m on Node viola-paas-worker01
  May 14 04:22:12.589: INFO: Pod my-cluster-entity-operator-779c9f5f4c-rpz6r requesting resource cpu=0m on Node viola-paas-worker01
  May 14 04:22:12.589: INFO: Pod my-cluster-kafka-0 requesting resource cpu=0m on Node viola-paas-worker02
  May 14 04:22:12.589: INFO: Pod my-cluster-kafka-1 requesting resource cpu=0m on Node viola-paas-worker01
  May 14 04:22:12.589: INFO: Pod my-cluster-kafka-2 requesting resource cpu=0m on Node viola-paas-worker02
  May 14 04:22:12.589: INFO: Pod my-cluster-zookeeper-0 requesting resource cpu=0m on Node viola-paas-worker02
  May 14 04:22:12.589: INFO: Pod my-cluster-zookeeper-1 requesting resource cpu=0m on Node viola-paas-worker01
  May 14 04:22:12.589: INFO: Pod my-cluster-zookeeper-2 requesting resource cpu=0m on Node viola-paas-worker02
  May 14 04:22:12.589: INFO: Pod single-redis-0 requesting resource cpu=0m on Node viola-paas-worker02
  May 14 04:22:12.589: INFO: Pod strimzi-cluster-operator-666f999656-x2vc4 requesting resource cpu=200m on Node viola-paas-worker01
  May 14 04:22:12.589: INFO: Pod vault-0 requesting resource cpu=0m on Node viola-paas-ingress01
  May 14 04:22:12.589: INFO: Pod vault-1 requesting resource cpu=0m on Node viola-paas-worker02
  May 14 04:22:12.590: INFO: Pod vault-2 requesting resource cpu=0m on Node viola-paas-worker01
  May 14 04:22:12.590: INFO: Pod ingress-nginx-controller-dnlvp requesting resource cpu=100m on Node viola-paas-ingress01
  May 14 04:22:12.590: INFO: Pod ingress-nginx-controller-h79jc requesting resource cpu=100m on Node viola-paas-ingress02
  May 14 04:22:12.590: INFO: Pod istio-ingress-mmtwf requesting resource cpu=100m on Node viola-paas-ingress01
  May 14 04:22:12.590: INFO: Pod istio-ingress-x8srp requesting resource cpu=100m on Node viola-paas-ingress02
  May 14 04:22:12.590: INFO: Pod istiod-56d7d75486-vmxxc requesting resource cpu=500m on Node viola-paas-worker02
  May 14 04:22:12.590: INFO: Pod istio-user-ingress-c5fg4 requesting resource cpu=100m on Node viola-paas-ingress02
  May 14 04:22:12.590: INFO: Pod istio-user-ingress-nwwkw requesting resource cpu=100m on Node viola-paas-ingress01
  May 14 04:22:12.590: INFO: Pod cilium-dlqdw requesting resource cpu=0m on Node viola-paas-worker03
  May 14 04:22:12.590: INFO: Pod cilium-ds74x requesting resource cpu=0m on Node viola-paas-ingress02
  May 14 04:22:12.590: INFO: Pod cilium-operator-f5b4997d6-pqkmc requesting resource cpu=0m on Node viola-paas-worker03
  May 14 04:22:12.590: INFO: Pod cilium-r9ckd requesting resource cpu=0m on Node viola-paas-ingress01
  May 14 04:22:12.590: INFO: Pod cilium-v8g5j requesting resource cpu=0m on Node viola-paas-worker01
  May 14 04:22:12.590: INFO: Pod cilium-z6wbd requesting resource cpu=0m on Node viola-paas-worker02
  May 14 04:22:12.590: INFO: Pod hubble-relay-54d87f994b-w2kxc requesting resource cpu=0m on Node viola-paas-worker02
  May 14 04:22:12.590: INFO: Pod hubble-ui-646869c4b5-mvq7x requesting resource cpu=0m on Node viola-paas-worker01
  May 14 04:22:12.590: INFO: Pod kube-proxy-6dkxt requesting resource cpu=0m on Node viola-paas-ingress01
  May 14 04:22:12.590: INFO: Pod kube-proxy-j6rpg requesting resource cpu=0m on Node viola-paas-worker02
  May 14 04:22:12.590: INFO: Pod kube-proxy-lc4sl requesting resource cpu=0m on Node viola-paas-worker01
  May 14 04:22:12.590: INFO: Pod kube-proxy-n6xhs requesting resource cpu=0m on Node viola-paas-worker03
  May 14 04:22:12.590: INFO: Pod kube-proxy-zmkl9 requesting resource cpu=0m on Node viola-paas-ingress02
  May 14 04:22:12.590: INFO: Pod metrics-server-97d69fdbb-g84tz requesting resource cpu=100m on Node viola-paas-worker02
  May 14 04:22:12.590: INFO: Pod metrics-server-97d69fdbb-vkp8h requesting resource cpu=100m on Node viola-paas-worker01
  May 14 04:22:12.590: INFO: Pod alertmanager-prometheus-stack-kube-prom-alertmanager-0 requesting resource cpu=200m on Node viola-paas-worker01
  May 14 04:22:12.590: INFO: Pod cert-manager-58b499b456-l7dqk requesting resource cpu=0m on Node viola-paas-worker02
  May 14 04:22:12.590: INFO: Pod cert-manager-cainjector-6b5ffc8c69-qwqwr requesting resource cpu=0m on Node viola-paas-worker02
  May 14 04:22:12.590: INFO: Pod cert-manager-webhook-856f997ff9-ssskc requesting resource cpu=0m on Node viola-paas-worker01
  May 14 04:22:12.590: INFO: Pod prometheus-prometheus-stack-kube-prom-prometheus-0 requesting resource cpu=400m on Node viola-paas-worker02
  May 14 04:22:12.590: INFO: Pod prometheus-stack-grafana-56ccfbdc65-t5fdw requesting resource cpu=0m on Node viola-paas-worker02
  May 14 04:22:12.590: INFO: Pod prometheus-stack-grafana-image-renderer-6865c676f-2cfxb requesting resource cpu=0m on Node viola-paas-worker02
  May 14 04:22:12.590: INFO: Pod prometheus-stack-kube-prom-operator-6d44cc4cd-jmw7g requesting resource cpu=0m on Node viola-paas-worker01
  May 14 04:22:12.590: INFO: Pod prometheus-stack-kube-state-metrics-57875d899b-czk45 requesting resource cpu=0m on Node viola-paas-worker01
  May 14 04:22:12.590: INFO: Pod prometheus-stack-prometheus-node-exporter-77hhw requesting resource cpu=0m on Node viola-paas-worker01
  May 14 04:22:12.590: INFO: Pod prometheus-stack-prometheus-node-exporter-7ktxd requesting resource cpu=0m on Node viola-paas-ingress02
  May 14 04:22:12.590: INFO: Pod prometheus-stack-prometheus-node-exporter-cnrmz requesting resource cpu=0m on Node viola-paas-ingress01
  May 14 04:22:12.590: INFO: Pod prometheus-stack-prometheus-node-exporter-zb7pq requesting resource cpu=0m on Node viola-paas-worker02
  May 14 04:22:12.590: INFO: Pod prometheus-stack-prometheus-node-exporter-zq2jt requesting resource cpu=0m on Node viola-paas-worker03
  May 14 04:22:12.590: INFO: Pod nfs-subdir-external-provisioner-5694fcbb-jclrd requesting resource cpu=0m on Node viola-paas-worker02
  May 14 04:22:12.590: INFO: Pod nfs-subdir-external-provisioner-5694fcbb-vjvn6 requesting resource cpu=0m on Node viola-paas-worker01
  May 14 04:22:12.590: INFO: Pod nfs-subdir-external-provisioner-5694fcbb-zvtz2 requesting resource cpu=0m on Node viola-paas-worker02
  May 14 04:22:12.590: INFO: Pod sonobuoy requesting resource cpu=0m on Node viola-paas-worker03
  May 14 04:22:12.590: INFO: Pod sonobuoy-e2e-job-f032179957ad4a3a requesting resource cpu=0m on Node viola-paas-worker03
  May 14 04:22:12.590: INFO: Pod sonobuoy-systemd-logs-daemon-set-1b7153daae854a0a-2rtjg requesting resource cpu=0m on Node viola-paas-worker01
  May 14 04:22:12.590: INFO: Pod sonobuoy-systemd-logs-daemon-set-1b7153daae854a0a-4whd9 requesting resource cpu=0m on Node viola-paas-worker02
  May 14 04:22:12.590: INFO: Pod sonobuoy-systemd-logs-daemon-set-1b7153daae854a0a-bwsh7 requesting resource cpu=0m on Node viola-paas-worker03
  May 14 04:22:12.590: INFO: Pod sonobuoy-systemd-logs-daemon-set-1b7153daae854a0a-l2wdq requesting resource cpu=0m on Node viola-paas-ingress01
  May 14 04:22:12.590: INFO: Pod sonobuoy-systemd-logs-daemon-set-1b7153daae854a0a-rkcz2 requesting resource cpu=0m on Node viola-paas-ingress02
  May 14 04:22:12.590: INFO: Pod trombone-pipeline-api-admin-57f4974bbb-4r5bp requesting resource cpu=100m on Node viola-paas-worker01
  May 14 04:22:12.590: INFO: Pod trombone-pipeline-api-user-8c8fcf744-ptxnz requesting resource cpu=100m on Node viola-paas-worker01
  May 14 04:22:12.590: INFO: Pod trombone-pipeline-app-admin-57b9d994fc-9mpm4 requesting resource cpu=100m on Node viola-paas-worker01
  May 14 04:22:12.590: INFO: Pod trombone-pipeline-app-user-5478cb9869-kzvqg requesting resource cpu=100m on Node viola-paas-worker01
  May 14 04:22:12.590: INFO: Pod trombone-remote-app-admin-6956c889dc-v66vp requesting resource cpu=100m on Node viola-paas-worker02
  May 14 04:22:12.590: INFO: Pod viola-api-admin-848fc5bd96-xsbj2 requesting resource cpu=100m on Node viola-paas-worker02
  May 14 04:22:12.590: INFO: Pod viola-api-user-68649f6448-s2r85 requesting resource cpu=100m on Node viola-paas-worker02
  May 14 04:22:12.590: INFO: Pod viola-remote-app-admin-9ff88f5d4-c26c7 requesting resource cpu=100m on Node viola-paas-worker01
  STEP: Starting Pods to consume most of the cluster CPU. @ 05/14/24 04:22:12.59
  May 14 04:22:12.590: INFO: Creating a pod which consumes cpu=2590m on Node viola-paas-ingress01
  May 14 04:22:12.603: INFO: Creating a pod which consumes cpu=2590m on Node viola-paas-ingress02
  May 14 04:22:12.614: INFO: Creating a pod which consumes cpu=4200m on Node viola-paas-worker01
  May 14 04:22:12.639: INFO: Creating a pod which consumes cpu=4060m on Node viola-paas-worker02
  May 14 04:22:12.668: INFO: Creating a pod which consumes cpu=5600m on Node viola-paas-worker03
  E0514 04:22:13.471480      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:14.471815      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 05/14/24 04:22:14.735
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-078fe1fa-fc2b-4e08-b179-6b9e109c94e2.17cf402a1abe5460], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7677/filler-pod-078fe1fa-fc2b-4e08-b179-6b9e109c94e2 to viola-paas-ingress02] @ 05/14/24 04:22:14.739
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-078fe1fa-fc2b-4e08-b179-6b9e109c94e2.17cf402a43f0b4ff], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/14/24 04:22:14.739
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-078fe1fa-fc2b-4e08-b179-6b9e109c94e2.17cf402a46ba2d93], Reason = [Created], Message = [Created container filler-pod-078fe1fa-fc2b-4e08-b179-6b9e109c94e2] @ 05/14/24 04:22:14.739
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-078fe1fa-fc2b-4e08-b179-6b9e109c94e2.17cf402a4a830e01], Reason = [Started], Message = [Started container filler-pod-078fe1fa-fc2b-4e08-b179-6b9e109c94e2] @ 05/14/24 04:22:14.739
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0bef289c-8f70-49e9-b2c8-e5c353cdf7db.17cf402a1a7d6826], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7677/filler-pod-0bef289c-8f70-49e9-b2c8-e5c353cdf7db to viola-paas-ingress01] @ 05/14/24 04:22:14.739
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0bef289c-8f70-49e9-b2c8-e5c353cdf7db.17cf402a458d9e0e], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/14/24 04:22:14.739
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0bef289c-8f70-49e9-b2c8-e5c353cdf7db.17cf402a48a018d7], Reason = [Created], Message = [Created container filler-pod-0bef289c-8f70-49e9-b2c8-e5c353cdf7db] @ 05/14/24 04:22:14.739
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0bef289c-8f70-49e9-b2c8-e5c353cdf7db.17cf402a4cdc77cc], Reason = [Started], Message = [Started container filler-pod-0bef289c-8f70-49e9-b2c8-e5c353cdf7db] @ 05/14/24 04:22:14.739
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-322acbb9-bd4e-4f30-baec-d246aab855eb.17cf402a1c2f3bc6], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7677/filler-pod-322acbb9-bd4e-4f30-baec-d246aab855eb to viola-paas-worker01] @ 05/14/24 04:22:14.739
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-322acbb9-bd4e-4f30-baec-d246aab855eb.17cf402a45c37cbc], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/14/24 04:22:14.739
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-322acbb9-bd4e-4f30-baec-d246aab855eb.17cf402a49881196], Reason = [Created], Message = [Created container filler-pod-322acbb9-bd4e-4f30-baec-d246aab855eb] @ 05/14/24 04:22:14.739
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-322acbb9-bd4e-4f30-baec-d246aab855eb.17cf402a4d83b364], Reason = [Started], Message = [Started container filler-pod-322acbb9-bd4e-4f30-baec-d246aab855eb] @ 05/14/24 04:22:14.739
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-322e0510-7bcd-44ce-bb51-58519b47e2b2.17cf402a1dcad103], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7677/filler-pod-322e0510-7bcd-44ce-bb51-58519b47e2b2 to viola-paas-worker02] @ 05/14/24 04:22:14.739
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-322e0510-7bcd-44ce-bb51-58519b47e2b2.17cf402a4498a70c], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/14/24 04:22:14.74
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-322e0510-7bcd-44ce-bb51-58519b47e2b2.17cf402a47af43eb], Reason = [Created], Message = [Created container filler-pod-322e0510-7bcd-44ce-bb51-58519b47e2b2] @ 05/14/24 04:22:14.74
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-322e0510-7bcd-44ce-bb51-58519b47e2b2.17cf402a4bec2065], Reason = [Started], Message = [Started container filler-pod-322e0510-7bcd-44ce-bb51-58519b47e2b2] @ 05/14/24 04:22:14.74
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c2935b7d-3d12-4818-921e-af57ccf3ea54.17cf402a1f7502b3], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7677/filler-pod-c2935b7d-3d12-4818-921e-af57ccf3ea54 to viola-paas-worker03] @ 05/14/24 04:22:14.74
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c2935b7d-3d12-4818-921e-af57ccf3ea54.17cf402a473edb5c], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/14/24 04:22:14.74
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c2935b7d-3d12-4818-921e-af57ccf3ea54.17cf402a4aa129e2], Reason = [Created], Message = [Created container filler-pod-c2935b7d-3d12-4818-921e-af57ccf3ea54] @ 05/14/24 04:22:14.74
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c2935b7d-3d12-4818-921e-af57ccf3ea54.17cf402a4e5d0ec0], Reason = [Started], Message = [Started container filler-pod-c2935b7d-3d12-4818-921e-af57ccf3ea54] @ 05/14/24 04:22:14.74
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17cf402a99450fc2], Reason = [FailedScheduling], Message = [0/8 nodes are available: 3 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 5 Insufficient cpu. preemption: 0/8 nodes are available: 3 Preemption is not helpful for scheduling, 5 No preemption victims found for incoming pod..] @ 05/14/24 04:22:14.769
  E0514 04:22:15.471952      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node viola-paas-ingress01 @ 05/14/24 04:22:15.76
  STEP: verifying the node doesn't have the label node @ 05/14/24 04:22:15.774
  STEP: removing the label node off the node viola-paas-ingress02 @ 05/14/24 04:22:15.778
  STEP: verifying the node doesn't have the label node @ 05/14/24 04:22:15.802
  STEP: removing the label node off the node viola-paas-worker01 @ 05/14/24 04:22:15.811
  STEP: verifying the node doesn't have the label node @ 05/14/24 04:22:15.829
  STEP: removing the label node off the node viola-paas-worker02 @ 05/14/24 04:22:15.833
  STEP: verifying the node doesn't have the label node @ 05/14/24 04:22:15.85
  STEP: removing the label node off the node viola-paas-worker03 @ 05/14/24 04:22:15.853
  STEP: verifying the node doesn't have the label node @ 05/14/24 04:22:15.877
  May 14 04:22:15.880: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7677" for this suite. @ 05/14/24 04:22:15.889
• [3.857 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 05/14/24 04:22:15.907
  May 14 04:22:15.907: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename subpath @ 05/14/24 04:22:15.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:22:15.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:22:15.949
  STEP: Setting up data @ 05/14/24 04:22:15.952
  STEP: Creating pod pod-subpath-test-projected-b9pp @ 05/14/24 04:22:15.967
  STEP: Creating a pod to test atomic-volume-subpath @ 05/14/24 04:22:15.967
  E0514 04:22:16.471927      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:17.472096      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:18.472270      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:19.472733      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:20.473405      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:21.473798      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:22.474583      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:23.474897      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:24.475702      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:25.476414      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:26.476599      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:27.477478      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:28.477582      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:29.477926      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:30.478931      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:31.479281      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:32.479648      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:33.479989      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:34.480322      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:35.480275      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:36.480551      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:37.481345      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:38.481429      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:39.481806      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:22:40.079
  May 14 04:22:40.083: INFO: Trying to get logs from node viola-paas-worker03 pod pod-subpath-test-projected-b9pp container test-container-subpath-projected-b9pp: <nil>
  STEP: delete the pod @ 05/14/24 04:22:40.09
  STEP: Deleting pod pod-subpath-test-projected-b9pp @ 05/14/24 04:22:40.111
  May 14 04:22:40.111: INFO: Deleting pod "pod-subpath-test-projected-b9pp" in namespace "subpath-5863"
  May 14 04:22:40.114: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5863" for this suite. @ 05/14/24 04:22:40.12
• [24.221 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 05/14/24 04:22:40.129
  May 14 04:22:40.129: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename disruption @ 05/14/24 04:22:40.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:22:40.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:22:40.176
  STEP: Creating a pdb that targets all three pods in a test replica set @ 05/14/24 04:22:40.178
  STEP: Waiting for the pdb to be processed @ 05/14/24 04:22:40.185
  E0514 04:22:40.482918      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:41.483087      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 05/14/24 04:22:42.204
  STEP: Waiting for all pods to be running @ 05/14/24 04:22:42.204
  May 14 04:22:42.218: INFO: pods: 0 < 3
  E0514 04:22:42.483234      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:43.483582      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 05/14/24 04:22:44.224
  STEP: Updating the pdb to allow a pod to be evicted @ 05/14/24 04:22:44.233
  STEP: Waiting for the pdb to be processed @ 05/14/24 04:22:44.244
  E0514 04:22:44.484275      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:45.485316      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/14/24 04:22:46.253
  STEP: Waiting for all pods to be running @ 05/14/24 04:22:46.253
  STEP: Waiting for the pdb to observed all healthy pods @ 05/14/24 04:22:46.257
  STEP: Patching the pdb to disallow a pod to be evicted @ 05/14/24 04:22:46.355
  STEP: Waiting for the pdb to be processed @ 05/14/24 04:22:46.444
  E0514 04:22:46.486431      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:47.486616      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 05/14/24 04:22:48.453
  STEP: locating a running pod @ 05/14/24 04:22:48.466
  STEP: Deleting the pdb to allow a pod to be evicted @ 05/14/24 04:22:48.476
  STEP: Waiting for the pdb to be deleted @ 05/14/24 04:22:48.483
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/14/24 04:22:48.486
  STEP: Waiting for all pods to be running @ 05/14/24 04:22:48.486
  E0514 04:22:48.487076      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:22:48.508: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7645" for this suite. @ 05/14/24 04:22:48.523
• [8.412 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 05/14/24 04:22:48.543
  May 14 04:22:48.543: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/14/24 04:22:48.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:22:48.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:22:48.584
  STEP: set up a multi version CRD @ 05/14/24 04:22:48.587
  May 14 04:22:48.587: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  E0514 04:22:49.488103      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:50.488572      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:51.489366      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:52.489834      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:53.490840      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:54.491927      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:55.493110      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:56.494042      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:57.493603      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:22:58.493475      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 05/14/24 04:22:59.441
  STEP: check the unserved version gets removed @ 05/14/24 04:22:59.47
  E0514 04:22:59.493804      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:00.494592      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:01.495595      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 05/14/24 04:23:01.981
  E0514 04:23:02.495813      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:03.496513      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:04.497494      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:05.497654      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:06.498520      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:23:06.750: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2075" for this suite. @ 05/14/24 04:23:06.821
• [18.305 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance]
test/e2e/auth/service_accounts.go:275
  STEP: Creating a kubernetes client @ 05/14/24 04:23:06.849
  May 14 04:23:06.849: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename svcaccounts @ 05/14/24 04:23:06.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:23:06.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:23:06.998
  STEP: Creating a pod to test service account token:  @ 05/14/24 04:23:07
  E0514 04:23:07.499628      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:08.500142      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:09.500713      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:10.501359      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:23:11.064
  May 14 04:23:11.067: INFO: Trying to get logs from node viola-paas-worker03 pod test-pod-bfbebb89-114f-4203-9c74-1a744bbcd8ee container agnhost-container: <nil>
  STEP: delete the pod @ 05/14/24 04:23:11.08
  May 14 04:23:11.102: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9574" for this suite. @ 05/14/24 04:23:11.109
• [4.270 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 05/14/24 04:23:11.12
  May 14 04:23:11.120: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename configmap @ 05/14/24 04:23:11.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:23:11.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:23:11.154
  STEP: Creating configMap with name configmap-test-volume-map-bf8df3e1-b07d-4f0f-9619-7cd64c71f622 @ 05/14/24 04:23:11.156
  STEP: Creating a pod to test consume configMaps @ 05/14/24 04:23:11.163
  E0514 04:23:11.501533      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:12.502087      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:13.502578      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:14.502778      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:23:15.186
  May 14 04:23:15.189: INFO: Trying to get logs from node viola-paas-worker03 pod pod-configmaps-77d794b7-9f18-4887-b7cb-ce6a66a2c23d container agnhost-container: <nil>
  STEP: delete the pod @ 05/14/24 04:23:15.194
  May 14 04:23:15.224: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4541" for this suite. @ 05/14/24 04:23:15.229
• [4.121 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]
test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 05/14/24 04:23:15.241
  May 14 04:23:15.241: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename sched-pred @ 05/14/24 04:23:15.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:23:15.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:23:15.278
  May 14 04:23:15.288: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  May 14 04:23:15.298: INFO: Waiting for terminating namespaces to be deleted...
  May 14 04:23:15.301: INFO: 
  Logging pods the apiserver thinks is on node viola-paas-ingress01 before test
  May 14 04:23:15.317: INFO: vault-0 from common-datastore started at 2024-05-13 09:32:36 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.317: INFO: 	Container vault ready: true, restart count 0
  May 14 04:23:15.317: INFO: cilium-r9ckd from kube-system started at 2024-05-14 02:21:02 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.317: INFO: 	Container cilium-agent ready: true, restart count 0
  May 14 04:23:15.317: INFO: kube-proxy-6dkxt from kube-system started at 2024-05-13 12:02:37 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.317: INFO: 	Container kube-proxy ready: true, restart count 0
  May 14 04:23:15.317: INFO: prometheus-stack-prometheus-node-exporter-cnrmz from mgmt started at 2024-03-28 12:03:16 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.317: INFO: 	Container node-exporter ready: true, restart count 1
  May 14 04:23:15.317: INFO: sonobuoy-systemd-logs-daemon-set-1b7153daae854a0a-l2wdq from sonobuoy started at 2024-05-14 03:38:24 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.317: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 14 04:23:15.317: INFO: 	Container systemd-logs ready: true, restart count 0
  May 14 04:23:15.317: INFO: 
  Logging pods the apiserver thinks is on node viola-paas-ingress02 before test
  May 14 04:23:15.329: INFO: cilium-ds74x from kube-system started at 2024-05-14 02:19:05 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.329: INFO: 	Container cilium-agent ready: true, restart count 0
  May 14 04:23:15.329: INFO: kube-proxy-zmkl9 from kube-system started at 2024-05-13 12:02:41 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.329: INFO: 	Container kube-proxy ready: true, restart count 0
  May 14 04:23:15.329: INFO: prometheus-stack-prometheus-node-exporter-7ktxd from mgmt started at 2024-03-28 12:03:14 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.329: INFO: 	Container node-exporter ready: true, restart count 3
  May 14 04:23:15.329: INFO: sonobuoy-systemd-logs-daemon-set-1b7153daae854a0a-rkcz2 from sonobuoy started at 2024-05-14 03:38:24 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.329: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 14 04:23:15.329: INFO: 	Container systemd-logs ready: true, restart count 0
  May 14 04:23:15.329: INFO: 
  Logging pods the apiserver thinks is on node viola-paas-worker01 before test
  May 14 04:23:15.352: INFO: keycloak-7dfcdb954d-ddtkq from auth started at 2024-05-13 09:32:27 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.352: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:23:15.352: INFO: 	Container keycloak ready: true, restart count 0
  May 14 04:23:15.352: INFO: oauth2-admin-redis-67b99d7dd8-pdcqg from auth started at 2024-03-28 13:06:51 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.352: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:23:15.352: INFO: 	Container redis ready: true, restart count 0
  May 14 04:23:15.352: INFO: oauth2-proxy-admin-5c875b487b-r7245 from auth started at 2024-03-28 13:06:51 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.352: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:23:15.352: INFO: 	Container oauth2-proxy-admin ready: true, restart count 1
  May 14 04:23:15.352: INFO: oauth2-user-redis-dc4bfdccb-b8mwc from auth started at 2024-05-13 09:32:28 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.352: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:23:15.352: INFO: 	Container redis ready: true, restart count 0
  May 14 04:23:15.352: INFO: cloud-service-api-59c74dd867-sq7s5 from cmp started at 2024-04-18 05:43:52 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.352: INFO: 	Container cloud-service-api ready: true, restart count 0
  May 14 04:23:15.352: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:23:15.352: INFO: maestro-common-api-user-8dbfd65-w2hqr from cmp started at 2024-05-09 07:53:01 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.352: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:23:15.352: INFO: 	Container maestro-common-api ready: true, restart count 0
  May 14 04:23:15.352: INFO: maestro-remote-app-admin-84cc4549f9-hjxwv from cmp started at 2024-05-10 04:04:26 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.352: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:23:15.352: INFO: 	Container maestro-remote-app ready: true, restart count 0
  May 14 04:23:15.352: INFO: maestro-remote-app-user-67fbbdc5-jzhd7 from cmp started at 2024-05-10 04:04:43 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.352: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:23:15.352: INFO: 	Container maestro-remote-app ready: true, restart count 0
  May 14 04:23:15.352: INFO: notification-adapter-api-69cfc9f979-bvlzf from cmp started at 2024-05-09 07:51:57 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.352: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:23:15.352: INFO: 	Container noti-api ready: true, restart count 0
  May 14 04:23:15.352: INFO: maestro-mariadb-0 from common-datastore started at 2024-04-18 06:31:19 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.352: INFO: 	Container mariadb ready: true, restart count 0
  May 14 04:23:15.352: INFO: my-cluster-entity-operator-779c9f5f4c-rpz6r from common-datastore started at 2024-03-28 07:48:11 +0000 UTC (3 container statuses recorded)
  May 14 04:23:15.352: INFO: 	Container tls-sidecar ready: true, restart count 0
  May 14 04:23:15.352: INFO: 	Container topic-operator ready: true, restart count 1
  May 14 04:23:15.352: INFO: 	Container user-operator ready: true, restart count 1
  May 14 04:23:15.352: INFO: my-cluster-kafka-1 from common-datastore started at 2024-03-28 07:47:41 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.352: INFO: 	Container kafka ready: true, restart count 0
  May 14 04:23:15.352: INFO: my-cluster-zookeeper-1 from common-datastore started at 2024-03-28 07:47:16 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.352: INFO: 	Container zookeeper ready: true, restart count 0
  May 14 04:23:15.352: INFO: strimzi-cluster-operator-666f999656-x2vc4 from common-datastore started at 2024-03-28 07:46:33 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.352: INFO: 	Container strimzi-cluster-operator ready: true, restart count 1
  May 14 04:23:15.353: INFO: vault-2 from common-datastore started at 2024-03-28 06:52:13 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.353: INFO: 	Container vault ready: true, restart count 2
  May 14 04:23:15.353: INFO: cilium-v8g5j from kube-system started at 2024-05-14 02:20:22 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.353: INFO: 	Container cilium-agent ready: true, restart count 0
  May 14 04:23:15.353: INFO: hubble-ui-646869c4b5-mvq7x from kube-system started at 2024-03-27 17:21:13 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.353: INFO: 	Container backend ready: true, restart count 0
  May 14 04:23:15.353: INFO: 	Container frontend ready: true, restart count 0
  May 14 04:23:15.353: INFO: kube-proxy-lc4sl from kube-system started at 2024-05-13 12:02:32 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.353: INFO: 	Container kube-proxy ready: true, restart count 0
  May 14 04:23:15.353: INFO: metrics-server-97d69fdbb-vkp8h from kube-system started at 2024-05-13 09:32:28 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.353: INFO: 	Container metrics-server ready: true, restart count 0
  May 14 04:23:15.353: INFO: alertmanager-prometheus-stack-kube-prom-alertmanager-0 from mgmt started at 2024-05-13 09:32:30 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.353: INFO: 	Container alertmanager ready: true, restart count 0
  May 14 04:23:15.353: INFO: 	Container config-reloader ready: true, restart count 0
  May 14 04:23:15.353: INFO: cert-manager-webhook-856f997ff9-ssskc from mgmt started at 2024-03-27 20:52:27 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.353: INFO: 	Container cert-manager-webhook ready: true, restart count 3
  May 14 04:23:15.353: INFO: prometheus-stack-kube-prom-operator-6d44cc4cd-jmw7g from mgmt started at 2024-03-28 12:03:26 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.353: INFO: 	Container kube-prometheus-stack ready: true, restart count 0
  May 14 04:23:15.353: INFO: prometheus-stack-kube-state-metrics-57875d899b-czk45 from mgmt started at 2024-03-28 12:03:26 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.353: INFO: 	Container kube-state-metrics ready: true, restart count 0
  May 14 04:23:15.353: INFO: prometheus-stack-prometheus-node-exporter-77hhw from mgmt started at 2024-03-28 12:03:26 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.353: INFO: 	Container node-exporter ready: true, restart count 2
  May 14 04:23:15.353: INFO: nfs-subdir-external-provisioner-5694fcbb-vjvn6 from nfs-provisioner started at 2024-03-27 21:06:36 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.353: INFO: 	Container nfs-subdir-external-provisioner ready: true, restart count 31
  May 14 04:23:15.353: INFO: sonobuoy-systemd-logs-daemon-set-1b7153daae854a0a-2rtjg from sonobuoy started at 2024-05-14 03:38:24 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.353: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 14 04:23:15.353: INFO: 	Container systemd-logs ready: true, restart count 0
  May 14 04:23:15.353: INFO: trombone-pipeline-api-admin-57f4974bbb-4r5bp from trombone started at 2024-05-13 09:32:28 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.353: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:23:15.353: INFO: 	Container trombone-pipeline-api ready: true, restart count 1
  May 14 04:23:15.353: INFO: trombone-pipeline-api-user-8c8fcf744-ptxnz from trombone started at 2024-05-13 09:32:28 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.353: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:23:15.353: INFO: 	Container trombone-pipeline-api ready: true, restart count 1
  May 14 04:23:15.353: INFO: trombone-pipeline-app-admin-57b9d994fc-9mpm4 from trombone started at 2024-05-09 07:54:31 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.353: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:23:15.353: INFO: 	Container trombone-pipeline-app ready: true, restart count 0
  May 14 04:23:15.353: INFO: trombone-pipeline-app-user-5478cb9869-kzvqg from trombone started at 2024-05-13 09:32:28 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.353: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:23:15.353: INFO: 	Container trombone-pipeline-app ready: true, restart count 0
  May 14 04:23:15.353: INFO: viola-remote-app-admin-9ff88f5d4-c26c7 from viola started at 2024-05-13 09:32:28 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.353: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:23:15.353: INFO: 	Container viola-remote-app ready: true, restart count 0
  May 14 04:23:15.354: INFO: 
  Logging pods the apiserver thinks is on node viola-paas-worker02 before test
  May 14 04:23:15.377: INFO: mariadb-keycloak-584dff4d9d-pzxmc from auth started at 2024-05-13 09:32:29 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.377: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:23:15.377: INFO: 	Container mariadb-keycloak ready: true, restart count 0
  May 14 04:23:15.377: INFO: oauth2-proxy-user-86844f69f7-snkzn from auth started at 2024-05-13 09:32:27 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.377: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:23:15.377: INFO: 	Container oauth2-proxy-user ready: true, restart count 2
  May 14 04:23:15.377: INFO: cloud-service-collector-bdd5f9bfd-4tnj9 from cmp started at 2024-05-13 09:32:28 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.377: INFO: 	Container cloud-service-collector ready: true, restart count 0
  May 14 04:23:15.377: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:23:15.377: INFO: maestro-auth-gateway-admin-569ddffb77-rfs89 from cmp started at 2024-05-09 07:50:57 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.377: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:23:15.377: INFO: 	Container maestro-auth-gateway ready: true, restart count 0
  May 14 04:23:15.377: INFO: maestro-auth-gateway-user-7b75fb9dfc-7dgjq from cmp started at 2024-05-10 00:34:20 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.377: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:23:15.377: INFO: 	Container maestro-auth-gateway ready: true, restart count 0
  May 14 04:23:15.377: INFO: maestro-common-api-admin-677664dc4c-8t6mm from cmp started at 2024-05-09 07:52:29 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.377: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:23:15.377: INFO: 	Container maestro-common-api ready: true, restart count 0
  May 14 04:23:15.377: INFO: maestro-host-app-admin-569c68fc7c-npbhm from cmp started at 2024-05-09 07:49:19 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.377: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:23:15.377: INFO: 	Container maestro-host-app ready: true, restart count 0
  May 14 04:23:15.377: INFO: maestro-host-app-user-85bd5cc7b9-whm6l from cmp started at 2024-05-09 07:49:40 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.377: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:23:15.377: INFO: 	Container maestro-host-app ready: true, restart count 0
  May 14 04:23:15.377: INFO: maestro-iam-adapter-api-684fbb5445-nrvlj from cmp started at 2024-05-09 07:50:16 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.377: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:23:15.377: INFO: 	Container maestro-iam-adapter-api ready: true, restart count 0
  May 14 04:23:15.377: INFO: my-cluster-kafka-0 from common-datastore started at 2024-05-13 09:32:38 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.377: INFO: 	Container kafka ready: true, restart count 0
  May 14 04:23:15.377: INFO: my-cluster-kafka-2 from common-datastore started at 2024-03-28 07:47:41 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.377: INFO: 	Container kafka ready: true, restart count 0
  May 14 04:23:15.377: INFO: my-cluster-zookeeper-0 from common-datastore started at 2024-05-13 09:32:31 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.377: INFO: 	Container zookeeper ready: true, restart count 0
  May 14 04:23:15.377: INFO: my-cluster-zookeeper-2 from common-datastore started at 2024-03-28 07:47:16 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.377: INFO: 	Container zookeeper ready: true, restart count 0
  May 14 04:23:15.377: INFO: single-redis-0 from common-datastore started at 2024-05-13 09:32:30 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.377: INFO: 	Container redis ready: true, restart count 0
  May 14 04:23:15.377: INFO: vault-1 from common-datastore started at 2024-03-28 07:00:49 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.377: INFO: 	Container vault ready: true, restart count 2
  May 14 04:23:15.377: INFO: istiod-56d7d75486-vmxxc from istio-system started at 2024-03-27 21:21:52 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.377: INFO: 	Container discovery ready: true, restart count 23
  May 14 04:23:15.377: INFO: cilium-z6wbd from kube-system started at 2024-05-14 02:22:04 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.377: INFO: 	Container cilium-agent ready: true, restart count 0
  May 14 04:23:15.377: INFO: hubble-relay-54d87f994b-w2kxc from kube-system started at 2024-03-27 17:21:13 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.377: INFO: 	Container hubble-relay ready: true, restart count 0
  May 14 04:23:15.377: INFO: kube-proxy-j6rpg from kube-system started at 2024-05-13 12:02:35 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.377: INFO: 	Container kube-proxy ready: true, restart count 0
  May 14 04:23:15.377: INFO: metrics-server-97d69fdbb-g84tz from kube-system started at 2024-03-27 20:50:53 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.377: INFO: 	Container metrics-server ready: true, restart count 5
  May 14 04:23:15.377: INFO: cert-manager-58b499b456-l7dqk from mgmt started at 2024-03-27 20:52:27 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.377: INFO: 	Container cert-manager-controller ready: true, restart count 30
  May 14 04:23:15.377: INFO: cert-manager-cainjector-6b5ffc8c69-qwqwr from mgmt started at 2024-05-13 09:32:28 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.378: INFO: 	Container cert-manager-cainjector ready: true, restart count 0
  May 14 04:23:15.378: INFO: prometheus-prometheus-stack-kube-prom-prometheus-0 from mgmt started at 2024-03-28 12:31:07 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.378: INFO: 	Container config-reloader ready: true, restart count 0
  May 14 04:23:15.378: INFO: 	Container prometheus ready: true, restart count 15
  May 14 04:23:15.378: INFO: prometheus-stack-grafana-56ccfbdc65-t5fdw from mgmt started at 2024-03-28 12:03:38 +0000 UTC (3 container statuses recorded)
  May 14 04:23:15.378: INFO: 	Container grafana ready: true, restart count 18
  May 14 04:23:15.378: INFO: 	Container grafana-sc-dashboard ready: true, restart count 31
  May 14 04:23:15.378: INFO: 	Container grafana-sc-datasources ready: true, restart count 31
  May 14 04:23:15.378: INFO: prometheus-stack-grafana-image-renderer-6865c676f-2cfxb from mgmt started at 2024-05-13 09:32:28 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.378: INFO: 	Container grafana-image-renderer ready: true, restart count 0
  May 14 04:23:15.378: INFO: prometheus-stack-prometheus-node-exporter-zb7pq from mgmt started at 2024-03-28 12:03:38 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.378: INFO: 	Container node-exporter ready: true, restart count 1
  May 14 04:23:15.378: INFO: nfs-subdir-external-provisioner-5694fcbb-jclrd from nfs-provisioner started at 2024-03-27 21:06:36 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.378: INFO: 	Container nfs-subdir-external-provisioner ready: true, restart count 30
  May 14 04:23:15.378: INFO: nfs-subdir-external-provisioner-5694fcbb-zvtz2 from nfs-provisioner started at 2024-05-13 09:32:29 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.378: INFO: 	Container nfs-subdir-external-provisioner ready: true, restart count 0
  May 14 04:23:15.378: INFO: sonobuoy-systemd-logs-daemon-set-1b7153daae854a0a-4whd9 from sonobuoy started at 2024-05-14 03:38:24 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.378: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 14 04:23:15.378: INFO: 	Container systemd-logs ready: true, restart count 0
  May 14 04:23:15.378: INFO: trombone-remote-app-admin-6956c889dc-v66vp from trombone started at 2024-05-09 07:53:46 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.378: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:23:15.378: INFO: 	Container trombone-remote-app ready: true, restart count 0
  May 14 04:23:15.378: INFO: viola-api-admin-848fc5bd96-xsbj2 from viola started at 2024-05-13 09:32:28 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.378: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:23:15.378: INFO: 	Container viola-api ready: true, restart count 0
  May 14 04:23:15.378: INFO: viola-api-user-68649f6448-s2r85 from viola started at 2024-05-13 09:32:28 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.378: INFO: 	Container istio-proxy ready: true, restart count 0
  May 14 04:23:15.378: INFO: 	Container viola-api ready: true, restart count 0
  May 14 04:23:15.378: INFO: 
  Logging pods the apiserver thinks is on node viola-paas-worker03 before test
  May 14 04:23:15.405: INFO: vault-unsealer-28594343-glvwf from common-datastore started at 2024-05-14 04:23:00 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.405: INFO: 	Container unsealer ready: false, restart count 0
  May 14 04:23:15.405: INFO: cilium-dlqdw from kube-system started at 2024-05-14 02:22:35 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.405: INFO: 	Container cilium-agent ready: true, restart count 0
  May 14 04:23:15.405: INFO: cilium-operator-f5b4997d6-pqkmc from kube-system started at 2024-05-14 02:27:02 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.405: INFO: 	Container cilium-operator ready: true, restart count 0
  May 14 04:23:15.405: INFO: kube-proxy-n6xhs from kube-system started at 2024-05-13 12:02:44 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.405: INFO: 	Container kube-proxy ready: true, restart count 0
  May 14 04:23:15.405: INFO: prometheus-stack-prometheus-node-exporter-zq2jt from mgmt started at 2024-03-28 12:03:14 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.405: INFO: 	Container node-exporter ready: true, restart count 1
  May 14 04:23:15.405: INFO: sonobuoy from sonobuoy started at 2024-05-14 03:38:23 +0000 UTC (1 container statuses recorded)
  May 14 04:23:15.405: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  May 14 04:23:15.405: INFO: sonobuoy-e2e-job-f032179957ad4a3a from sonobuoy started at 2024-05-14 03:38:24 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.405: INFO: 	Container e2e ready: true, restart count 0
  May 14 04:23:15.405: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 14 04:23:15.405: INFO: sonobuoy-systemd-logs-daemon-set-1b7153daae854a0a-bwsh7 from sonobuoy started at 2024-05-14 03:38:24 +0000 UTC (2 container statuses recorded)
  May 14 04:23:15.405: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 14 04:23:15.405: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 05/14/24 04:23:15.405
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17cf4038bbf10130], Reason = [FailedScheduling], Message = [0/8 nodes are available: 3 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 5 node(s) didn't match Pod's node affinity/selector. preemption: 0/8 nodes are available: 8 Preemption is not helpful for scheduling..] @ 05/14/24 04:23:15.481
  E0514 04:23:15.502973      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:23:16.471: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3162" for this suite. @ 05/14/24 04:23:16.476
• [1.242 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 05/14/24 04:23:16.484
  May 14 04:23:16.484: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename pods @ 05/14/24 04:23:16.486
  E0514 04:23:16.503502      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:23:16.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:23:16.511
  STEP: creating the pod @ 05/14/24 04:23:16.513
  STEP: submitting the pod to kubernetes @ 05/14/24 04:23:16.514
  W0514 04:23:16.525084      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0514 04:23:17.504114      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:18.504385      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 05/14/24 04:23:18.536
  STEP: updating the pod @ 05/14/24 04:23:18.539
  May 14 04:23:19.058: INFO: Successfully updated pod "pod-update-activedeadlineseconds-a6005c42-6e02-4b26-90ec-0228727e5aa1"
  E0514 04:23:19.505136      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:20.505250      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:21.505726      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:22.506225      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:23:23.073: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1061" for this suite. @ 05/14/24 04:23:23.081
• [6.606 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 05/14/24 04:23:23.09
  May 14 04:23:23.090: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename projected @ 05/14/24 04:23:23.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:23:23.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:23:23.124
  STEP: Creating a pod to test downward API volume plugin @ 05/14/24 04:23:23.126
  E0514 04:23:23.506958      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:24.507641      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:25.508328      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:26.508706      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:23:27.17
  May 14 04:23:27.173: INFO: Trying to get logs from node viola-paas-worker03 pod downwardapi-volume-2b60b0d5-6beb-4ffe-bfdd-6a1573a75358 container client-container: <nil>
  STEP: delete the pod @ 05/14/24 04:23:27.179
  May 14 04:23:27.200: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8689" for this suite. @ 05/14/24 04:23:27.205
• [4.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 05/14/24 04:23:27.213
  May 14 04:23:27.213: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename endpointslicemirroring @ 05/14/24 04:23:27.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:23:27.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:23:27.238
  STEP: mirroring a new custom Endpoint @ 05/14/24 04:23:27.255
  May 14 04:23:27.270: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  E0514 04:23:27.509463      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:28.509996      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 05/14/24 04:23:29.275
  May 14 04:23:29.290: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E0514 04:23:29.510684      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:30.511474      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 05/14/24 04:23:31.334
  May 14 04:23:31.359: INFO: Waiting for 0 EndpointSlices to exist, got 1
  E0514 04:23:31.512303      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:32.512932      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:23:33.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-2522" for this suite. @ 05/14/24 04:23:33.374
• [6.184 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:129
  STEP: Creating a kubernetes client @ 05/14/24 04:23:33.397
  May 14 04:23:33.397: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename security-context @ 05/14/24 04:23:33.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:23:33.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:23:33.435
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/14/24 04:23:33.438
  E0514 04:23:33.513508      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:34.513724      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:35.514085      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:36.514773      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:23:37.471
  May 14 04:23:37.475: INFO: Trying to get logs from node viola-paas-worker03 pod security-context-5575ab0b-9704-4b60-8c8b-f7b62cc3f427 container test-container: <nil>
  STEP: delete the pod @ 05/14/24 04:23:37.484
  May 14 04:23:37.503: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7703" for this suite. @ 05/14/24 04:23:37.507
  E0514 04:23:37.515029      23 retrywatcher.go:129] "Watch failed" err="context canceled"
• [4.122 seconds]
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 05/14/24 04:23:37.519
  May 14 04:23:37.519: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename field-validation @ 05/14/24 04:23:37.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:23:37.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:23:37.544
  May 14 04:23:37.546: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  W0514 04:23:37.547933      23 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc004537750 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0514 04:23:38.515315      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:39.516263      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:40.516858      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:41.517020      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:42.517468      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:43.517661      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:44.518012      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0514 04:23:45.098029      23 warnings.go:70] unknown field "alpha"
  W0514 04:23:45.098063      23 warnings.go:70] unknown field "beta"
  W0514 04:23:45.098066      23 warnings.go:70] unknown field "delta"
  W0514 04:23:45.098068      23 warnings.go:70] unknown field "epsilon"
  W0514 04:23:45.098071      23 warnings.go:70] unknown field "gamma"
  E0514 04:23:45.518173      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:23:45.629: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3942" for this suite. @ 05/14/24 04:23:45.647
• [8.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
test/e2e/apimachinery/resource_quota.go:76
  STEP: Creating a kubernetes client @ 05/14/24 04:23:45.655
  May 14 04:23:45.655: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename resourcequota @ 05/14/24 04:23:45.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:23:45.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:23:45.69
  STEP: Counting existing ResourceQuota @ 05/14/24 04:23:45.693
  E0514 04:23:46.519130      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:47.519394      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:48.520262      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:49.520599      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:50.521559      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/14/24 04:23:50.697
  STEP: Ensuring resource quota status is calculated @ 05/14/24 04:23:50.706
  E0514 04:23:51.522636      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:52.523009      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:23:52.716: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6454" for this suite. @ 05/14/24 04:23:52.723
• [7.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 05/14/24 04:23:52.733
  May 14 04:23:52.733: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename deployment @ 05/14/24 04:23:52.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:23:52.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:23:52.77
  May 14 04:23:52.773: INFO: Creating deployment "test-recreate-deployment"
  May 14 04:23:52.781: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  May 14 04:23:52.808: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  E0514 04:23:53.523575      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:54.523829      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:23:54.815: INFO: Waiting deployment "test-recreate-deployment" to complete
  May 14 04:23:54.823: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  May 14 04:23:54.837: INFO: Updating deployment test-recreate-deployment
  May 14 04:23:54.837: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  May 14 04:23:54.996: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7732",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f98866a6-6285-4366-bf9d-7f389be1e51f",
      ResourceVersion: (string) (len=8) "26320972",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851257432,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 14 04:23:54.999: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7732",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b3cb06b4-e22e-401b-96d9-adba3287a269",
      ResourceVersion: (string) (len=8) "26320971",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851257434,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "f98866a6-6285-4366-bf9d-7f389be1e51f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 39 38 38 36 36  61 36 2d 36 32 38 35 2d  |\"f98866a6-6285-|
              00000120  34 33 36 36 2d 62 66 39  64 2d 37 66 33 38 39 62  |4366-bf9d-7f389b|
              00000130  65 31 65 35 31 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e1e51f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 14 04:23:55.000: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  May 14 04:23:55.000: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-dd4bc9d6d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7732",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1b87413b-ab1c-4cc2-8103-80851558f905",
      ResourceVersion: (string) (len=8) "26320960",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851257432,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "f98866a6-6285-4366-bf9d-7f389be1e51f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 39 38 38 36 36  61 36 2d 36 32 38 35 2d  |\"f98866a6-6285-|
              00000120  34 33 36 36 2d 62 66 39  64 2d 37 66 33 38 39 62  |4366-bf9d-7f389b|
              00000130  65 31 65 35 31 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e1e51f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 14 04:23:55.004: INFO: Pod "test-recreate-deployment-76fb77d45-z5zhr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-z5zhr",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-7732",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f7138cee-c8fa-401b-b121-b09e6474b861",
      ResourceVersion: (string) (len=8) "26320970",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851257434,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "b3cb06b4-e22e-401b-96d9-adba3287a269",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  63 62 30 36 62 34 2d 65  |d\":\"b3cb06b4-e|
              00000090  32 32 65 2d 34 30 31 62  2d 39 36 64 39 2d 61 64  |22e-401b-96d9-ad|
              000000a0  62 61 33 32 38 37 61 32  36 39 5c 22 7d 22 3a 7b  |ba3287a269\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dj5r2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dj5r2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851257434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.241",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851257434,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:23:55.006: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7732" for this suite. @ 05/14/24 04:23:55.012
• [2.287 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 05/14/24 04:23:55.021
  May 14 04:23:55.021: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename projected @ 05/14/24 04:23:55.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:23:55.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:23:55.063
  STEP: Creating a pod to test downward API volume plugin @ 05/14/24 04:23:55.065
  E0514 04:23:55.523769      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:56.524054      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:57.524512      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:23:58.524776      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:23:59.101
  May 14 04:23:59.104: INFO: Trying to get logs from node viola-paas-worker03 pod downwardapi-volume-71b2bab0-8305-4ba8-9ff6-da19ff35c2b1 container client-container: <nil>
  STEP: delete the pod @ 05/14/24 04:23:59.11
  May 14 04:23:59.131: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6786" for this suite. @ 05/14/24 04:23:59.135
• [4.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 05/14/24 04:23:59.144
  May 14 04:23:59.144: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename daemonsets @ 05/14/24 04:23:59.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:23:59.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:23:59.185
  May 14 04:23:59.214: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 05/14/24 04:23:59.223
  May 14 04:23:59.225: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 14 04:23:59.225: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 05/14/24 04:23:59.225
  May 14 04:23:59.266: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 14 04:23:59.266: INFO: Node viola-paas-worker01 is running 0 daemon pod, expected 1
  E0514 04:23:59.525403      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:24:00.272: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 14 04:24:00.272: INFO: Node viola-paas-worker01 is running 0 daemon pod, expected 1
  E0514 04:24:00.525953      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:24:01.283: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May 14 04:24:01.283: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 05/14/24 04:24:01.286
  May 14 04:24:01.360: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May 14 04:24:01.360: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0514 04:24:01.526046      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:24:02.364: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 14 04:24:02.364: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 05/14/24 04:24:02.364
  May 14 04:24:02.388: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 14 04:24:02.388: INFO: Node viola-paas-worker01 is running 0 daemon pod, expected 1
  E0514 04:24:02.527119      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:24:03.394: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May 14 04:24:03.394: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/14/24 04:24:03.401
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4564, will wait for the garbage collector to delete the pods @ 05/14/24 04:24:03.401
  May 14 04:24:03.463: INFO: Deleting DaemonSet.extensions daemon-set took: 8.292037ms
  E0514 04:24:03.527637      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:24:03.563: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.511121ms
  E0514 04:24:04.528512      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:24:05.369: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 14 04:24:05.369: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May 14 04:24:05.374: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26321173"},"items":null}

  May 14 04:24:05.377: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26321173"},"items":null}

  May 14 04:24:05.429: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4564" for this suite. @ 05/14/24 04:24:05.438
• [6.302 seconds]
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance]
test/e2e/apps/rc.go:103
  STEP: Creating a kubernetes client @ 05/14/24 04:24:05.446
  May 14 04:24:05.446: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename replication-controller @ 05/14/24 04:24:05.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:24:05.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:24:05.483
  STEP: Given a ReplicationController is created @ 05/14/24 04:24:05.486
  STEP: When the matched label of one of its pods change @ 05/14/24 04:24:05.497
  May 14 04:24:05.500: INFO: Pod name pod-release: Found 0 pods out of 1
  E0514 04:24:05.528933      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:06.529163      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:07.529671      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:08.530236      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:09.530492      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:24:10.505: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/14/24 04:24:10.522
  E0514 04:24:10.530766      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:11.531330      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:24:11.677: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5511" for this suite. @ 05/14/24 04:24:11.682
• [6.246 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:141
  STEP: Creating a kubernetes client @ 05/14/24 04:24:11.693
  May 14 04:24:11.693: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename crd-webhook @ 05/14/24 04:24:11.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:24:11.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:24:11.729
  STEP: Setting up server cert @ 05/14/24 04:24:11.732
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/14/24 04:24:12.076
  STEP: Deploying the custom resource conversion webhook pod @ 05/14/24 04:24:12.086
  STEP: Wait for the deployment to be ready @ 05/14/24 04:24:12.104
  May 14 04:24:12.116: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0514 04:24:12.532317      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:13.532636      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/14/24 04:24:14.129
  STEP: Verifying the service has paired with the endpoint @ 05/14/24 04:24:14.143
  E0514 04:24:14.532873      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:24:15.143: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  May 14 04:24:15.152: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  E0514 04:24:15.533849      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:16.534203      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:17.534426      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:18.534465      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:19.534514      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:20.534755      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:21.535716      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:22.536226      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 05/14/24 04:24:22.763
  STEP: v2 custom resource should be converted @ 05/14/24 04:24:22.77
  May 14 04:24:22.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-496" for this suite. @ 05/14/24 04:24:23.359
• [11.678 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 05/14/24 04:24:23.371
  May 14 04:24:23.371: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/14/24 04:24:23.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:24:23.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:24:23.416
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 05/14/24 04:24:23.419
  May 14 04:24:23.419: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  E0514 04:24:23.536874      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:24.538087      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:25.538485      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:26.538995      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:27.539663      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:28.540556      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:29.541546      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:30.542590      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:24:31.155: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  E0514 04:24:31.543137      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:32.543883      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:33.544342      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:34.544460      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:35.545007      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:36.545125      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:37.545937      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:38.546519      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:39.547316      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:40.548487      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:41.549305      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:42.549985      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:43.550629      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:44.551538      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:45.552354      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:24:46.082: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8481" for this suite. @ 05/14/24 04:24:46.094
• [22.731 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 05/14/24 04:24:46.103
  May 14 04:24:46.103: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename init-container @ 05/14/24 04:24:46.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:24:46.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:24:46.127
  STEP: creating the pod @ 05/14/24 04:24:46.13
  May 14 04:24:46.130: INFO: PodSpec: initContainers in spec.initContainers
  E0514 04:24:46.552335      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:47.553600      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:48.554047      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:49.554388      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:50.554961      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:51.555504      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:52.555833      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:53.556222      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:54.556998      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:55.557738      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:56.557872      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:57.558053      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:58.558459      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:24:59.558657      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:00.558915      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:01.559277      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:02.560047      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:03.560587      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:04.560843      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:05.561532      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:06.561827      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:07.562046      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:08.562513      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:09.562867      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:10.563562      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:11.563929      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:12.564598      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:13.565569      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:14.565946      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:15.566332      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:16.566656      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:17.567021      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:18.567335      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:19.567742      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:20.568361      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:21.568551      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:22.568858      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:23.569167      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:24.569313      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:25.570199      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:26.570613      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:27.570776      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:25:28.416: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-e036930c-94e0-4bbb-82c2-b2953d7dabd3", GenerateName:"", Namespace:"init-container-195", SelfLink:"", UID:"10aac678-0abf-4ba3-9ccc-d55d08bd97f6", ResourceVersion:"26321829", Generation:0, CreationTimestamp:time.Date(2024, time.May, 14, 4, 24, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"130559803"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 14, 4, 24, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039cd3c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 14, 4, 25, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039cd410), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-q5b44", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0054222c0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-q5b44", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-q5b44", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-q5b44", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc004ae5848), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"viola-paas-worker03", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc00088b3b0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004ae58c0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004ae58e0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc004ae58e8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc004ae58ec), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc004b1d9a0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 14, 4, 24, 46, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 14, 4, 24, 46, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 14, 4, 24, 46, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 14, 4, 24, 46, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.10.50.241", HostIPs:[]v1.HostIP(nil), PodIP:"10.233.64.22", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.233.64.22"}}, StartTime:time.Date(2024, time.May, 14, 4, 24, 46, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00088b500)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00088b570)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"containerd://f8dca2626a432f190f4ef4dce28113ee6ca87f5d3ab32e1c29f237cedb2beaa9", Started:(*bool)(0xc004ae59ba), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc005422340), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(0xc004ae59cf), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc005422320), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc004ae599f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  May 14 04:25:28.416: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-195" for this suite. @ 05/14/24 04:25:28.423
• [42.331 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 05/14/24 04:25:28.435
  May 14 04:25:28.435: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename daemonsets @ 05/14/24 04:25:28.436
  E0514 04:25:28.571384      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:25:28.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:25:28.692
  May 14 04:25:28.738: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/14/24 04:25:28.781
  May 14 04:25:28.786: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:28.786: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:28.786: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:28.805: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 14 04:25:28.805: INFO: Node viola-paas-ingress01 is running 0 daemon pod, expected 1
  E0514 04:25:29.572288      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:25:29.815: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:29.815: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:29.815: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:29.820: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May 14 04:25:29.820: INFO: Node viola-paas-ingress02 is running 0 daemon pod, expected 1
  E0514 04:25:30.573350      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:25:30.816: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:30.816: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:30.816: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:30.820: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
  May 14 04:25:30.820: INFO: Number of running nodes: 5, number of available pods: 5 in daemonset daemon-set
  STEP: Update daemon pods image. @ 05/14/24 04:25:30.834
  STEP: Check that daemon pods images are updated. @ 05/14/24 04:25:30.85
  May 14 04:25:30.868: INFO: Wrong image for pod: daemon-set-2nktj. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 14 04:25:30.868: INFO: Wrong image for pod: daemon-set-7ms9x. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 14 04:25:30.868: INFO: Wrong image for pod: daemon-set-8rxbk. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 14 04:25:30.868: INFO: Wrong image for pod: daemon-set-b2tvs. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 14 04:25:30.884: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:30.884: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:30.884: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0514 04:25:31.573455      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:25:31.891: INFO: Wrong image for pod: daemon-set-2nktj. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 14 04:25:31.891: INFO: Wrong image for pod: daemon-set-7ms9x. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 14 04:25:31.891: INFO: Wrong image for pod: daemon-set-8rxbk. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 14 04:25:31.891: INFO: Wrong image for pod: daemon-set-b2tvs. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 14 04:25:31.891: INFO: Pod daemon-set-hqhf5 is not available
  May 14 04:25:31.898: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:31.898: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:31.898: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0514 04:25:32.574442      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:25:32.890: INFO: Wrong image for pod: daemon-set-2nktj. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 14 04:25:32.890: INFO: Wrong image for pod: daemon-set-7ms9x. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 14 04:25:32.890: INFO: Wrong image for pod: daemon-set-8rxbk. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 14 04:25:32.890: INFO: Wrong image for pod: daemon-set-b2tvs. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 14 04:25:32.890: INFO: Pod daemon-set-hqhf5 is not available
  May 14 04:25:32.901: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:32.901: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:32.901: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0514 04:25:33.574555      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:25:33.895: INFO: Wrong image for pod: daemon-set-7ms9x. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 14 04:25:33.895: INFO: Wrong image for pod: daemon-set-8rxbk. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 14 04:25:33.895: INFO: Wrong image for pod: daemon-set-b2tvs. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 14 04:25:33.895: INFO: Pod daemon-set-dt4s7 is not available
  May 14 04:25:33.901: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:33.901: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:33.901: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0514 04:25:34.575357      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:25:34.891: INFO: Wrong image for pod: daemon-set-7ms9x. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 14 04:25:34.891: INFO: Wrong image for pod: daemon-set-8rxbk. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 14 04:25:34.891: INFO: Wrong image for pod: daemon-set-b2tvs. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 14 04:25:34.891: INFO: Pod daemon-set-dt4s7 is not available
  May 14 04:25:34.897: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:34.897: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:34.897: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0514 04:25:35.575404      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:25:35.891: INFO: Pod daemon-set-6cg88 is not available
  May 14 04:25:35.891: INFO: Wrong image for pod: daemon-set-8rxbk. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 14 04:25:35.891: INFO: Wrong image for pod: daemon-set-b2tvs. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 14 04:25:35.896: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:35.896: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:35.896: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0514 04:25:36.576053      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:25:36.891: INFO: Wrong image for pod: daemon-set-8rxbk. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 14 04:25:36.897: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:36.897: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:36.897: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0514 04:25:37.576060      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:25:37.890: INFO: Wrong image for pod: daemon-set-8rxbk. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 14 04:25:37.890: INFO: Pod daemon-set-zptmj is not available
  May 14 04:25:37.896: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:37.896: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:37.896: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0514 04:25:38.577184      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:25:38.894: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:38.894: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:38.894: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0514 04:25:39.577293      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:25:39.889: INFO: Pod daemon-set-vrfzl is not available
  May 14 04:25:39.896: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:39.896: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:39.896: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 05/14/24 04:25:39.896
  May 14 04:25:39.901: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:39.901: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:39.901: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:39.904: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  May 14 04:25:39.904: INFO: Node viola-paas-worker02 is running 0 daemon pod, expected 1
  E0514 04:25:40.578125      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:25:40.914: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:40.914: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:40.914: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:25:40.925: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
  May 14 04:25:40.925: INFO: Number of running nodes: 5, number of available pods: 5 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/14/24 04:25:40.94
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8413, will wait for the garbage collector to delete the pods @ 05/14/24 04:25:40.94
  May 14 04:25:41.004: INFO: Deleting DaemonSet.extensions daemon-set took: 10.115509ms
  May 14 04:25:41.104: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.174488ms
  E0514 04:25:41.579071      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:42.579915      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:25:42.610: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 14 04:25:42.610: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May 14 04:25:42.619: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26322127"},"items":null}

  May 14 04:25:42.623: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26322127"},"items":null}

  May 14 04:25:42.640: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8413" for this suite. @ 05/14/24 04:25:42.645
• [14.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 05/14/24 04:25:42.658
  May 14 04:25:42.658: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename watch @ 05/14/24 04:25:42.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:25:42.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:25:42.676
  STEP: creating a watch on configmaps with label A @ 05/14/24 04:25:42.68
  STEP: creating a watch on configmaps with label B @ 05/14/24 04:25:42.68
  STEP: creating a watch on configmaps with label A or B @ 05/14/24 04:25:42.681
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 05/14/24 04:25:42.682
  May 14 04:25:42.689: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7884  5b32e7f2-0227-47e1-85da-b15676b11321 26322133 0 2024-05-14 04:25:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-14 04:25:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May 14 04:25:42.689: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7884  5b32e7f2-0227-47e1-85da-b15676b11321 26322133 0 2024-05-14 04:25:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-14 04:25:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 05/14/24 04:25:42.689
  May 14 04:25:42.697: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7884  5b32e7f2-0227-47e1-85da-b15676b11321 26322134 0 2024-05-14 04:25:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-14 04:25:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 14 04:25:42.697: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7884  5b32e7f2-0227-47e1-85da-b15676b11321 26322134 0 2024-05-14 04:25:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-14 04:25:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 05/14/24 04:25:42.697
  May 14 04:25:42.703: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7884  5b32e7f2-0227-47e1-85da-b15676b11321 26322135 0 2024-05-14 04:25:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-14 04:25:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 14 04:25:42.703: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7884  5b32e7f2-0227-47e1-85da-b15676b11321 26322135 0 2024-05-14 04:25:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-14 04:25:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 05/14/24 04:25:42.703
  May 14 04:25:42.714: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7884  5b32e7f2-0227-47e1-85da-b15676b11321 26322136 0 2024-05-14 04:25:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-14 04:25:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 14 04:25:42.714: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7884  5b32e7f2-0227-47e1-85da-b15676b11321 26322136 0 2024-05-14 04:25:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-14 04:25:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 05/14/24 04:25:42.714
  May 14 04:25:42.719: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7884  af0f9d7b-f91e-4f42-be85-5068986f95fe 26322137 0 2024-05-14 04:25:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-14 04:25:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May 14 04:25:42.720: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7884  af0f9d7b-f91e-4f42-be85-5068986f95fe 26322137 0 2024-05-14 04:25:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-14 04:25:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0514 04:25:43.580276      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:44.580658      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:45.581464      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:46.581767      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:47.582106      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:48.582515      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:49.582865      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:50.583561      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:51.584035      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:52.584382      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 05/14/24 04:25:52.72
  May 14 04:25:52.729: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7884  af0f9d7b-f91e-4f42-be85-5068986f95fe 26322256 0 2024-05-14 04:25:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-14 04:25:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May 14 04:25:52.729: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7884  af0f9d7b-f91e-4f42-be85-5068986f95fe 26322256 0 2024-05-14 04:25:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-14 04:25:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0514 04:25:53.584408      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:54.584722      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:55.585533      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:56.585855      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:57.586119      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:58.586465      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:25:59.586922      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:00.587552      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:01.588462      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:02.588759      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:26:02.730: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7884" for this suite. @ 05/14/24 04:26:02.737
• [20.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]
test/e2e/kubectl/kubectl.go:396
  STEP: Creating a kubernetes client @ 05/14/24 04:26:02.753
  May 14 04:26:02.753: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename kubectl @ 05/14/24 04:26:02.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:26:02.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:26:02.783
  STEP: creating all guestbook components @ 05/14/24 04:26:02.785
  May 14 04:26:02.785: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  May 14 04:26:02.785: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-2432 create -f -'
  May 14 04:26:03.098: INFO: stderr: ""
  May 14 04:26:03.098: INFO: stdout: "service/agnhost-replica created\n"
  May 14 04:26:03.099: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  May 14 04:26:03.099: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-2432 create -f -'
  May 14 04:26:03.395: INFO: stderr: ""
  May 14 04:26:03.395: INFO: stdout: "service/agnhost-primary created\n"
  May 14 04:26:03.395: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  May 14 04:26:03.395: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-2432 create -f -'
  E0514 04:26:03.588929      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:26:03.727: INFO: stderr: ""
  May 14 04:26:03.727: INFO: stdout: "service/frontend created\n"
  May 14 04:26:03.727: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  May 14 04:26:03.727: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-2432 create -f -'
  May 14 04:26:04.006: INFO: stderr: ""
  May 14 04:26:04.006: INFO: stdout: "deployment.apps/frontend created\n"
  May 14 04:26:04.006: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  May 14 04:26:04.006: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-2432 create -f -'
  May 14 04:26:04.285: INFO: stderr: ""
  May 14 04:26:04.285: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  May 14 04:26:04.285: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  May 14 04:26:04.285: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-2432 create -f -'
  May 14 04:26:04.566: INFO: stderr: ""
  May 14 04:26:04.566: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 05/14/24 04:26:04.566
  May 14 04:26:04.566: INFO: Waiting for all frontend pods to be Running.
  E0514 04:26:04.589183      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:05.590149      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:06.590270      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:07.590605      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:08.591215      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:09.591603      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:26:09.617: INFO: Waiting for frontend to serve content.
  May 14 04:26:09.631: INFO: Trying to add a new entry to the guestbook.
  May 14 04:26:09.643: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 05/14/24 04:26:09.651
  May 14 04:26:09.651: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-2432 delete --grace-period=0 --force -f -'
  May 14 04:26:09.745: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 14 04:26:09.745: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 05/14/24 04:26:09.745
  May 14 04:26:09.745: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-2432 delete --grace-period=0 --force -f -'
  May 14 04:26:09.834: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 14 04:26:09.834: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/14/24 04:26:09.834
  May 14 04:26:09.834: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-2432 delete --grace-period=0 --force -f -'
  May 14 04:26:09.912: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 14 04:26:09.912: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/14/24 04:26:09.912
  May 14 04:26:09.912: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-2432 delete --grace-period=0 --force -f -'
  May 14 04:26:09.978: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 14 04:26:09.978: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/14/24 04:26:09.978
  May 14 04:26:09.978: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-2432 delete --grace-period=0 --force -f -'
  May 14 04:26:10.056: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 14 04:26:10.057: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/14/24 04:26:10.057
  May 14 04:26:10.057: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-2432 delete --grace-period=0 --force -f -'
  May 14 04:26:10.142: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 14 04:26:10.142: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  May 14 04:26:10.142: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2432" for this suite. @ 05/14/24 04:26:10.154
• [7.416 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:164
  STEP: Creating a kubernetes client @ 05/14/24 04:26:10.17
  May 14 04:26:10.170: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename security-context @ 05/14/24 04:26:10.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:26:10.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:26:10.199
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/14/24 04:26:10.201
  E0514 04:26:10.592606      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:11.593065      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:12.594066      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:13.594410      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:26:14.229
  May 14 04:26:14.232: INFO: Trying to get logs from node viola-paas-worker03 pod security-context-e126f13c-881a-44e6-83f5-ceb4880ac3a7 container test-container: <nil>
  STEP: delete the pod @ 05/14/24 04:26:14.24
  May 14 04:26:14.256: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-4909" for this suite. @ 05/14/24 04:26:14.261
• [4.098 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 05/14/24 04:26:14.268
  May 14 04:26:14.268: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename projected @ 05/14/24 04:26:14.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:26:14.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:26:14.297
  STEP: Creating projection with secret that has name projected-secret-test-map-d4695a15-3c91-40d7-91d5-4bca463ba9a1 @ 05/14/24 04:26:14.299
  STEP: Creating a pod to test consume secrets @ 05/14/24 04:26:14.307
  E0514 04:26:14.595039      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:15.596027      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:16.596117      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:17.596485      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:26:18.337
  May 14 04:26:18.345: INFO: Trying to get logs from node viola-paas-worker03 pod pod-projected-secrets-9c1286e2-e937-447d-af3e-8c22bb335fb2 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/14/24 04:26:18.351
  May 14 04:26:18.383: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7325" for this suite. @ 05/14/24 04:26:18.388
• [4.127 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 05/14/24 04:26:18.396
  May 14 04:26:18.396: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/14/24 04:26:18.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:26:18.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:26:18.429
  STEP: creating a target pod @ 05/14/24 04:26:18.484
  E0514 04:26:18.596712      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:19.597422      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 05/14/24 04:26:20.514
  E0514 04:26:20.597822      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:21.598310      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 05/14/24 04:26:22.537
  May 14 04:26:22.537: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-3304 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 04:26:22.537: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 04:26:22.538: INFO: ExecWithOptions: Clientset creation
  May 14 04:26:22.538: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-3304/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  May 14 04:26:22.589: INFO: Exec stderr: ""
  May 14 04:26:22.597: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0514 04:26:22.598527      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "ephemeral-containers-test-3304" for this suite. @ 05/14/24 04:26:22.602
• [4.221 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 05/14/24 04:26:22.617
  May 14 04:26:22.617: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename disruption @ 05/14/24 04:26:22.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:26:22.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:26:22.635
  STEP: Waiting for the pdb to be processed @ 05/14/24 04:26:22.648
  E0514 04:26:23.599505      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:24.599933      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 05/14/24 04:26:24.656
  STEP: Waiting for all pods to be running @ 05/14/24 04:26:24.676
  May 14 04:26:24.679: INFO: running pods: 0 < 1
  E0514 04:26:25.600199      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:26.600530      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 05/14/24 04:26:26.684
  STEP: Waiting for the pdb to be processed @ 05/14/24 04:26:26.696
  STEP: Patching PodDisruptionBudget status @ 05/14/24 04:26:26.703
  STEP: Waiting for the pdb to be processed @ 05/14/24 04:26:26.714
  May 14 04:26:26.717: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8842" for this suite. @ 05/14/24 04:26:26.723
• [4.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 05/14/24 04:26:26.733
  May 14 04:26:26.733: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename var-expansion @ 05/14/24 04:26:26.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:26:26.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:26:26.757
  STEP: Creating a pod to test substitution in container's args @ 05/14/24 04:26:26.759
  E0514 04:26:27.601622      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:28.602130      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:29.602911      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:30.603652      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:26:30.798
  May 14 04:26:30.800: INFO: Trying to get logs from node viola-paas-worker03 pod var-expansion-3586886f-6df9-4ce9-a1b9-df363d8ace87 container dapi-container: <nil>
  STEP: delete the pod @ 05/14/24 04:26:30.806
  May 14 04:26:30.833: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7037" for this suite. @ 05/14/24 04:26:30.838
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 05/14/24 04:26:30.844
  May 14 04:26:30.844: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename sched-preemption @ 05/14/24 04:26:30.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:26:30.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:26:30.871
  May 14 04:26:30.890: INFO: Waiting up to 1m0s for all nodes to be ready
  E0514 04:26:31.604091      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:32.604507      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:33.605061      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:34.605396      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:35.605583      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:36.606101      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:37.606467      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:38.606802      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:39.607741      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:40.608236      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:41.608546      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:42.608953      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:43.610076      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:44.610562      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:45.611721      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:46.612297      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:47.613284      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:48.613419      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:49.613801      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:50.613946      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:51.614649      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:52.615252      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:53.616244      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:54.616582      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:55.617462      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:56.618370      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:57.618494      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:58.619108      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:26:59.619803      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:00.620291      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:01.620889      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:02.621335      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:03.621734      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:04.622060      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:05.622387      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:06.623381      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:07.623589      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:08.623912      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:09.624454      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:10.624624      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:11.625010      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:12.625215      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:13.626231      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:14.626416      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:15.627256      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:16.627681      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:17.627853      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:18.628221      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:19.629209      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:20.629753      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:21.630008      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:22.630388      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:23.630649      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:24.630803      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:25.631708      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:26.632135      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:27.632222      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:28.632543      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:29.632818      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:30.633540      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:27:30.963: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/14/24 04:27:30.967
  May 14 04:27:30.992: INFO: Created pod: pod0-0-sched-preemption-low-priority
  May 14 04:27:31.001: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  May 14 04:27:31.028: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  May 14 04:27:31.050: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  May 14 04:27:31.073: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  May 14 04:27:31.086: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  May 14 04:27:31.126: INFO: Created pod: pod3-0-sched-preemption-medium-priority
  May 14 04:27:31.132: INFO: Created pod: pod3-1-sched-preemption-medium-priority
  May 14 04:27:31.166: INFO: Created pod: pod4-0-sched-preemption-medium-priority
  May 14 04:27:31.203: INFO: Created pod: pod4-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/14/24 04:27:31.203
  E0514 04:27:31.634609      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:32.635123      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 05/14/24 04:27:33.235
  E0514 04:27:33.636094      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:34.636458      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:35.636571      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:36.636990      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:27:37.321: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6573" for this suite. @ 05/14/24 04:27:37.503
• [66.672 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
test/e2e/apps/statefulset.go:750
  STEP: Creating a kubernetes client @ 05/14/24 04:27:37.518
  May 14 04:27:37.518: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename statefulset @ 05/14/24 04:27:37.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:27:37.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:27:37.546
  STEP: Creating service test in namespace statefulset-1510 @ 05/14/24 04:27:37.549
  STEP: Creating stateful set ss in namespace statefulset-1510 @ 05/14/24 04:27:37.558
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-1510 @ 05/14/24 04:27:37.572
  May 14 04:27:37.577: INFO: Found 0 stateful pods, waiting for 1
  E0514 04:27:37.638017      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:38.638398      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:39.638794      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:40.639443      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:41.639576      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:42.639910      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:43.640197      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:44.640347      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:45.641214      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:46.641523      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:27:47.584: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 05/14/24 04:27:47.584
  May 14 04:27:47.588: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=statefulset-1510 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0514 04:27:47.642186      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:27:47.716: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 14 04:27:47.716: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 14 04:27:47.716: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 14 04:27:47.721: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0514 04:27:48.642515      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:49.643132      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:50.643623      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:51.644131      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:52.644525      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:53.644721      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:54.645094      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:55.645818      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:56.645947      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:27:57.646411      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:27:57.729: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  May 14 04:27:57.729: INFO: Waiting for statefulset status.readyReplicas updated to 0
  May 14 04:27:57.749: INFO: POD   NODE                 PHASE    GRACE  CONDITIONS
  May 14 04:27:57.749: INFO: ss-0  viola-paas-worker03  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:27:37 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:27:47 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:27:47 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:27:37 +0000 UTC  }]
  May 14 04:27:57.749: INFO: 
  May 14 04:27:57.749: INFO: StatefulSet ss has not reached scale 3, at 1
  E0514 04:27:58.646498      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:27:58.755: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.993017503s
  E0514 04:27:59.647251      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:27:59.760: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.987315809s
  E0514 04:28:00.647851      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:28:00.767: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.981713143s
  E0514 04:28:01.648333      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:28:01.773: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.975203752s
  E0514 04:28:02.648864      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:28:02.780: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.968627346s
  E0514 04:28:03.649739      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:28:03.786: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.961750776s
  E0514 04:28:04.649781      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:28:04.793: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.955680637s
  E0514 04:28:05.650278      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:28:05.801: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.949188126s
  E0514 04:28:06.651030      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:28:06.807: INFO: Verifying statefulset ss doesn't scale past 3 for another 941.533327ms
  E0514 04:28:07.651539      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-1510 @ 05/14/24 04:28:07.807
  May 14 04:28:07.818: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=statefulset-1510 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 14 04:28:07.926: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 14 04:28:07.926: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 14 04:28:07.926: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 14 04:28:07.926: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=statefulset-1510 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 14 04:28:08.029: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  May 14 04:28:08.029: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 14 04:28:08.029: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 14 04:28:08.029: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=statefulset-1510 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 14 04:28:08.175: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  May 14 04:28:08.175: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 14 04:28:08.175: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 14 04:28:08.180: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  May 14 04:28:08.180: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  May 14 04:28:08.180: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 05/14/24 04:28:08.18
  May 14 04:28:08.183: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=statefulset-1510 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 14 04:28:08.287: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 14 04:28:08.288: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 14 04:28:08.288: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 14 04:28:08.288: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=statefulset-1510 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 14 04:28:08.402: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 14 04:28:08.402: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 14 04:28:08.402: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 14 04:28:08.403: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=statefulset-1510 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 14 04:28:08.515: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 14 04:28:08.515: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 14 04:28:08.515: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 14 04:28:08.515: INFO: Waiting for statefulset status.readyReplicas updated to 0
  May 14 04:28:08.519: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0514 04:28:08.652026      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:09.652369      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:10.652834      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:11.652951      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:12.653336      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:13.653767      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:14.654095      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:15.654907      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:16.655463      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:17.655818      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:28:18.529: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  May 14 04:28:18.529: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  May 14 04:28:18.529: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  May 14 04:28:18.556: INFO: POD   NODE                 PHASE    GRACE  CONDITIONS
  May 14 04:28:18.557: INFO: ss-0  viola-paas-worker03  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:27:37 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:28:08 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:28:08 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:27:37 +0000 UTC  }]
  May 14 04:28:18.557: INFO: ss-1  viola-paas-worker01  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:27:57 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:28:09 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:28:09 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:27:57 +0000 UTC  }]
  May 14 04:28:18.557: INFO: ss-2  viola-paas-worker02  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:27:57 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:28:09 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:28:09 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:27:57 +0000 UTC  }]
  May 14 04:28:18.557: INFO: 
  May 14 04:28:18.557: INFO: StatefulSet ss has not reached scale 0, at 3
  E0514 04:28:18.656063      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:28:19.561: INFO: POD   NODE                 PHASE      GRACE  CONDITIONS
  May 14 04:28:19.561: INFO: ss-0  viola-paas-worker03  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:27:37 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:28:08 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:28:08 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:27:37 +0000 UTC  }]
  May 14 04:28:19.561: INFO: ss-2  viola-paas-worker02  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:27:57 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:28:09 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:28:09 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-14 04:27:57 +0000 UTC  }]
  May 14 04:28:19.561: INFO: 
  May 14 04:28:19.561: INFO: StatefulSet ss has not reached scale 0, at 2
  E0514 04:28:19.656111      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:28:20.567: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.983328303s
  E0514 04:28:20.656939      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:28:21.573: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.976789921s
  E0514 04:28:21.657838      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:28:22.578: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.97086775s
  E0514 04:28:22.658321      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:28:23.585: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.965199586s
  E0514 04:28:23.658525      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:28:24.589: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.959209235s
  E0514 04:28:24.658878      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:28:25.596: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.954348568s
  E0514 04:28:25.659288      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:28:26.600: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.948384433s
  E0514 04:28:26.660210      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:28:27.612: INFO: Verifying statefulset ss doesn't scale past 0 for another 943.442175ms
  E0514 04:28:27.660515      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-1510 @ 05/14/24 04:28:28.612
  May 14 04:28:28.617: INFO: Scaling statefulset ss to 0
  May 14 04:28:28.629: INFO: Waiting for statefulset status.replicas updated to 0
  May 14 04:28:28.632: INFO: Deleting all statefulset in ns statefulset-1510
  May 14 04:28:28.635: INFO: Scaling statefulset ss to 0
  May 14 04:28:28.643: INFO: Waiting for statefulset status.replicas updated to 0
  May 14 04:28:28.646: INFO: Deleting statefulset ss
  May 14 04:28:28.660: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0514 04:28:28.660484      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "statefulset-1510" for this suite. @ 05/14/24 04:28:28.666
• [51.157 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:198
  STEP: Creating a kubernetes client @ 05/14/24 04:28:28.676
  May 14 04:28:28.676: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/14/24 04:28:28.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:28:28.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:28:28.704
  STEP: fetching the /apis discovery document @ 05/14/24 04:28:28.706
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 05/14/24 04:28:28.707
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 05/14/24 04:28:28.707
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 05/14/24 04:28:28.707
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 05/14/24 04:28:28.708
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 05/14/24 04:28:28.708
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 05/14/24 04:28:28.709
  May 14 04:28:28.709: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2140" for this suite. @ 05/14/24 04:28:28.717
• [0.048 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 05/14/24 04:28:28.724
  May 14 04:28:28.724: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename container-probe @ 05/14/24 04:28:28.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:28:28.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:28:28.766
  E0514 04:28:29.660783      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:30.661830      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:31.662683      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:32.663678      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:33.664003      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:34.664790      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:35.665470      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:36.666528      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:37.667007      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:38.667794      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:39.668062      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:40.668491      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:41.668954      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:42.669629      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:43.669702      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:44.670414      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:45.670506      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:46.671019      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:47.671965      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:48.672196      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:49.673042      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:50.673190      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:51.673346      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:52.673482      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:53.673622      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:54.674755      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:55.675559      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:56.676636      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:57.676734      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:58.677786      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:28:59.678741      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:00.678834      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:01.678918      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:02.679589      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:03.680049      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:04.680183      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:05.681082      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:06.681169      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:07.681390      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:08.682027      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:09.683083      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:10.683295      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:11.683477      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:12.683857      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:13.684055      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:14.684081      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:15.684434      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:16.684754      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:17.685308      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:18.686193      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:19.686851      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:20.687200      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:21.687400      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:22.688329      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:23.688706      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:24.689353      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:25.690358      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:26.690729      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:27.690831      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:28.691381      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:29:28.785: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2714" for this suite. @ 05/14/24 04:29:28.793
• [60.082 seconds]
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:87
  STEP: Creating a kubernetes client @ 05/14/24 04:29:28.806
  May 14 04:29:28.806: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename emptydir @ 05/14/24 04:29:28.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:29:28.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:29:28.838
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 05/14/24 04:29:28.84
  E0514 04:29:29.692616      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:30.693030      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:31.693085      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:32.693441      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:29:32.864
  May 14 04:29:32.872: INFO: Trying to get logs from node viola-paas-worker03 pod pod-9b4bd57d-676e-4879-a160-4456312e3b60 container test-container: <nil>
  STEP: delete the pod @ 05/14/24 04:29:32.879
  May 14 04:29:32.917: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8341" for this suite. @ 05/14/24 04:29:32.922
• [4.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 05/14/24 04:29:32.931
  May 14 04:29:32.931: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename secrets @ 05/14/24 04:29:32.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:29:32.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:29:32.959
  STEP: Creating secret with name secret-test-map-d4a1272b-0728-4c44-bc0b-cc5157d3dae2 @ 05/14/24 04:29:32.961
  STEP: Creating a pod to test consume secrets @ 05/14/24 04:29:32.969
  E0514 04:29:33.693561      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:34.693960      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:35.694791      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:36.695167      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:29:36.994
  May 14 04:29:36.998: INFO: Trying to get logs from node viola-paas-worker03 pod pod-secrets-ce1f3137-8e65-4ed1-bb17-28e84ea7c862 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/14/24 04:29:37.004
  May 14 04:29:37.023: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-865" for this suite. @ 05/14/24 04:29:37.035
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:167
  STEP: Creating a kubernetes client @ 05/14/24 04:29:37.041
  May 14 04:29:37.041: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename emptydir @ 05/14/24 04:29:37.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:29:37.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:29:37.064
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/14/24 04:29:37.07
  E0514 04:29:37.696247      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:38.696756      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:39.697762      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:40.697932      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:29:41.104
  May 14 04:29:41.107: INFO: Trying to get logs from node viola-paas-worker03 pod pod-0bf6ff56-a1a2-45f5-9808-9c3eb471a84c container test-container: <nil>
  STEP: delete the pod @ 05/14/24 04:29:41.115
  May 14 04:29:41.147: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9310" for this suite. @ 05/14/24 04:29:41.153
• [4.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 05/14/24 04:29:41.164
  May 14 04:29:41.164: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename subpath @ 05/14/24 04:29:41.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:29:41.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:29:41.197
  STEP: Setting up data @ 05/14/24 04:29:41.2
  STEP: Creating pod pod-subpath-test-configmap-rcdf @ 05/14/24 04:29:41.212
  STEP: Creating a pod to test atomic-volume-subpath @ 05/14/24 04:29:41.212
  E0514 04:29:41.698002      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:42.698416      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:43.698442      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:44.698834      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:45.698951      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:46.699440      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:47.700284      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:48.700618      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:49.700684      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:50.701473      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:51.702148      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:52.702525      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:53.702694      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:54.703085      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:55.703452      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:56.703865      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:57.704666      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:58.705708      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:29:59.706661      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:00.707428      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:01.707530      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:02.707870      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:03.708447      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:04.708806      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:30:05.294
  May 14 04:30:05.297: INFO: Trying to get logs from node viola-paas-worker03 pod pod-subpath-test-configmap-rcdf container test-container-subpath-configmap-rcdf: <nil>
  STEP: delete the pod @ 05/14/24 04:30:05.305
  STEP: Deleting pod pod-subpath-test-configmap-rcdf @ 05/14/24 04:30:05.328
  May 14 04:30:05.328: INFO: Deleting pod "pod-subpath-test-configmap-rcdf" in namespace "subpath-1569"
  May 14 04:30:05.330: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1569" for this suite. @ 05/14/24 04:30:05.337
• [24.183 seconds]
------------------------------
SS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
test/e2e/network/endpointslice.go:207
  STEP: Creating a kubernetes client @ 05/14/24 04:30:05.346
  May 14 04:30:05.346: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename endpointslice @ 05/14/24 04:30:05.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:30:05.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:30:05.378
  E0514 04:30:05.709825      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:06.710376      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:07.710775      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:08.710932      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:09.711092      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 05/14/24 04:30:10.538
  E0514 04:30:10.711845      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:11.712264      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:12.712746      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:13.713408      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:14.713815      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 05/14/24 04:30:15.548
  E0514 04:30:15.714820      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:16.715256      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:17.715631      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:18.716046      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:19.716401      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 05/14/24 04:30:20.556
  E0514 04:30:20.717358      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:21.717730      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:22.717894      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:23.718088      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:24.718282      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 05/14/24 04:30:25.567
  May 14 04:30:25.596: INFO: EndpointSlice for Service endpointslice-8357/example-named-port not found
  E0514 04:30:25.719176      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:26.719559      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:27.719701      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:28.720015      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:29.720123      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:30.720922      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:31.721300      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:32.721418      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:33.721663      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:34.721728      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:30:35.627: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8357" for this suite. @ 05/14/24 04:30:35.634
• [30.295 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 05/14/24 04:30:35.642
  May 14 04:30:35.642: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename services @ 05/14/24 04:30:35.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:30:35.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:30:35.666
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-4587 @ 05/14/24 04:30:35.669
  STEP: changing the ExternalName service to type=NodePort @ 05/14/24 04:30:35.683
  STEP: creating replication controller externalname-service in namespace services-4587 @ 05/14/24 04:30:35.711
  E0514 04:30:35.722071      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0514 04:30:35.742968      23 runners.go:197] Created replication controller with name: externalname-service, namespace: services-4587, replica count: 2
  E0514 04:30:36.722189      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:37.722887      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:38.723325      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0514 04:30:38.794709      23 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 14 04:30:38.794: INFO: Creating new exec pod
  E0514 04:30:39.723686      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:40.724198      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:41.724494      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:30:41.824: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-4587 exec execpodtlbgz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  May 14 04:30:41.956: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  May 14 04:30:41.956: INFO: stdout: "externalname-service-lcl88"
  May 14 04:30:41.956: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-4587 exec execpodtlbgz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.1.37 80'
  May 14 04:30:42.062: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.1.37 80\nConnection to 10.233.1.37 80 port [tcp/http] succeeded!\n"
  May 14 04:30:42.062: INFO: stdout: "externalname-service-lcl88"
  May 14 04:30:42.063: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-4587 exec execpodtlbgz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.10.50.241 31302'
  May 14 04:30:42.172: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.10.50.241 31302\nConnection to 172.10.50.241 31302 port [tcp/*] succeeded!\n"
  May 14 04:30:42.172: INFO: stdout: "externalname-service-kxwwh"
  May 14 04:30:42.173: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-4587 exec execpodtlbgz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.10.50.165 31302'
  May 14 04:30:42.300: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.10.50.165 31302\nConnection to 172.10.50.165 31302 port [tcp/*] succeeded!\n"
  May 14 04:30:42.300: INFO: stdout: "externalname-service-lcl88"
  May 14 04:30:42.300: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May 14 04:30:42.316: INFO: Cleaning up the ExternalName to NodePort test service
  STEP: Destroying namespace "services-4587" for this suite. @ 05/14/24 04:30:42.365
• [6.738 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 05/14/24 04:30:42.382
  May 14 04:30:42.382: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename subpath @ 05/14/24 04:30:42.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:30:42.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:30:42.415
  STEP: Setting up data @ 05/14/24 04:30:42.418
  STEP: Creating pod pod-subpath-test-configmap-7m2s @ 05/14/24 04:30:42.441
  STEP: Creating a pod to test atomic-volume-subpath @ 05/14/24 04:30:42.442
  E0514 04:30:42.724929      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:43.725765      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:44.726729      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:45.727628      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:46.727839      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:47.728648      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:48.729474      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:49.729917      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:50.730767      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:51.731038      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:52.731827      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:53.732163      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:54.732362      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:55.733384      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:56.733434      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:57.733784      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:58.734077      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:30:59.734301      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:00.735085      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:01.735382      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:02.735625      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:03.736205      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:04.736301      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:05.737264      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:31:06.524
  May 14 04:31:06.528: INFO: Trying to get logs from node viola-paas-worker03 pod pod-subpath-test-configmap-7m2s container test-container-subpath-configmap-7m2s: <nil>
  STEP: delete the pod @ 05/14/24 04:31:06.535
  STEP: Deleting pod pod-subpath-test-configmap-7m2s @ 05/14/24 04:31:06.561
  May 14 04:31:06.561: INFO: Deleting pod "pod-subpath-test-configmap-7m2s" in namespace "subpath-851"
  May 14 04:31:06.563: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-851" for this suite. @ 05/14/24 04:31:06.571
• [24.197 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]
test/e2e/kubectl/kubectl.go:1674
  STEP: Creating a kubernetes client @ 05/14/24 04:31:06.579
  May 14 04:31:06.579: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename kubectl @ 05/14/24 04:31:06.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:31:06.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:31:06.601
  May 14 04:31:06.603: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-8293 version'
  May 14 04:31:06.666: INFO: stderr: ""
  May 14 04:31:06.666: INFO: stdout: "Client Version: v1.28.5\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.28.5\n"
  May 14 04:31:06.666: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8293" for this suite. @ 05/14/24 04:31:06.673
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]
test/e2e/common/node/configmap.go:169
  STEP: Creating a kubernetes client @ 05/14/24 04:31:06.684
  May 14 04:31:06.685: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename configmap @ 05/14/24 04:31:06.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:31:06.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:31:06.707
  STEP: creating a ConfigMap @ 05/14/24 04:31:06.711
  STEP: fetching the ConfigMap @ 05/14/24 04:31:06.715
  STEP: patching the ConfigMap @ 05/14/24 04:31:06.719
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 05/14/24 04:31:06.725
  E0514 04:31:06.738017      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the ConfigMap by collection with a label selector @ 05/14/24 04:31:06.745
  STEP: listing all ConfigMaps in test namespace @ 05/14/24 04:31:06.759
  May 14 04:31:06.762: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6780" for this suite. @ 05/14/24 04:31:06.767
• [0.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 05/14/24 04:31:06.78
  May 14 04:31:06.780: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename container-probe @ 05/14/24 04:31:06.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:31:06.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:31:06.807
  E0514 04:31:07.738450      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:08.739048      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:09.739580      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:10.740407      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:11.740679      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:12.741248      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:13.741910      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:14.741828      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:15.742639      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:16.743029      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:17.743350      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:18.743983      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:19.745094      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:20.745672      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:21.745914      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:22.746522      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:23.746567      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:24.746714      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:25.747526      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:26.747845      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:27.748104      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:28.748261      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:31:28.905: INFO: Container started at 2024-05-14 04:31:07 +0000 UTC, pod became ready at 2024-05-14 04:31:27 +0000 UTC
  May 14 04:31:28.905: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8031" for this suite. @ 05/14/24 04:31:28.915
• [22.146 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 05/14/24 04:31:28.927
  May 14 04:31:28.927: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/14/24 04:31:28.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:31:28.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:31:28.956
  May 14 04:31:28.959: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  E0514 04:31:29.748634      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:30.749372      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:31.750567      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:32.751151      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:33.751976      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:34.751995      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:35.752370      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:36.753175      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/14/24 04:31:36.838
  May 14 04:31:36.838: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=crd-publish-openapi-8227 --namespace=crd-publish-openapi-8227 create -f -'
  May 14 04:31:37.746: INFO: stderr: ""
  May 14 04:31:37.746: INFO: stdout: "e2e-test-crd-publish-openapi-1499-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  May 14 04:31:37.746: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=crd-publish-openapi-8227 --namespace=crd-publish-openapi-8227 delete e2e-test-crd-publish-openapi-1499-crds test-cr'
  E0514 04:31:37.754171      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:31:37.831: INFO: stderr: ""
  May 14 04:31:37.831: INFO: stdout: "e2e-test-crd-publish-openapi-1499-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  May 14 04:31:37.831: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=crd-publish-openapi-8227 --namespace=crd-publish-openapi-8227 apply -f -'
  E0514 04:31:38.754744      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:31:39.117: INFO: stderr: ""
  May 14 04:31:39.117: INFO: stdout: "e2e-test-crd-publish-openapi-1499-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  May 14 04:31:39.117: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=crd-publish-openapi-8227 --namespace=crd-publish-openapi-8227 delete e2e-test-crd-publish-openapi-1499-crds test-cr'
  May 14 04:31:39.185: INFO: stderr: ""
  May 14 04:31:39.185: INFO: stdout: "e2e-test-crd-publish-openapi-1499-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 05/14/24 04:31:39.185
  May 14 04:31:39.185: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=crd-publish-openapi-8227 explain e2e-test-crd-publish-openapi-1499-crds'
  E0514 04:31:39.755276      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:31:40.167: INFO: stderr: ""
  May 14 04:31:40.167: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-1499-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0514 04:31:40.755615      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:41.755885      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:42.756739      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:31:43.064: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8227" for this suite. @ 05/14/24 04:31:43.075
• [14.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 05/14/24 04:31:43.089
  May 14 04:31:43.089: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename tables @ 05/14/24 04:31:43.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:31:43.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:31:43.206
  May 14 04:31:43.211: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-6142" for this suite. @ 05/14/24 04:31:43.279
• [0.325 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 05/14/24 04:31:43.414
  May 14 04:31:43.414: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename pods @ 05/14/24 04:31:43.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:31:43.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:31:43.482
  May 14 04:31:43.484: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: creating the pod @ 05/14/24 04:31:43.485
  STEP: submitting the pod to kubernetes @ 05/14/24 04:31:43.485
  E0514 04:31:43.757208      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:44.757664      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:31:45.557: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2121" for this suite. @ 05/14/24 04:31:45.562
• [2.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 05/14/24 04:31:45.57
  May 14 04:31:45.570: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename init-container @ 05/14/24 04:31:45.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:31:45.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:31:45.598
  STEP: creating the pod @ 05/14/24 04:31:45.6
  May 14 04:31:45.601: INFO: PodSpec: initContainers in spec.initContainers
  E0514 04:31:45.757772      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:46.758160      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:47.759363      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:48.760134      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:49.760568      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:31:50.645: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5078" for this suite. @ 05/14/24 04:31:50.653
• [5.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 05/14/24 04:31:50.689
  May 14 04:31:50.689: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/14/24 04:31:50.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:31:50.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:31:50.738
  STEP: creating a target pod @ 05/14/24 04:31:50.74
  E0514 04:31:50.761206      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:51.761766      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:52.762103      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 05/14/24 04:31:52.768
  E0514 04:31:53.762849      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:54.763350      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 05/14/24 04:31:54.795
  May 14 04:31:54.795: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-1936 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 04:31:54.795: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 04:31:54.796: INFO: ExecWithOptions: Clientset creation
  May 14 04:31:54.796: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-1936/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  May 14 04:31:54.851: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 05/14/24 04:31:54.864
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 05/14/24 04:31:54.869
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 05/14/24 04:31:54.883
  May 14 04:31:54.886: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-1936" for this suite. @ 05/14/24 04:31:54.891
• [4.210 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance]
test/e2e/apps/job.go:642
  STEP: Creating a kubernetes client @ 05/14/24 04:31:54.9
  May 14 04:31:54.900: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename job @ 05/14/24 04:31:54.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:31:54.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:31:54.933
  STEP: Creating a job @ 05/14/24 04:31:54.935
  STEP: Ensure pods equal to parallelism count is attached to the job @ 05/14/24 04:31:54.944
  E0514 04:31:55.764194      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:56.764351      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 05/14/24 04:31:56.952
  STEP: updating /status @ 05/14/24 04:31:56.967
  STEP: get /status @ 05/14/24 04:31:56.976
  May 14 04:31:56.979: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8636" for this suite. @ 05/14/24 04:31:56.985
• [2.093 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 05/14/24 04:31:56.993
  May 14 04:31:56.993: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename configmap @ 05/14/24 04:31:56.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:31:57.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:31:57.026
  STEP: Creating configMap with name configmap-test-volume-73a7fa8c-e995-49ef-bfba-27ee72c970ba @ 05/14/24 04:31:57.028
  STEP: Creating a pod to test consume configMaps @ 05/14/24 04:31:57.033
  E0514 04:31:57.765274      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:58.765854      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:31:59.766529      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:00.767221      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:32:01.061
  May 14 04:32:01.064: INFO: Trying to get logs from node viola-paas-worker03 pod pod-configmaps-41042ec7-eac2-469c-bcf0-a3988ff82d03 container agnhost-container: <nil>
  STEP: delete the pod @ 05/14/24 04:32:01.07
  May 14 04:32:01.088: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2568" for this suite. @ 05/14/24 04:32:01.093
• [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]
test/e2e/apimachinery/resource_quota.go:232
  STEP: Creating a kubernetes client @ 05/14/24 04:32:01.103
  May 14 04:32:01.103: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename resourcequota @ 05/14/24 04:32:01.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:32:01.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:32:01.129
  STEP: Counting existing ResourceQuota @ 05/14/24 04:32:01.131
  E0514 04:32:01.768183      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:02.768671      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:03.769253      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:04.769471      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:05.769876      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/14/24 04:32:06.135
  STEP: Ensuring resource quota status is calculated @ 05/14/24 04:32:06.143
  E0514 04:32:06.770165      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:07.770699      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 05/14/24 04:32:08.149
  STEP: Ensuring ResourceQuota status captures the pod usage @ 05/14/24 04:32:08.173
  E0514 04:32:08.770896      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:09.771088      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 05/14/24 04:32:10.18
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 05/14/24 04:32:10.183
  STEP: Ensuring a pod cannot update its resource requirements @ 05/14/24 04:32:10.187
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 05/14/24 04:32:10.191
  E0514 04:32:10.771734      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:11.772106      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/14/24 04:32:12.198
  STEP: Ensuring resource quota status released the pod usage @ 05/14/24 04:32:12.253
  E0514 04:32:12.772128      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:13.772493      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:32:14.257: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4476" for this suite. @ 05/14/24 04:32:14.261
• [13.171 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 05/14/24 04:32:14.274
  May 14 04:32:14.274: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename downward-api @ 05/14/24 04:32:14.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:32:14.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:32:14.308
  STEP: Creating a pod to test downward API volume plugin @ 05/14/24 04:32:14.311
  E0514 04:32:14.772675      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:15.773612      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:16.773991      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:17.774317      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:32:18.336
  May 14 04:32:18.340: INFO: Trying to get logs from node viola-paas-worker03 pod downwardapi-volume-2a2d1b26-cb53-4953-b8f6-903135d38eca container client-container: <nil>
  STEP: delete the pod @ 05/14/24 04:32:18.346
  May 14 04:32:18.367: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7013" for this suite. @ 05/14/24 04:32:18.375
• [4.110 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 05/14/24 04:32:18.384
  May 14 04:32:18.384: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename secrets @ 05/14/24 04:32:18.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:32:18.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:32:18.41
  STEP: Creating secret with name secret-test-map-d7d6bf84-a1c1-4b44-8fe7-489e603504a9 @ 05/14/24 04:32:18.413
  STEP: Creating a pod to test consume secrets @ 05/14/24 04:32:18.42
  E0514 04:32:18.775164      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:19.775596      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:20.775660      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:21.776018      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:32:22.446
  May 14 04:32:22.449: INFO: Trying to get logs from node viola-paas-worker03 pod pod-secrets-ced54455-81c5-44c0-b037-85e8540ca7de container secret-volume-test: <nil>
  STEP: delete the pod @ 05/14/24 04:32:22.454
  May 14 04:32:22.478: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4436" for this suite. @ 05/14/24 04:32:22.484
• [4.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 05/14/24 04:32:22.492
  May 14 04:32:22.492: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename webhook @ 05/14/24 04:32:22.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:32:22.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:32:22.544
  STEP: Setting up server cert @ 05/14/24 04:32:22.592
  E0514 04:32:22.776911      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/14/24 04:32:22.88
  STEP: Deploying the webhook pod @ 05/14/24 04:32:22.894
  STEP: Wait for the deployment to be ready @ 05/14/24 04:32:22.914
  May 14 04:32:22.920: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0514 04:32:23.777009      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:24.777477      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/14/24 04:32:24.937
  STEP: Verifying the service has paired with the endpoint @ 05/14/24 04:32:24.951
  E0514 04:32:25.778401      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:32:25.952: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/14/24 04:32:25.962
  STEP: create a pod @ 05/14/24 04:32:25.985
  E0514 04:32:26.778491      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:27.778908      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 05/14/24 04:32:28.002
  May 14 04:32:28.003: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=webhook-5516 attach --namespace=webhook-5516 to-be-attached-pod -i -c=container1'
  May 14 04:32:28.078: INFO: rc: 1
  May 14 04:32:28.079: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5516" for this suite. @ 05/14/24 04:32:28.157
  STEP: Destroying namespace "webhook-markers-7494" for this suite. @ 05/14/24 04:32:28.166
• [5.690 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 05/14/24 04:32:28.183
  May 14 04:32:28.183: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename container-runtime @ 05/14/24 04:32:28.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:32:28.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:32:28.219
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 05/14/24 04:32:28.239
  E0514 04:32:28.779175      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:29.779743      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:30.780257      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:31.780666      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:32.781018      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:33.781753      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:34.781938      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:35.782226      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:36.783269      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:37.783738      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:38.783791      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:39.784529      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:40.785610      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:41.786643      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:42.786778      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 05/14/24 04:32:43.366
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 05/14/24 04:32:43.37
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 05/14/24 04:32:43.376
  STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] @ 05/14/24 04:32:43.376
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 05/14/24 04:32:43.412
  E0514 04:32:43.787483      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:44.788436      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:45.788501      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 05/14/24 04:32:46.432
  E0514 04:32:46.788777      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 05/14/24 04:32:47.44
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 05/14/24 04:32:47.448
  STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] @ 05/14/24 04:32:47.448
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 05/14/24 04:32:47.482
  E0514 04:32:47.790118      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 05/14/24 04:32:48.491
  E0514 04:32:48.790918      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:49.791577      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 05/14/24 04:32:50.505
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 05/14/24 04:32:50.512
  STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] @ 05/14/24 04:32:50.512
  May 14 04:32:50.539: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1015" for this suite. @ 05/14/24 04:32:50.554
• [22.378 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 05/14/24 04:32:50.562
  May 14 04:32:50.562: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename container-probe @ 05/14/24 04:32:50.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:32:50.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:32:50.594
  STEP: Creating pod liveness-923dbb29-4b05-4ed1-a70e-29f26171b7d7 in namespace container-probe-7787 @ 05/14/24 04:32:50.597
  E0514 04:32:50.792044      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:51.792694      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/14/24 04:32:52.621
  May 14 04:32:52.624: INFO: Initial restart count of pod liveness-923dbb29-4b05-4ed1-a70e-29f26171b7d7 is 0
  May 14 04:32:52.627: INFO: Get pod liveness-923dbb29-4b05-4ed1-a70e-29f26171b7d7 in namespace container-probe-7787
  E0514 04:32:52.793637      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:53.794169      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:32:54.632: INFO: Get pod liveness-923dbb29-4b05-4ed1-a70e-29f26171b7d7 in namespace container-probe-7787
  E0514 04:32:54.794168      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:55.795138      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:32:56.638: INFO: Get pod liveness-923dbb29-4b05-4ed1-a70e-29f26171b7d7 in namespace container-probe-7787
  E0514 04:32:56.795591      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:57.796031      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:32:58.644: INFO: Get pod liveness-923dbb29-4b05-4ed1-a70e-29f26171b7d7 in namespace container-probe-7787
  E0514 04:32:58.796234      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:32:59.796606      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:33:00.648: INFO: Get pod liveness-923dbb29-4b05-4ed1-a70e-29f26171b7d7 in namespace container-probe-7787
  E0514 04:33:00.797420      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:33:01.797849      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:33:02.655: INFO: Get pod liveness-923dbb29-4b05-4ed1-a70e-29f26171b7d7 in namespace container-probe-7787
  E0514 04:33:02.797894      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:33:03.798011      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:33:04.661: INFO: Get pod liveness-923dbb29-4b05-4ed1-a70e-29f26171b7d7 in namespace container-probe-7787
  E0514 04:33:04.798820      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:33:05.799865      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:33:06.668: INFO: Get pod liveness-923dbb29-4b05-4ed1-a70e-29f26171b7d7 in namespace container-probe-7787
  E0514 04:33:06.800708      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:33:07.801084      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:33:08.674: INFO: Get pod liveness-923dbb29-4b05-4ed1-a70e-29f26171b7d7 in namespace container-probe-7787
  E0514 04:33:08.801383      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:33:09.801707      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:33:10.680: INFO: Get pod liveness-923dbb29-4b05-4ed1-a70e-29f26171b7d7 in namespace container-probe-7787
  E0514 04:33:10.802597      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:33:11.802975      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:33:12.685: INFO: Get pod liveness-923dbb29-4b05-4ed1-a70e-29f26171b7d7 in namespace container-probe-7787
  May 14 04:33:12.685: INFO: Restart count of pod container-probe-7787/liveness-923dbb29-4b05-4ed1-a70e-29f26171b7d7 is now 1 (20.061562919s elapsed)
  May 14 04:33:12.685: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/14/24 04:33:12.692
  STEP: Destroying namespace "container-probe-7787" for this suite. @ 05/14/24 04:33:12.713
• [22.158 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance]
test/e2e/common/node/podtemplates.go:176
  STEP: Creating a kubernetes client @ 05/14/24 04:33:12.721
  May 14 04:33:12.721: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename podtemplate @ 05/14/24 04:33:12.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:33:12.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:33:12.751
  STEP: Create a pod template @ 05/14/24 04:33:12.754
  STEP: Replace a pod template @ 05/14/24 04:33:12.761
  May 14 04:33:12.773: INFO: Found updated podtemplate annotation: "true"

  May 14 04:33:12.773: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5175" for this suite. @ 05/14/24 04:33:12.778
• [0.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 05/14/24 04:33:12.786
  May 14 04:33:12.786: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename projected @ 05/14/24 04:33:12.787
  E0514 04:33:12.803587      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:33:12.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:33:12.814
  STEP: Creating the pod @ 05/14/24 04:33:12.816
  E0514 04:33:13.803940      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:33:14.804378      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:33:15.371: INFO: Successfully updated pod "annotationupdated5eb4250-2163-47b7-ba16-4d5193bc103a"
  E0514 04:33:15.805400      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:33:16.805596      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:33:17.386: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5118" for this suite. @ 05/14/24 04:33:17.392
• [4.613 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 05/14/24 04:33:17.399
  May 14 04:33:17.399: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename projected @ 05/14/24 04:33:17.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:33:17.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:33:17.427
  STEP: Creating the pod @ 05/14/24 04:33:17.43
  E0514 04:33:17.806128      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:33:18.806693      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:33:19.807408      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:33:19.984: INFO: Successfully updated pod "labelsupdate68e5e9d0-bfca-4989-b9b2-661e75a0028a"
  E0514 04:33:20.807476      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:33:21.807940      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:33:22.008: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7931" for this suite. @ 05/14/24 04:33:22.014
• [4.627 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 05/14/24 04:33:22.027
  May 14 04:33:22.027: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/14/24 04:33:22.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:33:22.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:33:22.072
  May 14 04:33:22.075: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  E0514 04:33:22.808603      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:33:23.809410      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:33:24.809664      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:33:25.810440      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:33:26.811177      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:33:27.811582      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:33:28.812616      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:33:29.813328      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 05/14/24 04:33:30.068
  May 14 04:33:30.068: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=crd-publish-openapi-1132 --namespace=crd-publish-openapi-1132 create -f -'
  E0514 04:33:30.814327      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:33:31.059: INFO: stderr: ""
  May 14 04:33:31.059: INFO: stdout: "e2e-test-crd-publish-openapi-4333-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  May 14 04:33:31.059: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=crd-publish-openapi-1132 --namespace=crd-publish-openapi-1132 delete e2e-test-crd-publish-openapi-4333-crds test-foo'
  May 14 04:33:31.126: INFO: stderr: ""
  May 14 04:33:31.126: INFO: stdout: "e2e-test-crd-publish-openapi-4333-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  May 14 04:33:31.126: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=crd-publish-openapi-1132 --namespace=crd-publish-openapi-1132 apply -f -'
  E0514 04:33:31.814495      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:33:31.895: INFO: stderr: ""
  May 14 04:33:31.895: INFO: stdout: "e2e-test-crd-publish-openapi-4333-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  May 14 04:33:31.895: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=crd-publish-openapi-1132 --namespace=crd-publish-openapi-1132 delete e2e-test-crd-publish-openapi-4333-crds test-foo'
  May 14 04:33:31.963: INFO: stderr: ""
  May 14 04:33:31.963: INFO: stdout: "e2e-test-crd-publish-openapi-4333-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 05/14/24 04:33:31.963
  May 14 04:33:31.964: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=crd-publish-openapi-1132 --namespace=crd-publish-openapi-1132 create -f -'
  May 14 04:33:32.184: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 05/14/24 04:33:32.184
  May 14 04:33:32.184: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=crd-publish-openapi-1132 --namespace=crd-publish-openapi-1132 create -f -'
  May 14 04:33:32.417: INFO: rc: 1
  May 14 04:33:32.417: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=crd-publish-openapi-1132 --namespace=crd-publish-openapi-1132 apply -f -'
  May 14 04:33:32.657: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 05/14/24 04:33:32.657
  May 14 04:33:32.657: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=crd-publish-openapi-1132 --namespace=crd-publish-openapi-1132 create -f -'
  E0514 04:33:32.814885      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:33:32.877: INFO: rc: 1
  May 14 04:33:32.878: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=crd-publish-openapi-1132 --namespace=crd-publish-openapi-1132 apply -f -'
  May 14 04:33:33.103: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 05/14/24 04:33:33.103
  May 14 04:33:33.103: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=crd-publish-openapi-1132 explain e2e-test-crd-publish-openapi-4333-crds'
  E0514 04:33:33.815323      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:33:34.069: INFO: stderr: ""
  May 14 04:33:34.069: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4333-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 05/14/24 04:33:34.07
  May 14 04:33:34.070: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=crd-publish-openapi-1132 explain e2e-test-crd-publish-openapi-4333-crds.metadata'
  May 14 04:33:34.314: INFO: stderr: ""
  May 14 04:33:34.314: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4333-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  May 14 04:33:34.314: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=crd-publish-openapi-1132 explain e2e-test-crd-publish-openapi-4333-crds.spec'
  May 14 04:33:34.563: INFO: stderr: ""
  May 14 04:33:34.563: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4333-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  May 14 04:33:34.563: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=crd-publish-openapi-1132 explain e2e-test-crd-publish-openapi-4333-crds.spec.bars'
  May 14 04:33:34.808: INFO: stderr: ""
  May 14 04:33:34.808: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4333-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 05/14/24 04:33:34.808
  May 14 04:33:34.808: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=crd-publish-openapi-1132 explain e2e-test-crd-publish-openapi-4333-crds.spec.bars2'
  E0514 04:33:34.816204      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:33:35.049: INFO: rc: 1
  E0514 04:33:35.817034      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:33:36.817948      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:33:37.818329      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:33:37.841: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1132" for this suite. @ 05/14/24 04:33:37.852
• [15.840 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high  [Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 05/14/24 04:33:37.867
  May 14 04:33:37.867: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename svc-latency @ 05/14/24 04:33:37.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:33:37.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:33:37.898
  May 14 04:33:37.901: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-3608 @ 05/14/24 04:33:37.902
  I0514 04:33:37.909742      23 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-3608, replica count: 1
  E0514 04:33:38.818617      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0514 04:33:38.960920      23 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 14 04:33:39.078: INFO: Created: latency-svc-42h9f
  May 14 04:33:39.092: INFO: Got endpoints: latency-svc-42h9f [30.603547ms]
  May 14 04:33:39.108: INFO: Created: latency-svc-hxd7x
  May 14 04:33:39.126: INFO: Created: latency-svc-rbh8p
  May 14 04:33:39.132: INFO: Got endpoints: latency-svc-hxd7x [39.742914ms]
  May 14 04:33:39.140: INFO: Created: latency-svc-mskb5
  May 14 04:33:39.140: INFO: Got endpoints: latency-svc-rbh8p [48.039563ms]
  May 14 04:33:39.150: INFO: Got endpoints: latency-svc-mskb5 [57.342046ms]
  May 14 04:33:39.156: INFO: Created: latency-svc-gcj2l
  May 14 04:33:39.170: INFO: Got endpoints: latency-svc-gcj2l [76.903975ms]
  May 14 04:33:39.175: INFO: Created: latency-svc-npbb2
  May 14 04:33:39.184: INFO: Created: latency-svc-qqgvm
  May 14 04:33:39.191: INFO: Got endpoints: latency-svc-npbb2 [98.684792ms]
  May 14 04:33:39.193: INFO: Created: latency-svc-gm8g2
  May 14 04:33:39.194: INFO: Got endpoints: latency-svc-qqgvm [101.067513ms]
  May 14 04:33:39.209: INFO: Got endpoints: latency-svc-gm8g2 [116.857213ms]
  May 14 04:33:39.217: INFO: Created: latency-svc-xmftg
  May 14 04:33:39.230: INFO: Created: latency-svc-gcm5k
  May 14 04:33:39.245: INFO: Got endpoints: latency-svc-gcm5k [151.995322ms]
  May 14 04:33:39.245: INFO: Got endpoints: latency-svc-xmftg [152.099665ms]
  May 14 04:33:39.247: INFO: Created: latency-svc-lbvmt
  May 14 04:33:39.270: INFO: Got endpoints: latency-svc-lbvmt [177.086292ms]
  May 14 04:33:39.270: INFO: Created: latency-svc-87626
  May 14 04:33:39.274: INFO: Created: latency-svc-nsrbx
  May 14 04:33:39.282: INFO: Got endpoints: latency-svc-nsrbx [189.241946ms]
  May 14 04:33:39.291: INFO: Got endpoints: latency-svc-87626 [198.630933ms]
  May 14 04:33:39.292: INFO: Created: latency-svc-z6sh7
  May 14 04:33:39.309: INFO: Got endpoints: latency-svc-z6sh7 [216.182944ms]
  May 14 04:33:39.313: INFO: Created: latency-svc-c2g22
  May 14 04:33:39.330: INFO: Got endpoints: latency-svc-c2g22 [237.286469ms]
  May 14 04:33:39.334: INFO: Created: latency-svc-sfp29
  May 14 04:33:39.343: INFO: Got endpoints: latency-svc-sfp29 [250.297707ms]
  May 14 04:33:39.346: INFO: Created: latency-svc-rs8rs
  May 14 04:33:39.359: INFO: Got endpoints: latency-svc-rs8rs [226.129043ms]
  May 14 04:33:39.362: INFO: Created: latency-svc-c98nr
  May 14 04:33:39.371: INFO: Got endpoints: latency-svc-c98nr [230.634295ms]
  May 14 04:33:39.387: INFO: Created: latency-svc-ndft5
  May 14 04:33:39.397: INFO: Got endpoints: latency-svc-ndft5 [246.81902ms]
  May 14 04:33:39.397: INFO: Created: latency-svc-7xhqf
  May 14 04:33:39.412: INFO: Got endpoints: latency-svc-7xhqf [242.031416ms]
  May 14 04:33:39.413: INFO: Created: latency-svc-7sn7c
  May 14 04:33:39.428: INFO: Got endpoints: latency-svc-7sn7c [236.129255ms]
  May 14 04:33:39.430: INFO: Created: latency-svc-qqdhc
  May 14 04:33:39.452: INFO: Got endpoints: latency-svc-qqdhc [258.219352ms]
  May 14 04:33:39.453: INFO: Created: latency-svc-6rpps
  May 14 04:33:39.584: INFO: Got endpoints: latency-svc-6rpps [374.947618ms]
  May 14 04:33:39.601: INFO: Created: latency-svc-nrf6s
  May 14 04:33:39.620: INFO: Got endpoints: latency-svc-nrf6s [375.022647ms]
  May 14 04:33:39.620: INFO: Created: latency-svc-w8ds4
  May 14 04:33:39.637: INFO: Got endpoints: latency-svc-w8ds4 [392.267175ms]
  May 14 04:33:39.639: INFO: Created: latency-svc-p5qzl
  May 14 04:33:39.678: INFO: Created: latency-svc-682p7
  May 14 04:33:39.683: INFO: Got endpoints: latency-svc-p5qzl [412.559933ms]
  May 14 04:33:39.699: INFO: Created: latency-svc-jgvcd
  May 14 04:33:39.699: INFO: Got endpoints: latency-svc-682p7 [417.294516ms]
  May 14 04:33:39.702: INFO: Created: latency-svc-9pgvg
  May 14 04:33:39.712: INFO: Got endpoints: latency-svc-jgvcd [420.391142ms]
  May 14 04:33:39.722: INFO: Got endpoints: latency-svc-9pgvg [412.756734ms]
  May 14 04:33:39.726: INFO: Created: latency-svc-2csvn
  May 14 04:33:39.743: INFO: Got endpoints: latency-svc-2csvn [412.460235ms]
  May 14 04:33:39.750: INFO: Created: latency-svc-vpnzg
  May 14 04:33:39.757: INFO: Created: latency-svc-hqdc2
  May 14 04:33:39.762: INFO: Got endpoints: latency-svc-vpnzg [418.989537ms]
  May 14 04:33:39.778: INFO: Got endpoints: latency-svc-hqdc2 [419.837689ms]
  May 14 04:33:39.786: INFO: Created: latency-svc-6krrf
  May 14 04:33:39.804: INFO: Got endpoints: latency-svc-6krrf [433.161528ms]
  May 14 04:33:39.807: INFO: Created: latency-svc-p6qvg
  E0514 04:33:39.819217      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:33:39.822: INFO: Got endpoints: latency-svc-p6qvg [425.649952ms]
  May 14 04:33:39.826: INFO: Created: latency-svc-5gw8k
  May 14 04:33:39.848: INFO: Got endpoints: latency-svc-5gw8k [435.879254ms]
  May 14 04:33:39.849: INFO: Created: latency-svc-v5v4h
  May 14 04:33:39.865: INFO: Got endpoints: latency-svc-v5v4h [437.757455ms]
  May 14 04:33:39.876: INFO: Created: latency-svc-6hnqh
  May 14 04:33:39.889: INFO: Got endpoints: latency-svc-6hnqh [437.135459ms]
  May 14 04:33:39.889: INFO: Created: latency-svc-k2fzh
  May 14 04:33:39.914: INFO: Created: latency-svc-brn98
  May 14 04:33:39.914: INFO: Got endpoints: latency-svc-k2fzh [329.829932ms]
  May 14 04:33:39.929: INFO: Created: latency-svc-nhzxk
  May 14 04:33:39.934: INFO: Got endpoints: latency-svc-brn98 [313.579067ms]
  May 14 04:33:39.938: INFO: Created: latency-svc-skrms
  May 14 04:33:39.940: INFO: Got endpoints: latency-svc-nhzxk [302.836466ms]
  May 14 04:33:39.954: INFO: Got endpoints: latency-svc-skrms [270.994493ms]
  May 14 04:33:39.956: INFO: Created: latency-svc-x9d6f
  May 14 04:33:39.973: INFO: Created: latency-svc-96x5z
  May 14 04:33:39.975: INFO: Got endpoints: latency-svc-x9d6f [275.208736ms]
  May 14 04:33:39.988: INFO: Got endpoints: latency-svc-96x5z [275.77066ms]
  May 14 04:33:39.988: INFO: Created: latency-svc-jhbbz
  May 14 04:33:39.999: INFO: Got endpoints: latency-svc-jhbbz [277.412318ms]
  May 14 04:33:40.003: INFO: Created: latency-svc-m9g8b
  May 14 04:33:40.021: INFO: Got endpoints: latency-svc-m9g8b [277.992822ms]
  May 14 04:33:40.025: INFO: Created: latency-svc-lhfdk
  May 14 04:33:40.039: INFO: Created: latency-svc-q6crd
  May 14 04:33:40.040: INFO: Got endpoints: latency-svc-lhfdk [278.252374ms]
  May 14 04:33:40.052: INFO: Got endpoints: latency-svc-q6crd [273.680716ms]
  May 14 04:33:40.055: INFO: Created: latency-svc-wtb9f
  May 14 04:33:40.066: INFO: Got endpoints: latency-svc-wtb9f [261.622365ms]
  May 14 04:33:40.070: INFO: Created: latency-svc-r78b4
  May 14 04:33:40.083: INFO: Got endpoints: latency-svc-r78b4 [260.87139ms]
  May 14 04:33:40.084: INFO: Created: latency-svc-bzfgf
  May 14 04:33:40.091: INFO: Got endpoints: latency-svc-bzfgf [243.803901ms]
  May 14 04:33:40.112: INFO: Created: latency-svc-hczd8
  May 14 04:33:40.128: INFO: Created: latency-svc-fljwv
  May 14 04:33:40.136: INFO: Created: latency-svc-wr6b8
  May 14 04:33:40.136: INFO: Got endpoints: latency-svc-hczd8 [270.622838ms]
  May 14 04:33:40.156: INFO: Created: latency-svc-jc2r8
  May 14 04:33:40.179: INFO: Created: latency-svc-kt6g7
  May 14 04:33:40.191: INFO: Got endpoints: latency-svc-fljwv [301.454951ms]
  May 14 04:33:40.193: INFO: Created: latency-svc-fqppz
  May 14 04:33:40.212: INFO: Created: latency-svc-z6cgl
  May 14 04:33:40.222: INFO: Created: latency-svc-d5djv
  May 14 04:33:40.238: INFO: Created: latency-svc-vkhz5
  May 14 04:33:40.250: INFO: Got endpoints: latency-svc-wr6b8 [336.095272ms]
  May 14 04:33:40.253: INFO: Created: latency-svc-hz7fz
  May 14 04:33:40.265: INFO: Created: latency-svc-cqnpm
  May 14 04:33:40.271: INFO: Created: latency-svc-dm8gl
  May 14 04:33:40.283: INFO: Created: latency-svc-vxtfs
  May 14 04:33:40.295: INFO: Got endpoints: latency-svc-jc2r8 [361.432857ms]
  May 14 04:33:40.307: INFO: Created: latency-svc-kvpq6
  May 14 04:33:40.308: INFO: Created: latency-svc-hc88v
  May 14 04:33:40.336: INFO: Created: latency-svc-6cx27
  May 14 04:33:40.346: INFO: Got endpoints: latency-svc-kt6g7 [406.092566ms]
  May 14 04:33:40.353: INFO: Created: latency-svc-m556d
  May 14 04:33:40.372: INFO: Created: latency-svc-dxqtm
  May 14 04:33:40.404: INFO: Created: latency-svc-drltd
  May 14 04:33:40.405: INFO: Got endpoints: latency-svc-fqppz [451.537165ms]
  May 14 04:33:40.414: INFO: Created: latency-svc-6nzmf
  May 14 04:33:40.421: INFO: Created: latency-svc-wrmvj
  May 14 04:33:40.446: INFO: Got endpoints: latency-svc-z6cgl [471.400814ms]
  May 14 04:33:40.467: INFO: Created: latency-svc-djrht
  May 14 04:33:40.489: INFO: Got endpoints: latency-svc-d5djv [501.80498ms]
  May 14 04:33:40.529: INFO: Created: latency-svc-4pslf
  May 14 04:33:40.546: INFO: Got endpoints: latency-svc-vkhz5 [547.086278ms]
  May 14 04:33:40.569: INFO: Created: latency-svc-4tnls
  May 14 04:33:40.589: INFO: Got endpoints: latency-svc-hz7fz [568.365846ms]
  May 14 04:33:40.609: INFO: Created: latency-svc-m5hmz
  May 14 04:33:40.636: INFO: Got endpoints: latency-svc-cqnpm [596.126454ms]
  May 14 04:33:40.672: INFO: Created: latency-svc-jtppm
  May 14 04:33:40.693: INFO: Got endpoints: latency-svc-dm8gl [640.46442ms]
  May 14 04:33:40.709: INFO: Created: latency-svc-2m2vj
  May 14 04:33:40.740: INFO: Got endpoints: latency-svc-vxtfs [673.367289ms]
  May 14 04:33:40.758: INFO: Created: latency-svc-w4vnf
  May 14 04:33:40.790: INFO: Got endpoints: latency-svc-kvpq6 [707.137344ms]
  May 14 04:33:40.806: INFO: Created: latency-svc-l8m7n
  E0514 04:33:40.819798      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:33:40.843: INFO: Got endpoints: latency-svc-hc88v [751.5077ms]
  May 14 04:33:40.863: INFO: Created: latency-svc-wdzvd
  May 14 04:33:40.888: INFO: Got endpoints: latency-svc-6cx27 [751.491748ms]
  May 14 04:33:40.906: INFO: Created: latency-svc-k65pg
  May 14 04:33:40.944: INFO: Got endpoints: latency-svc-m556d [753.038987ms]
  May 14 04:33:40.964: INFO: Created: latency-svc-pr9p4
  May 14 04:33:40.998: INFO: Got endpoints: latency-svc-dxqtm [748.011428ms]
  May 14 04:33:41.011: INFO: Created: latency-svc-zlrw8
  May 14 04:33:41.047: INFO: Got endpoints: latency-svc-drltd [751.975269ms]
  May 14 04:33:41.094: INFO: Got endpoints: latency-svc-6nzmf [747.737509ms]
  May 14 04:33:41.142: INFO: Got endpoints: latency-svc-wrmvj [737.169761ms]
  May 14 04:33:41.197: INFO: Got endpoints: latency-svc-djrht [750.401744ms]
  May 14 04:33:41.457: INFO: Got endpoints: latency-svc-4pslf [967.604063ms]
  May 14 04:33:41.472: INFO: Got endpoints: latency-svc-jtppm [835.864584ms]
  May 14 04:33:41.474: INFO: Got endpoints: latency-svc-m5hmz [884.990746ms]
  May 14 04:33:41.474: INFO: Got endpoints: latency-svc-2m2vj [781.221184ms]
  May 14 04:33:41.474: INFO: Got endpoints: latency-svc-4tnls [927.961018ms]
  May 14 04:33:41.489: INFO: Got endpoints: latency-svc-w4vnf [749.513352ms]
  May 14 04:33:41.524: INFO: Created: latency-svc-gb7dh
  May 14 04:33:41.539: INFO: Created: latency-svc-5xkxh
  May 14 04:33:41.547: INFO: Got endpoints: latency-svc-l8m7n [756.635511ms]
  May 14 04:33:41.551: INFO: Created: latency-svc-p4z6c
  May 14 04:33:41.561: INFO: Created: latency-svc-zplfj
  May 14 04:33:41.573: INFO: Created: latency-svc-xmhbt
  May 14 04:33:41.591: INFO: Got endpoints: latency-svc-wdzvd [748.132427ms]
  May 14 04:33:41.593: INFO: Created: latency-svc-f75vf
  May 14 04:33:41.603: INFO: Created: latency-svc-tsrb8
  May 14 04:33:41.614: INFO: Created: latency-svc-qgx6d
  May 14 04:33:41.626: INFO: Created: latency-svc-sb2j9
  May 14 04:33:41.643: INFO: Got endpoints: latency-svc-k65pg [755.259706ms]
  May 14 04:33:41.656: INFO: Created: latency-svc-fshfl
  May 14 04:33:41.659: INFO: Created: latency-svc-jd697
  May 14 04:33:41.675: INFO: Created: latency-svc-gz24h
  May 14 04:33:41.690: INFO: Got endpoints: latency-svc-pr9p4 [746.158361ms]
  May 14 04:33:41.708: INFO: Created: latency-svc-bvxvx
  May 14 04:33:41.720: INFO: Created: latency-svc-tmcsg
  May 14 04:33:41.750: INFO: Got endpoints: latency-svc-zlrw8 [751.37238ms]
  May 14 04:33:41.768: INFO: Created: latency-svc-8jfpb
  May 14 04:33:41.790: INFO: Got endpoints: latency-svc-gb7dh [742.846305ms]
  May 14 04:33:41.814: INFO: Created: latency-svc-sdddr
  E0514 04:33:41.820599      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:33:41.840: INFO: Got endpoints: latency-svc-5xkxh [746.064364ms]
  May 14 04:33:41.863: INFO: Created: latency-svc-fzm4q
  May 14 04:33:41.895: INFO: Got endpoints: latency-svc-p4z6c [752.818495ms]
  May 14 04:33:41.906: INFO: Created: latency-svc-g8kb7
  May 14 04:33:41.936: INFO: Got endpoints: latency-svc-zplfj [739.070635ms]
  May 14 04:33:41.955: INFO: Created: latency-svc-9pszv
  May 14 04:33:41.995: INFO: Got endpoints: latency-svc-xmhbt [538.081349ms]
  May 14 04:33:42.012: INFO: Created: latency-svc-4lthv
  May 14 04:33:42.048: INFO: Got endpoints: latency-svc-f75vf [575.153033ms]
  May 14 04:33:42.070: INFO: Created: latency-svc-qcjgm
  May 14 04:33:42.088: INFO: Got endpoints: latency-svc-tsrb8 [613.709449ms]
  May 14 04:33:42.111: INFO: Created: latency-svc-p9tzp
  May 14 04:33:42.140: INFO: Got endpoints: latency-svc-qgx6d [665.65111ms]
  May 14 04:33:42.158: INFO: Created: latency-svc-rs9n5
  May 14 04:33:42.193: INFO: Got endpoints: latency-svc-sb2j9 [718.906407ms]
  May 14 04:33:42.208: INFO: Created: latency-svc-h28vv
  May 14 04:33:42.247: INFO: Got endpoints: latency-svc-fshfl [757.544833ms]
  May 14 04:33:42.320: INFO: Created: latency-svc-bh6tj
  May 14 04:33:42.384: INFO: Got endpoints: latency-svc-jd697 [837.254953ms]
  May 14 04:33:42.429: INFO: Got endpoints: latency-svc-bvxvx [785.669842ms]
  May 14 04:33:42.429: INFO: Got endpoints: latency-svc-gz24h [837.423429ms]
  May 14 04:33:42.451: INFO: Created: latency-svc-tqlrk
  May 14 04:33:42.452: INFO: Got endpoints: latency-svc-tmcsg [762.509774ms]
  May 14 04:33:42.465: INFO: Created: latency-svc-sszl6
  May 14 04:33:42.483: INFO: Created: latency-svc-rn2d5
  May 14 04:33:42.492: INFO: Got endpoints: latency-svc-8jfpb [741.388369ms]
  May 14 04:33:42.496: INFO: Created: latency-svc-kpx4j
  May 14 04:33:42.506: INFO: Created: latency-svc-z57hj
  May 14 04:33:42.543: INFO: Got endpoints: latency-svc-sdddr [752.813092ms]
  May 14 04:33:42.574: INFO: Created: latency-svc-pscpj
  May 14 04:33:42.588: INFO: Got endpoints: latency-svc-fzm4q [747.78076ms]
  May 14 04:33:42.605: INFO: Created: latency-svc-8l7bl
  May 14 04:33:42.643: INFO: Got endpoints: latency-svc-g8kb7 [747.46082ms]
  May 14 04:33:42.654: INFO: Created: latency-svc-d2dtr
  May 14 04:33:42.694: INFO: Got endpoints: latency-svc-9pszv [758.5827ms]
  May 14 04:33:42.717: INFO: Created: latency-svc-8dwpv
  May 14 04:33:42.742: INFO: Got endpoints: latency-svc-4lthv [746.812514ms]
  May 14 04:33:42.762: INFO: Created: latency-svc-vf28q
  May 14 04:33:42.793: INFO: Got endpoints: latency-svc-qcjgm [745.604655ms]
  May 14 04:33:42.807: INFO: Created: latency-svc-99nnd
  E0514 04:33:42.821754      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:33:42.843: INFO: Got endpoints: latency-svc-p9tzp [755.216609ms]
  May 14 04:33:42.878: INFO: Created: latency-svc-fvg6s
  May 14 04:33:42.890: INFO: Got endpoints: latency-svc-rs9n5 [749.844025ms]
  May 14 04:33:42.910: INFO: Created: latency-svc-ldg8w
  May 14 04:33:42.943: INFO: Got endpoints: latency-svc-h28vv [749.918921ms]
  May 14 04:33:42.988: INFO: Got endpoints: latency-svc-bh6tj [741.745004ms]
  May 14 04:33:43.003: INFO: Created: latency-svc-fr7l7
  May 14 04:33:43.019: INFO: Created: latency-svc-d28wb
  May 14 04:33:43.040: INFO: Got endpoints: latency-svc-tqlrk [655.447754ms]
  May 14 04:33:43.059: INFO: Created: latency-svc-rm5ps
  May 14 04:33:43.100: INFO: Got endpoints: latency-svc-sszl6 [671.110138ms]
  May 14 04:33:43.116: INFO: Created: latency-svc-llpxp
  May 14 04:33:43.144: INFO: Got endpoints: latency-svc-rn2d5 [714.995127ms]
  May 14 04:33:43.164: INFO: Created: latency-svc-xg7lt
  May 14 04:33:43.188: INFO: Got endpoints: latency-svc-kpx4j [735.982296ms]
  May 14 04:33:43.213: INFO: Created: latency-svc-plwqb
  May 14 04:33:43.244: INFO: Got endpoints: latency-svc-z57hj [752.069025ms]
  May 14 04:33:43.265: INFO: Created: latency-svc-hrjf9
  May 14 04:33:43.297: INFO: Got endpoints: latency-svc-pscpj [753.599882ms]
  May 14 04:33:43.318: INFO: Created: latency-svc-qrjwp
  May 14 04:33:43.340: INFO: Got endpoints: latency-svc-8l7bl [752.022343ms]
  May 14 04:33:43.359: INFO: Created: latency-svc-7648z
  May 14 04:33:43.395: INFO: Got endpoints: latency-svc-d2dtr [752.359352ms]
  May 14 04:33:43.407: INFO: Created: latency-svc-28l2n
  May 14 04:33:43.440: INFO: Got endpoints: latency-svc-8dwpv [745.848223ms]
  May 14 04:33:43.460: INFO: Created: latency-svc-z7qdd
  May 14 04:33:43.490: INFO: Got endpoints: latency-svc-vf28q [748.19473ms]
  May 14 04:33:43.514: INFO: Created: latency-svc-s4xqh
  May 14 04:33:43.540: INFO: Got endpoints: latency-svc-99nnd [746.903832ms]
  May 14 04:33:43.556: INFO: Created: latency-svc-2x988
  May 14 04:33:43.591: INFO: Got endpoints: latency-svc-fvg6s [748.290366ms]
  May 14 04:33:43.616: INFO: Created: latency-svc-p89kp
  May 14 04:33:43.636: INFO: Got endpoints: latency-svc-ldg8w [746.463317ms]
  May 14 04:33:43.665: INFO: Created: latency-svc-njcld
  May 14 04:33:43.688: INFO: Got endpoints: latency-svc-fr7l7 [744.714705ms]
  May 14 04:33:43.706: INFO: Created: latency-svc-wl78w
  May 14 04:33:43.743: INFO: Got endpoints: latency-svc-d28wb [754.398097ms]
  May 14 04:33:43.761: INFO: Created: latency-svc-gf8fc
  May 14 04:33:43.794: INFO: Got endpoints: latency-svc-rm5ps [753.735236ms]
  May 14 04:33:43.814: INFO: Created: latency-svc-hq7p5
  E0514 04:33:43.822437      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:33:43.842: INFO: Got endpoints: latency-svc-llpxp [741.658638ms]
  May 14 04:33:43.866: INFO: Created: latency-svc-jz2nx
  May 14 04:33:43.892: INFO: Got endpoints: latency-svc-xg7lt [748.245601ms]
  May 14 04:33:43.908: INFO: Created: latency-svc-2g684
  May 14 04:33:43.943: INFO: Got endpoints: latency-svc-plwqb [754.86655ms]
  May 14 04:33:43.960: INFO: Created: latency-svc-scv8x
  May 14 04:33:43.988: INFO: Got endpoints: latency-svc-hrjf9 [743.90772ms]
  May 14 04:33:44.004: INFO: Created: latency-svc-qlhqw
  May 14 04:33:44.041: INFO: Got endpoints: latency-svc-qrjwp [744.701766ms]
  May 14 04:33:44.058: INFO: Created: latency-svc-46hcm
  May 14 04:33:44.093: INFO: Got endpoints: latency-svc-7648z [753.12351ms]
  May 14 04:33:44.118: INFO: Created: latency-svc-qm9kn
  May 14 04:33:44.139: INFO: Got endpoints: latency-svc-28l2n [744.159557ms]
  May 14 04:33:44.160: INFO: Created: latency-svc-4gw7n
  May 14 04:33:44.193: INFO: Got endpoints: latency-svc-z7qdd [752.296042ms]
  May 14 04:33:44.207: INFO: Created: latency-svc-njw5d
  May 14 04:33:44.241: INFO: Got endpoints: latency-svc-s4xqh [750.62922ms]
  May 14 04:33:44.262: INFO: Created: latency-svc-ktqdq
  May 14 04:33:44.293: INFO: Got endpoints: latency-svc-2x988 [752.27822ms]
  May 14 04:33:44.310: INFO: Created: latency-svc-xptdd
  May 14 04:33:44.336: INFO: Got endpoints: latency-svc-p89kp [744.327746ms]
  May 14 04:33:44.373: INFO: Created: latency-svc-fmn98
  May 14 04:33:44.391: INFO: Got endpoints: latency-svc-njcld [754.853247ms]
  May 14 04:33:44.407: INFO: Created: latency-svc-nq4x7
  May 14 04:33:44.444: INFO: Got endpoints: latency-svc-wl78w [756.513449ms]
  May 14 04:33:44.460: INFO: Created: latency-svc-hbcmn
  May 14 04:33:44.490: INFO: Got endpoints: latency-svc-gf8fc [746.718223ms]
  May 14 04:33:44.517: INFO: Created: latency-svc-jp45w
  May 14 04:33:44.539: INFO: Got endpoints: latency-svc-hq7p5 [744.64965ms]
  May 14 04:33:44.553: INFO: Created: latency-svc-6hbkd
  May 14 04:33:44.601: INFO: Got endpoints: latency-svc-jz2nx [759.352296ms]
  May 14 04:33:44.628: INFO: Created: latency-svc-frzgt
  May 14 04:33:44.643: INFO: Got endpoints: latency-svc-2g684 [751.327422ms]
  May 14 04:33:44.671: INFO: Created: latency-svc-dq4b8
  May 14 04:33:44.688: INFO: Got endpoints: latency-svc-scv8x [745.086117ms]
  May 14 04:33:44.708: INFO: Created: latency-svc-fs9qn
  May 14 04:33:44.743: INFO: Got endpoints: latency-svc-qlhqw [755.289156ms]
  May 14 04:33:44.758: INFO: Created: latency-svc-9dmd2
  May 14 04:33:44.790: INFO: Got endpoints: latency-svc-46hcm [748.319808ms]
  E0514 04:33:44.823304      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:33:44.846: INFO: Got endpoints: latency-svc-qm9kn [752.411411ms]
  May 14 04:33:44.849: INFO: Created: latency-svc-f685z
  May 14 04:33:44.898: INFO: Created: latency-svc-cm6w2
  May 14 04:33:44.910: INFO: Got endpoints: latency-svc-4gw7n [770.980476ms]
  May 14 04:33:44.924: INFO: Created: latency-svc-l29sf
  May 14 04:33:44.938: INFO: Got endpoints: latency-svc-njw5d [744.71269ms]
  May 14 04:33:44.958: INFO: Created: latency-svc-fxt92
  May 14 04:33:44.989: INFO: Got endpoints: latency-svc-ktqdq [747.69652ms]
  May 14 04:33:45.004: INFO: Created: latency-svc-s7zdb
  May 14 04:33:45.043: INFO: Got endpoints: latency-svc-xptdd [750.744238ms]
  May 14 04:33:45.062: INFO: Created: latency-svc-px9fs
  May 14 04:33:45.089: INFO: Got endpoints: latency-svc-fmn98 [752.664838ms]
  May 14 04:33:45.107: INFO: Created: latency-svc-m8lrv
  May 14 04:33:45.137: INFO: Got endpoints: latency-svc-nq4x7 [745.916595ms]
  May 14 04:33:45.156: INFO: Created: latency-svc-4wkxf
  May 14 04:33:45.190: INFO: Got endpoints: latency-svc-hbcmn [745.77914ms]
  May 14 04:33:45.205: INFO: Created: latency-svc-8xnwc
  May 14 04:33:45.240: INFO: Got endpoints: latency-svc-jp45w [750.204601ms]
  May 14 04:33:45.258: INFO: Created: latency-svc-cq2vn
  May 14 04:33:45.295: INFO: Got endpoints: latency-svc-6hbkd [756.45653ms]
  May 14 04:33:45.312: INFO: Created: latency-svc-vbwzp
  May 14 04:33:45.339: INFO: Got endpoints: latency-svc-frzgt [738.09924ms]
  May 14 04:33:45.358: INFO: Created: latency-svc-69h6d
  May 14 04:33:45.392: INFO: Got endpoints: latency-svc-dq4b8 [748.29183ms]
  May 14 04:33:45.412: INFO: Created: latency-svc-rws9d
  May 14 04:33:45.438: INFO: Got endpoints: latency-svc-fs9qn [749.311038ms]
  May 14 04:33:45.453: INFO: Created: latency-svc-8c4cf
  May 14 04:33:45.491: INFO: Got endpoints: latency-svc-9dmd2 [747.720387ms]
  May 14 04:33:45.502: INFO: Created: latency-svc-sjnmz
  May 14 04:33:45.540: INFO: Got endpoints: latency-svc-f685z [750.609434ms]
  May 14 04:33:45.562: INFO: Created: latency-svc-bpfsq
  May 14 04:33:45.590: INFO: Got endpoints: latency-svc-cm6w2 [744.230885ms]
  May 14 04:33:45.608: INFO: Created: latency-svc-2bkvf
  May 14 04:33:45.643: INFO: Got endpoints: latency-svc-l29sf [732.264266ms]
  May 14 04:33:45.657: INFO: Created: latency-svc-znrn5
  May 14 04:33:45.691: INFO: Got endpoints: latency-svc-fxt92 [752.9746ms]
  May 14 04:33:45.707: INFO: Created: latency-svc-tn6hh
  May 14 04:33:45.740: INFO: Got endpoints: latency-svc-s7zdb [750.853679ms]
  May 14 04:33:45.755: INFO: Created: latency-svc-cf8q4
  May 14 04:33:45.793: INFO: Got endpoints: latency-svc-px9fs [749.693963ms]
  May 14 04:33:45.812: INFO: Created: latency-svc-8gm5s
  E0514 04:33:45.823372      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:33:45.843: INFO: Got endpoints: latency-svc-m8lrv [754.123244ms]
  May 14 04:33:45.869: INFO: Created: latency-svc-clknk
  May 14 04:33:45.890: INFO: Got endpoints: latency-svc-4wkxf [752.224398ms]
  May 14 04:33:45.908: INFO: Created: latency-svc-8wchb
  May 14 04:33:45.938: INFO: Got endpoints: latency-svc-8xnwc [748.010858ms]
  May 14 04:33:45.960: INFO: Created: latency-svc-6vztz
  May 14 04:33:46.001: INFO: Got endpoints: latency-svc-cq2vn [760.438692ms]
  May 14 04:33:46.019: INFO: Created: latency-svc-m56sh
  May 14 04:33:46.045: INFO: Got endpoints: latency-svc-vbwzp [749.617411ms]
  May 14 04:33:46.059: INFO: Created: latency-svc-54rcp
  May 14 04:33:46.088: INFO: Got endpoints: latency-svc-69h6d [748.031786ms]
  May 14 04:33:46.101: INFO: Created: latency-svc-47jsq
  May 14 04:33:46.141: INFO: Got endpoints: latency-svc-rws9d [749.485336ms]
  May 14 04:33:46.162: INFO: Created: latency-svc-hwmmm
  May 14 04:33:46.190: INFO: Got endpoints: latency-svc-8c4cf [752.603992ms]
  May 14 04:33:46.227: INFO: Created: latency-svc-rbzgw
  May 14 04:33:46.242: INFO: Got endpoints: latency-svc-sjnmz [750.438676ms]
  May 14 04:33:46.270: INFO: Created: latency-svc-7hj7c
  May 14 04:33:46.294: INFO: Got endpoints: latency-svc-bpfsq [753.955836ms]
  May 14 04:33:46.321: INFO: Created: latency-svc-v5r6l
  May 14 04:33:46.343: INFO: Got endpoints: latency-svc-2bkvf [752.336109ms]
  May 14 04:33:46.360: INFO: Created: latency-svc-7njlm
  May 14 04:33:46.390: INFO: Got endpoints: latency-svc-znrn5 [746.666683ms]
  May 14 04:33:46.406: INFO: Created: latency-svc-scqdb
  May 14 04:33:46.439: INFO: Got endpoints: latency-svc-tn6hh [748.300232ms]
  May 14 04:33:46.459: INFO: Created: latency-svc-fdz5z
  May 14 04:33:46.510: INFO: Got endpoints: latency-svc-cf8q4 [769.795163ms]
  May 14 04:33:46.526: INFO: Created: latency-svc-b7tzz
  May 14 04:33:46.548: INFO: Got endpoints: latency-svc-8gm5s [754.283461ms]
  May 14 04:33:46.559: INFO: Created: latency-svc-87cb2
  May 14 04:33:46.626: INFO: Got endpoints: latency-svc-clknk [783.162411ms]
  May 14 04:33:46.665: INFO: Got endpoints: latency-svc-8wchb [775.170433ms]
  May 14 04:33:46.679: INFO: Created: latency-svc-2h72t
  May 14 04:33:46.697: INFO: Got endpoints: latency-svc-6vztz [758.566026ms]
  May 14 04:33:46.697: INFO: Created: latency-svc-lkqd9
  May 14 04:33:46.723: INFO: Created: latency-svc-w7fpz
  May 14 04:33:46.739: INFO: Got endpoints: latency-svc-m56sh [738.189689ms]
  May 14 04:33:46.759: INFO: Created: latency-svc-92hzd
  May 14 04:33:46.789: INFO: Got endpoints: latency-svc-54rcp [744.20376ms]
  May 14 04:33:46.805: INFO: Created: latency-svc-pqf7z
  E0514 04:33:46.823842      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:33:46.844: INFO: Got endpoints: latency-svc-47jsq [756.042837ms]
  May 14 04:33:46.859: INFO: Created: latency-svc-s579m
  May 14 04:33:46.887: INFO: Got endpoints: latency-svc-hwmmm [746.12234ms]
  May 14 04:33:46.906: INFO: Created: latency-svc-z7zst
  May 14 04:33:46.941: INFO: Got endpoints: latency-svc-rbzgw [750.457556ms]
  May 14 04:33:46.992: INFO: Got endpoints: latency-svc-7hj7c [749.793894ms]
  May 14 04:33:47.041: INFO: Got endpoints: latency-svc-v5r6l [746.347765ms]
  May 14 04:33:47.091: INFO: Got endpoints: latency-svc-7njlm [748.290276ms]
  May 14 04:33:47.143: INFO: Got endpoints: latency-svc-scqdb [752.621411ms]
  May 14 04:33:47.197: INFO: Got endpoints: latency-svc-fdz5z [757.560544ms]
  May 14 04:33:47.241: INFO: Got endpoints: latency-svc-b7tzz [731.039148ms]
  May 14 04:33:47.291: INFO: Got endpoints: latency-svc-87cb2 [742.772227ms]
  May 14 04:33:47.341: INFO: Got endpoints: latency-svc-2h72t [715.045727ms]
  May 14 04:33:47.390: INFO: Got endpoints: latency-svc-lkqd9 [724.75122ms]
  May 14 04:33:47.441: INFO: Got endpoints: latency-svc-w7fpz [744.068119ms]
  May 14 04:33:47.497: INFO: Got endpoints: latency-svc-92hzd [757.923686ms]
  May 14 04:33:47.542: INFO: Got endpoints: latency-svc-pqf7z [752.763377ms]
  May 14 04:33:47.598: INFO: Got endpoints: latency-svc-s579m [754.305522ms]
  May 14 04:33:47.639: INFO: Got endpoints: latency-svc-z7zst [751.58206ms]
  May 14 04:33:47.639: INFO: Latencies: [39.742914ms 48.039563ms 57.342046ms 76.903975ms 98.684792ms 101.067513ms 116.857213ms 151.995322ms 152.099665ms 177.086292ms 189.241946ms 198.630933ms 216.182944ms 226.129043ms 230.634295ms 236.129255ms 237.286469ms 242.031416ms 243.803901ms 246.81902ms 250.297707ms 258.219352ms 260.87139ms 261.622365ms 270.622838ms 270.994493ms 273.680716ms 275.208736ms 275.77066ms 277.412318ms 277.992822ms 278.252374ms 301.454951ms 302.836466ms 313.579067ms 329.829932ms 336.095272ms 361.432857ms 374.947618ms 375.022647ms 392.267175ms 406.092566ms 412.460235ms 412.559933ms 412.756734ms 417.294516ms 418.989537ms 419.837689ms 420.391142ms 425.649952ms 433.161528ms 435.879254ms 437.135459ms 437.757455ms 451.537165ms 471.400814ms 501.80498ms 538.081349ms 547.086278ms 568.365846ms 575.153033ms 596.126454ms 613.709449ms 640.46442ms 655.447754ms 665.65111ms 671.110138ms 673.367289ms 707.137344ms 714.995127ms 715.045727ms 718.906407ms 724.75122ms 731.039148ms 732.264266ms 735.982296ms 737.169761ms 738.09924ms 738.189689ms 739.070635ms 741.388369ms 741.658638ms 741.745004ms 742.772227ms 742.846305ms 743.90772ms 744.068119ms 744.159557ms 744.20376ms 744.230885ms 744.327746ms 744.64965ms 744.701766ms 744.71269ms 744.714705ms 745.086117ms 745.604655ms 745.77914ms 745.848223ms 745.916595ms 746.064364ms 746.12234ms 746.158361ms 746.347765ms 746.463317ms 746.666683ms 746.718223ms 746.812514ms 746.903832ms 747.46082ms 747.69652ms 747.720387ms 747.737509ms 747.78076ms 748.010858ms 748.011428ms 748.031786ms 748.132427ms 748.19473ms 748.245601ms 748.290276ms 748.290366ms 748.29183ms 748.300232ms 748.319808ms 749.311038ms 749.485336ms 749.513352ms 749.617411ms 749.693963ms 749.793894ms 749.844025ms 749.918921ms 750.204601ms 750.401744ms 750.438676ms 750.457556ms 750.609434ms 750.62922ms 750.744238ms 750.853679ms 751.327422ms 751.37238ms 751.491748ms 751.5077ms 751.58206ms 751.975269ms 752.022343ms 752.069025ms 752.224398ms 752.27822ms 752.296042ms 752.336109ms 752.359352ms 752.411411ms 752.603992ms 752.621411ms 752.664838ms 752.763377ms 752.813092ms 752.818495ms 752.9746ms 753.038987ms 753.12351ms 753.599882ms 753.735236ms 753.955836ms 754.123244ms 754.283461ms 754.305522ms 754.398097ms 754.853247ms 754.86655ms 755.216609ms 755.259706ms 755.289156ms 756.042837ms 756.45653ms 756.513449ms 756.635511ms 757.544833ms 757.560544ms 757.923686ms 758.566026ms 758.5827ms 759.352296ms 760.438692ms 762.509774ms 769.795163ms 770.980476ms 775.170433ms 781.221184ms 783.162411ms 785.669842ms 835.864584ms 837.254953ms 837.423429ms 884.990746ms 927.961018ms 967.604063ms]
  May 14 04:33:47.639: INFO: 50 %ile: 746.064364ms
  May 14 04:33:47.639: INFO: 90 %ile: 757.544833ms
  May 14 04:33:47.639: INFO: 99 %ile: 927.961018ms
  May 14 04:33:47.639: INFO: Total sample count: 200
  May 14 04:33:47.639: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-3608" for this suite. @ 05/14/24 04:33:47.649
• [9.793 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]
test/e2e/auth/service_accounts.go:740
  STEP: Creating a kubernetes client @ 05/14/24 04:33:47.661
  May 14 04:33:47.661: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename svcaccounts @ 05/14/24 04:33:47.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:33:47.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:33:47.697
  May 14 04:33:47.703: INFO: Got root ca configmap in namespace "svcaccounts-3907"
  May 14 04:33:47.710: INFO: Deleted root ca configmap in namespace "svcaccounts-3907"
  E0514 04:33:47.824613      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for a new root ca configmap created @ 05/14/24 04:33:48.211
  May 14 04:33:48.216: INFO: Recreated root ca configmap in namespace "svcaccounts-3907"
  May 14 04:33:48.223: INFO: Updated root ca configmap in namespace "svcaccounts-3907"
  STEP: waiting for the root ca configmap reconciled @ 05/14/24 04:33:48.723
  May 14 04:33:48.730: INFO: Reconciled root ca configmap in namespace "svcaccounts-3907"
  May 14 04:33:48.730: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3907" for this suite. @ 05/14/24 04:33:48.735
• [1.079 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 05/14/24 04:33:48.741
  May 14 04:33:48.741: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename downward-api @ 05/14/24 04:33:48.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:33:48.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:33:48.773
  STEP: Creating a pod to test downward API volume plugin @ 05/14/24 04:33:48.775
  E0514 04:33:48.825319      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:33:49.826347      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:33:50.826915      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:33:51.827299      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:33:52.819
  E0514 04:33:52.827642      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:33:52.832: INFO: Trying to get logs from node viola-paas-worker03 pod downwardapi-volume-1a22f1da-3b04-4580-afa7-a3291011091d container client-container: <nil>
  STEP: delete the pod @ 05/14/24 04:33:52.898
  May 14 04:33:52.925: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4261" for this suite. @ 05/14/24 04:33:52.93
• [4.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:97
  STEP: Creating a kubernetes client @ 05/14/24 04:33:52.938
  May 14 04:33:52.938: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename emptydir @ 05/14/24 04:33:52.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:33:52.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:33:52.972
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/14/24 04:33:52.975
  E0514 04:33:53.827850      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:33:54.828136      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:33:55.829295      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:33:56.829957      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:33:57.025
  May 14 04:33:57.029: INFO: Trying to get logs from node viola-paas-worker03 pod pod-51576302-c267-4df0-9d13-8361a0a97091 container test-container: <nil>
  STEP: delete the pod @ 05/14/24 04:33:57.045
  May 14 04:33:57.075: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1233" for this suite. @ 05/14/24 04:33:57.081
• [4.162 seconds]
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 05/14/24 04:33:57.101
  May 14 04:33:57.101: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename pods @ 05/14/24 04:33:57.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:33:57.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:33:57.154
  E0514 04:33:57.830408      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:33:58.831313      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:33:59.831810      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:00.831922      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:01.832143      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:02.832596      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:34:03.262
  May 14 04:34:03.264: INFO: Trying to get logs from node viola-paas-worker03 pod client-envvars-7411a5db-a5c5-4555-8a2b-246dcaba3140 container env3cont: <nil>
  STEP: delete the pod @ 05/14/24 04:34:03.271
  May 14 04:34:03.291: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-924" for this suite. @ 05/14/24 04:34:03.296
• [6.202 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:243
  STEP: Creating a kubernetes client @ 05/14/24 04:34:03.304
  May 14 04:34:03.304: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename namespaces @ 05/14/24 04:34:03.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:34:03.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:34:03.334
  STEP: Creating a test namespace @ 05/14/24 04:34:03.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:34:03.357
  STEP: Creating a pod in the namespace @ 05/14/24 04:34:03.359
  STEP: Waiting for the pod to have running status @ 05/14/24 04:34:03.379
  E0514 04:34:03.833005      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:04.833549      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 05/14/24 04:34:05.387
  STEP: Waiting for the namespace to be removed. @ 05/14/24 04:34:05.403
  E0514 04:34:05.834486      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:06.835796      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:07.836022      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:08.836841      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:09.837445      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:10.837627      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:11.838625      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:12.838790      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:13.839423      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:14.840109      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:15.840751      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:16.841259      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 05/14/24 04:34:17.407
  STEP: Verifying there are no pods in the namespace @ 05/14/24 04:34:17.433
  May 14 04:34:17.442: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6959" for this suite. @ 05/14/24 04:34:17.461
  STEP: Destroying namespace "nsdeletetest-715" for this suite. @ 05/14/24 04:34:17.477
  May 14 04:34:17.480: INFO: Namespace nsdeletetest-715 was already deleted
  STEP: Destroying namespace "nsdeletetest-9473" for this suite. @ 05/14/24 04:34:17.48
• [14.187 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 05/14/24 04:34:17.492
  May 14 04:34:17.492: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename dns @ 05/14/24 04:34:17.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:34:17.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:34:17.519
  STEP: Creating a test headless service @ 05/14/24 04:34:17.521
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8157.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-8157.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 05/14/24 04:34:17.537
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8157.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-8157.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 05/14/24 04:34:17.537
  STEP: creating a pod to probe DNS @ 05/14/24 04:34:17.537
  STEP: submitting the pod to kubernetes @ 05/14/24 04:34:17.537
  E0514 04:34:17.842500      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:18.843037      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/14/24 04:34:19.602
  STEP: looking for the results for each expected name from probers @ 05/14/24 04:34:19.606
  May 14 04:34:19.620: INFO: DNS probes using dns-8157/dns-test-5ea71997-e5d1-4199-8bde-c4d6a58d3fd2 succeeded

  May 14 04:34:19.620: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/14/24 04:34:19.626
  STEP: deleting the test headless service @ 05/14/24 04:34:19.66
  STEP: Destroying namespace "dns-8157" for this suite. @ 05/14/24 04:34:19.679
• [2.199 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]
test/e2e/kubectl/kubectl.go:1316
  STEP: Creating a kubernetes client @ 05/14/24 04:34:19.692
  May 14 04:34:19.692: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename kubectl @ 05/14/24 04:34:19.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:34:19.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:34:19.723
  STEP: validating cluster-info @ 05/14/24 04:34:19.726
  May 14 04:34:19.726: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-4148 cluster-info'
  May 14 04:34:19.785: INFO: stderr: ""
  May 14 04:34:19.785: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.233.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  May 14 04:34:19.785: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4148" for this suite. @ 05/14/24 04:34:19.791
• [0.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]
test/e2e/common/storage/empty_dir.go:227
  STEP: Creating a kubernetes client @ 05/14/24 04:34:19.801
  May 14 04:34:19.801: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename emptydir @ 05/14/24 04:34:19.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:34:19.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:34:19.827
  STEP: Creating Pod @ 05/14/24 04:34:19.83
  E0514 04:34:19.843896      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:20.844984      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:21.845328      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 05/14/24 04:34:21.865
  May 14 04:34:21.865: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-6725 PodName:pod-sharedvolume-4597907e-d698-4b3a-93a7-4d3411e6d1e4 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 04:34:21.865: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 04:34:21.866: INFO: ExecWithOptions: Clientset creation
  May 14 04:34:21.866: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/emptydir-6725/pods/pod-sharedvolume-4597907e-d698-4b3a-93a7-4d3411e6d1e4/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  May 14 04:34:21.908: INFO: Exec stderr: ""
  May 14 04:34:21.908: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6725" for this suite. @ 05/14/24 04:34:21.916
• [2.122 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 05/14/24 04:34:21.923
  May 14 04:34:21.923: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename disruption @ 05/14/24 04:34:21.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:34:21.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:34:21.952
  STEP: Creating a kubernetes client @ 05/14/24 04:34:21.954
  May 14 04:34:21.954: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename disruption-2 @ 05/14/24 04:34:21.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:34:21.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:34:21.991
  STEP: Waiting for the pdb to be processed @ 05/14/24 04:34:21.998
  E0514 04:34:22.845488      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:23.845860      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 05/14/24 04:34:24.012
  E0514 04:34:24.846873      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:25.847571      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 05/14/24 04:34:26.032
  STEP: listing a collection of PDBs across all namespaces @ 05/14/24 04:34:26.051
  STEP: listing a collection of PDBs in namespace disruption-8383 @ 05/14/24 04:34:26.055
  STEP: deleting a collection of PDBs @ 05/14/24 04:34:26.065
  STEP: Waiting for the PDB collection to be deleted @ 05/14/24 04:34:26.096
  May 14 04:34:26.103: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May 14 04:34:26.108: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-5601" for this suite. @ 05/14/24 04:34:26.112
  STEP: Destroying namespace "disruption-8383" for this suite. @ 05/14/24 04:34:26.12
• [4.206 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:123
  STEP: Creating a kubernetes client @ 05/14/24 04:34:26.135
  May 14 04:34:26.135: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename sysctl @ 05/14/24 04:34:26.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:34:26.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:34:26.169
  STEP: Creating a pod with one valid and two invalid sysctls @ 05/14/24 04:34:26.172
  May 14 04:34:26.176: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7426" for this suite. @ 05/14/24 04:34:26.18
• [0.058 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]
test/e2e/apps/replica_set.go:165
  STEP: Creating a kubernetes client @ 05/14/24 04:34:26.194
  May 14 04:34:26.194: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename replicaset @ 05/14/24 04:34:26.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:34:26.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:34:26.223
  STEP: Create a ReplicaSet @ 05/14/24 04:34:26.225
  STEP: Verify that the required pods have come up @ 05/14/24 04:34:26.232
  May 14 04:34:26.235: INFO: Pod name sample-pod: Found 0 pods out of 3
  E0514 04:34:26.847797      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:27.848139      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:28.848275      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:29.848745      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:30.849351      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:34:31.243: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 05/14/24 04:34:31.244
  May 14 04:34:31.247: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 05/14/24 04:34:31.247
  STEP: DeleteCollection of the ReplicaSets @ 05/14/24 04:34:31.254
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 05/14/24 04:34:31.262
  May 14 04:34:31.269: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8058" for this suite. @ 05/14/24 04:34:31.274
• [5.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 05/14/24 04:34:31.307
  May 14 04:34:31.307: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename init-container @ 05/14/24 04:34:31.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:34:31.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:34:31.34
  STEP: creating the pod @ 05/14/24 04:34:31.344
  May 14 04:34:31.344: INFO: PodSpec: initContainers in spec.initContainers
  E0514 04:34:31.849658      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:32.850442      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:33.850611      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:34.851071      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:34:35.237: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9547" for this suite. @ 05/14/24 04:34:35.243
• [3.952 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 05/14/24 04:34:35.26
  May 14 04:34:35.260: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename projected @ 05/14/24 04:34:35.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:34:35.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:34:35.29
  STEP: Creating projection with secret that has name projected-secret-test-2dcf1e4a-0063-4c39-957c-cecf506d23d9 @ 05/14/24 04:34:35.295
  STEP: Creating a pod to test consume secrets @ 05/14/24 04:34:35.312
  E0514 04:34:35.851571      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:36.852007      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:37.852959      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:38.853352      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:34:39.378
  May 14 04:34:39.381: INFO: Trying to get logs from node viola-paas-worker03 pod pod-projected-secrets-869117f6-3bf7-4589-80e5-5381aacb0024 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/14/24 04:34:39.388
  May 14 04:34:39.415: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-200" for this suite. @ 05/14/24 04:34:39.42
• [4.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 05/14/24 04:34:39.429
  May 14 04:34:39.429: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename projected @ 05/14/24 04:34:39.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:34:39.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:34:39.456
  STEP: Creating configMap with name projected-configmap-test-volume-map-24dd14d8-e78e-438b-8b4c-27ae4f987cf8 @ 05/14/24 04:34:39.458
  STEP: Creating a pod to test consume configMaps @ 05/14/24 04:34:39.465
  E0514 04:34:39.853884      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:40.854428      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:41.854817      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:42.855828      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:34:43.493
  May 14 04:34:43.496: INFO: Trying to get logs from node viola-paas-worker03 pod pod-projected-configmaps-b54cb9c2-e2ad-479f-8a27-d9c1751678fd container agnhost-container: <nil>
  STEP: delete the pod @ 05/14/24 04:34:43.509
  May 14 04:34:43.531: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8731" for this suite. @ 05/14/24 04:34:43.539
• [4.117 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
test/e2e/auth/service_accounts.go:529
  STEP: Creating a kubernetes client @ 05/14/24 04:34:43.547
  May 14 04:34:43.547: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename svcaccounts @ 05/14/24 04:34:43.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:34:43.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:34:43.584
  May 14 04:34:43.619: INFO: created pod
  E0514 04:34:43.856405      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:44.856752      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:45.857171      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:46.857511      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:34:47.631
  E0514 04:34:47.857656      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:48.857991      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:49.858236      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:50.858402      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:51.858820      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:52.859503      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:53.859894      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:54.860394      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:55.861248      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:56.861589      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:57.861901      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:58.862291      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:34:59.862668      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:00.863643      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:01.864242      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:02.864227      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:03.864560      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:04.864790      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:05.865740      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:06.866034      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:07.866383      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:08.866547      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:09.866845      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:10.867468      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:11.867672      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:12.868043      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:13.868560      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:14.869341      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:15.870379      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:16.870710      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:35:17.631: INFO: polling logs
  May 14 04:35:17.641: INFO: Pod logs: 
  I0514 04:34:44.494273       1 log.go:194] OK: Got token
  I0514 04:34:44.494400       1 log.go:194] validating with in-cluster discovery
  I0514 04:34:44.494864       1 log.go:194] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0514 04:34:44.494894       1 log.go:194] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-9569:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00021d720), NotBefore:(*jwt.NumericDate)(0xc00021d808), IssuedAt:(*jwt.NumericDate)(0xc00021d730), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9569", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"2dcf3ac9-db78-46b3-9e2e-32d0f33208a1"}}}
  I0514 04:34:44.550734       1 log.go:194] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0514 04:34:44.556578       1 log.go:194] OK: Validated signature on JWT
  I0514 04:34:44.556673       1 log.go:194] OK: Got valid claims from token!
  I0514 04:34:44.556699       1 log.go:194] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-9569:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00020e080), NotBefore:(*jwt.NumericDate)(0xc00020e0a8), IssuedAt:(*jwt.NumericDate)(0xc00020e088), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9569", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"2dcf3ac9-db78-46b3-9e2e-32d0f33208a1"}}}

  May 14 04:35:17.641: INFO: completed pod
  May 14 04:35:17.655: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9569" for this suite. @ 05/14/24 04:35:17.663
• [34.124 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 05/14/24 04:35:17.671
  May 14 04:35:17.671: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename projected @ 05/14/24 04:35:17.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:35:17.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:35:17.702
  STEP: Creating secret with name s-test-opt-del-e237cb7d-b876-4363-a8ea-f8e8279fb503 @ 05/14/24 04:35:17.711
  STEP: Creating secret with name s-test-opt-upd-23199caf-8086-4690-8347-d0c12b43a8a4 @ 05/14/24 04:35:17.718
  STEP: Creating the pod @ 05/14/24 04:35:17.729
  E0514 04:35:17.871683      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:18.871901      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-e237cb7d-b876-4363-a8ea-f8e8279fb503 @ 05/14/24 04:35:19.776
  STEP: Updating secret s-test-opt-upd-23199caf-8086-4690-8347-d0c12b43a8a4 @ 05/14/24 04:35:19.785
  STEP: Creating secret with name s-test-opt-create-617eab81-f455-4365-93db-e8b70692be0d @ 05/14/24 04:35:19.792
  STEP: waiting to observe update in volume @ 05/14/24 04:35:19.797
  E0514 04:35:19.872099      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:20.872840      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:21.873765      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:22.874344      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:23.874301      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:24.874669      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:25.875587      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:26.875964      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:27.875986      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:28.876326      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:29.876856      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:30.877831      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:31.878878      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:32.879228      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:33.879383      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:34.879774      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:35.879738      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:36.880741      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:37.882015      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:38.882218      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:39.882534      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:40.882853      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:41.883287      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:42.884354      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:43.884851      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:44.884943      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:45.885539      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:46.885960      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:47.886326      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:48.886733      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:49.887099      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:50.887549      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:51.887884      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:52.888058      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:53.889080      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:54.889514      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:55.890372      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:56.890572      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:57.890914      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:58.891272      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:35:59.891880      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:00.892217      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:01.892669      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:02.893484      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:03.893814      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:04.894597      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:05.895619      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:06.896261      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:07.896695      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:08.896934      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:09.897246      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:10.898338      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:11.898540      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:12.899494      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:13.899800      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:14.900150      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:15.901344      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:16.902240      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:17.902479      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:18.902786      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:19.903419      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:20.903443      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:21.903777      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:22.904339      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:23.904644      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:24.905512      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:25.906498      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:26.906981      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:27.907388      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:28.907730      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:29.908135      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:30.908787      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:31.909168      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:32.909985      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:33.910422      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:34.911287      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:35.912020      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:36.912542      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:37.912842      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:36:38.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4419" for this suite. @ 05/14/24 04:36:38.362
• [80.698 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance]
test/e2e/network/service.go:3117
  STEP: Creating a kubernetes client @ 05/14/24 04:36:38.37
  May 14 04:36:38.370: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename services @ 05/14/24 04:36:38.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:36:38.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:36:38.406
  STEP: fetching services @ 05/14/24 04:36:38.408
  May 14 04:36:38.417: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9452" for this suite. @ 05/14/24 04:36:38.422
• [0.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 05/14/24 04:36:38.433
  May 14 04:36:38.433: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename watch @ 05/14/24 04:36:38.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:36:38.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:36:38.461
  STEP: creating a new configmap @ 05/14/24 04:36:38.464
  STEP: modifying the configmap once @ 05/14/24 04:36:38.474
  STEP: modifying the configmap a second time @ 05/14/24 04:36:38.486
  STEP: deleting the configmap @ 05/14/24 04:36:38.495
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 05/14/24 04:36:38.501
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 05/14/24 04:36:38.503
  May 14 04:36:38.503: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3161  b6238fa0-f1ac-4536-904d-9ebba4101238 26330303 0 2024-05-14 04:36:38 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-05-14 04:36:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 14 04:36:38.503: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3161  b6238fa0-f1ac-4536-904d-9ebba4101238 26330304 0 2024-05-14 04:36:38 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-05-14 04:36:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 14 04:36:38.503: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3161" for this suite. @ 05/14/24 04:36:38.508
• [0.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 05/14/24 04:36:38.516
  May 14 04:36:38.516: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename services @ 05/14/24 04:36:38.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:36:38.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:36:38.547
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-8724 @ 05/14/24 04:36:38.549
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/14/24 04:36:38.564
  STEP: creating service externalsvc in namespace services-8724 @ 05/14/24 04:36:38.564
  STEP: creating replication controller externalsvc in namespace services-8724 @ 05/14/24 04:36:38.6
  I0514 04:36:38.609596      23 runners.go:197] Created replication controller with name: externalsvc, namespace: services-8724, replica count: 2
  E0514 04:36:38.912961      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:39.914039      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:40.914234      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0514 04:36:41.661239      23 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 05/14/24 04:36:41.665
  May 14 04:36:41.689: INFO: Creating new exec pod
  E0514 04:36:41.915306      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:42.915673      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:36:43.715: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-8724 exec execpodspmx9 -- /bin/sh -x -c nslookup clusterip-service.services-8724.svc.cluster.local'
  E0514 04:36:43.916464      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:36:43.918: INFO: stderr: "+ nslookup clusterip-service.services-8724.svc.cluster.local\n"
  May 14 04:36:43.918: INFO: stdout: "Server:\t\t10.233.0.3\nAddress:\t10.233.0.3#53\n\nclusterip-service.services-8724.svc.cluster.local\tcanonical name = externalsvc.services-8724.svc.cluster.local.\nName:\texternalsvc.services-8724.svc.cluster.local\nAddress: 10.233.56.155\n\n"
  May 14 04:36:43.918: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-8724, will wait for the garbage collector to delete the pods @ 05/14/24 04:36:43.929
  May 14 04:36:43.999: INFO: Deleting ReplicationController externalsvc took: 16.150015ms
  May 14 04:36:44.100: INFO: Terminating ReplicationController externalsvc pods took: 101.032783ms
  E0514 04:36:44.917028      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:45.918060      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:46.918655      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:36:47.429: INFO: Cleaning up the ClusterIP to ExternalName test service
  STEP: Destroying namespace "services-8724" for this suite. @ 05/14/24 04:36:47.458
• [8.951 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 05/14/24 04:36:47.47
  May 14 04:36:47.470: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename webhook @ 05/14/24 04:36:47.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:36:47.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:36:47.507
  STEP: Setting up server cert @ 05/14/24 04:36:47.55
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/14/24 04:36:47.785
  STEP: Deploying the webhook pod @ 05/14/24 04:36:47.796
  STEP: Wait for the deployment to be ready @ 05/14/24 04:36:47.815
  May 14 04:36:47.821: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0514 04:36:47.919347      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:48.919542      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/14/24 04:36:49.833
  STEP: Verifying the service has paired with the endpoint @ 05/14/24 04:36:49.847
  E0514 04:36:49.920113      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:36:50.848: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/14/24 04:36:50.855
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/14/24 04:36:50.873
  STEP: Creating a dummy validating-webhook-configuration object @ 05/14/24 04:36:50.892
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 05/14/24 04:36:50.9
  STEP: Creating a dummy mutating-webhook-configuration object @ 05/14/24 04:36:50.906
  E0514 04:36:50.920092      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 05/14/24 04:36:50.921
  May 14 04:36:50.933: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3272" for this suite. @ 05/14/24 04:36:51.25
  STEP: Destroying namespace "webhook-markers-6251" for this suite. @ 05/14/24 04:36:51.257
• [3.795 seconds]
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 05/14/24 04:36:51.265
  May 14 04:36:51.265: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename var-expansion @ 05/14/24 04:36:51.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:36:51.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:36:51.298
  STEP: creating the pod @ 05/14/24 04:36:51.3
  STEP: waiting for pod running @ 05/14/24 04:36:51.316
  E0514 04:36:51.920359      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:52.921088      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 05/14/24 04:36:53.324
  May 14 04:36:53.327: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-6442 PodName:var-expansion-ce4ca080-eb08-4bc1-b02f-95fc19d39a6d ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 04:36:53.328: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 04:36:53.328: INFO: ExecWithOptions: Clientset creation
  May 14 04:36:53.328: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-6442/pods/var-expansion-ce4ca080-eb08-4bc1-b02f-95fc19d39a6d/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 05/14/24 04:36:53.372
  May 14 04:36:53.376: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-6442 PodName:var-expansion-ce4ca080-eb08-4bc1-b02f-95fc19d39a6d ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 04:36:53.376: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 04:36:53.376: INFO: ExecWithOptions: Clientset creation
  May 14 04:36:53.377: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-6442/pods/var-expansion-ce4ca080-eb08-4bc1-b02f-95fc19d39a6d/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 05/14/24 04:36:53.428
  E0514 04:36:53.921348      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:36:53.949: INFO: Successfully updated pod "var-expansion-ce4ca080-eb08-4bc1-b02f-95fc19d39a6d"
  STEP: waiting for annotated pod running @ 05/14/24 04:36:53.949
  STEP: deleting the pod gracefully @ 05/14/24 04:36:53.953
  May 14 04:36:53.953: INFO: Deleting pod "var-expansion-ce4ca080-eb08-4bc1-b02f-95fc19d39a6d" in namespace "var-expansion-6442"
  May 14 04:36:53.961: INFO: Wait up to 5m0s for pod "var-expansion-ce4ca080-eb08-4bc1-b02f-95fc19d39a6d" to be fully deleted
  E0514 04:36:54.922282      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:55.922352      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:56.923212      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:57.924028      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:58.924209      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:36:59.924713      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:00.925371      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:01.925821      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:02.926684      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:03.927211      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:04.927974      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:05.928797      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:06.929496      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:07.929836      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:08.930285      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:09.930639      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:10.931417      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:11.931843      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:12.932865      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:13.933145      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:14.933865      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:15.934630      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:16.935455      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:17.935801      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:18.936740      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:19.937102      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:20.937619      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:21.938060      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:22.938544      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:23.938970      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:24.939248      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:25.939279      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:37:26.058: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6442" for this suite. @ 05/14/24 04:37:26.066
• [34.812 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 05/14/24 04:37:26.079
  May 14 04:37:26.079: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/14/24 04:37:26.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:37:26.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:37:26.12
  STEP: set up a multi version CRD @ 05/14/24 04:37:26.123
  May 14 04:37:26.124: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  E0514 04:37:26.939862      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:27.939966      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:28.940632      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:29.941673      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:30.941695      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:31.942285      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:32.943163      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:33.943635      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:34.943860      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:35.944256      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:36.944448      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 05/14/24 04:37:37.229
  STEP: check the new version name is served @ 05/14/24 04:37:37.249
  E0514 04:37:37.945100      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:38.945865      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 05/14/24 04:37:39.612
  E0514 04:37:39.945881      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 05/14/24 04:37:40.456
  E0514 04:37:40.946164      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:41.947059      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:42.947875      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:43.948001      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:37:44.836: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4511" for this suite. @ 05/14/24 04:37:44.846
• [18.778 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 05/14/24 04:37:44.857
  May 14 04:37:44.857: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename var-expansion @ 05/14/24 04:37:44.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:37:44.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:37:44.89
  STEP: creating the pod with failed condition @ 05/14/24 04:37:44.892
  E0514 04:37:44.948508      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:45.949342      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:46.949844      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:47.950575      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:48.951601      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:49.951921      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:50.952312      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:51.952852      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:52.952944      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:53.953364      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:54.953438      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:55.954438      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:56.955507      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:57.955532      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:58.955870      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:37:59.956119      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:00.956763      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:01.957053      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:02.957178      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:03.957901      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:04.958370      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:05.958570      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:06.959018      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:07.959455      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:08.959848      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:09.960138      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:10.960830      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:11.961020      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:12.961513      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:13.962534      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:14.962731      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:15.963399      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:16.963694      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:17.963935      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:18.964441      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:19.964591      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:20.964744      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:21.964852      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:22.965470      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:23.965730      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:24.966544      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:25.966663      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:26.966979      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:27.967349      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:28.967767      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:29.968164      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:30.968911      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:31.969008      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:32.969367      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:33.969395      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:34.969987      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:35.970015      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:36.970469      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:37.970857      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:38.971393      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:39.971523      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:40.971665      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:41.971845      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:42.972182      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:43.972467      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:44.972571      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:45.972801      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:46.973144      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:47.973621      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:48.974666      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:49.974519      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:50.974684      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:51.974909      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:52.975253      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:53.975711      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:54.975929      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:55.976070      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:56.976421      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:57.976679      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:58.977099      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:38:59.977773      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:00.977922      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:01.978695      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:02.979092      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:03.979230      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:04.979384      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:05.979477      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:06.979783      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:07.979965      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:08.980289      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:09.980832      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:10.981075      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:11.981261      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:12.981689      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:13.981877      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:14.982260      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:15.982748      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:16.983116      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:17.983313      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:18.983655      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:19.983800      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:20.983986      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:21.984378      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:22.984708      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:23.985695      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:24.985940      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:25.985958      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:26.986180      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:27.987144      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:28.987536      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:29.988318      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:30.988429      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:31.988717      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:32.988916      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:33.988956      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:34.989217      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:35.989806      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:36.989894      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:37.989883      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:38.990409      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:39.990894      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:40.991520      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:41.991808      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:42.992211      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:43.993244      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 05/14/24 04:39:44.921
  E0514 04:39:44.994307      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:39:45.446: INFO: Successfully updated pod "var-expansion-15ffe193-f6a5-4009-bd82-bbffdd955d4e"
  STEP: waiting for pod running @ 05/14/24 04:39:45.446
  E0514 04:39:45.995045      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:46.995476      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 05/14/24 04:39:47.456
  May 14 04:39:47.456: INFO: Deleting pod "var-expansion-15ffe193-f6a5-4009-bd82-bbffdd955d4e" in namespace "var-expansion-8381"
  May 14 04:39:47.473: INFO: Wait up to 5m0s for pod "var-expansion-15ffe193-f6a5-4009-bd82-bbffdd955d4e" to be fully deleted
  E0514 04:39:47.995977      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:48.996312      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:49.997271      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:50.997881      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:51.998930      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:52.999481      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:54.000242      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:55.000611      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:56.001461      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:57.001798      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:58.001839      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:39:59.002234      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:00.002563      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:01.003626      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:02.004407      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:03.004702      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:04.005767      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:05.006138      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:06.006851      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:07.007194      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:08.007498      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:09.007836      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:10.008399      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:11.008988      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:12.009856      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:13.010182      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:14.011260      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:15.011767      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:16.012400      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:17.012767      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:18.013039      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:19.013327      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:40:19.568: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8381" for this suite. @ 05/14/24 04:40:19.576
• [154.727 seconds]
------------------------------
S
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
test/e2e/scheduling/limit_range.go:61
  STEP: Creating a kubernetes client @ 05/14/24 04:40:19.585
  May 14 04:40:19.585: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename limitrange @ 05/14/24 04:40:19.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:40:19.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:40:19.612
  STEP: Creating a LimitRange @ 05/14/24 04:40:19.614
  STEP: Setting up watch @ 05/14/24 04:40:19.614
  STEP: Submitting a LimitRange @ 05/14/24 04:40:19.718
  STEP: Verifying LimitRange creation was observed @ 05/14/24 04:40:19.727
  STEP: Fetching the LimitRange to ensure it has proper values @ 05/14/24 04:40:19.728
  May 14 04:40:19.730: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  May 14 04:40:19.730: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 05/14/24 04:40:19.73
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 05/14/24 04:40:19.742
  May 14 04:40:19.746: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  May 14 04:40:19.746: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 05/14/24 04:40:19.746
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 05/14/24 04:40:19.758
  May 14 04:40:19.762: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  May 14 04:40:19.762: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 05/14/24 04:40:19.762
  STEP: Failing to create a Pod with more than max resources @ 05/14/24 04:40:19.765
  STEP: Updating a LimitRange @ 05/14/24 04:40:19.767
  STEP: Verifying LimitRange updating is effective @ 05/14/24 04:40:19.778
  E0514 04:40:20.013947      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:21.014400      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 05/14/24 04:40:21.784
  STEP: Failing to create a Pod with more than max resources @ 05/14/24 04:40:21.795
  STEP: Deleting a LimitRange @ 05/14/24 04:40:21.797
  STEP: Verifying the LimitRange was deleted @ 05/14/24 04:40:21.809
  E0514 04:40:22.014463      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:23.014822      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:24.015189      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:25.015582      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:26.016338      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:40:26.813: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 05/14/24 04:40:26.813
  May 14 04:40:26.826: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-6347" for this suite. @ 05/14/24 04:40:26.833
• [7.269 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]
test/e2e/apimachinery/resource_quota.go:887
  STEP: Creating a kubernetes client @ 05/14/24 04:40:26.856
  May 14 04:40:26.856: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename resourcequota @ 05/14/24 04:40:26.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:40:26.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:40:26.888
  STEP: Creating a ResourceQuota @ 05/14/24 04:40:26.891
  STEP: Getting a ResourceQuota @ 05/14/24 04:40:26.897
  STEP: Updating a ResourceQuota @ 05/14/24 04:40:26.907
  STEP: Verifying a ResourceQuota was modified @ 05/14/24 04:40:26.913
  STEP: Deleting a ResourceQuota @ 05/14/24 04:40:26.918
  STEP: Verifying the deleted ResourceQuota @ 05/14/24 04:40:26.937
  May 14 04:40:26.940: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9845" for this suite. @ 05/14/24 04:40:26.947
• [0.100 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]
test/e2e/kubectl/kubectl.go:1781
  STEP: Creating a kubernetes client @ 05/14/24 04:40:26.956
  May 14 04:40:26.956: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename kubectl @ 05/14/24 04:40:26.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:40:26.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:40:26.987
  STEP: starting the proxy server @ 05/14/24 04:40:26.99
  May 14 04:40:26.991: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-4043 proxy -p 0 --disable-filter'
  E0514 04:40:27.017321      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: curling proxy /api/ output @ 05/14/24 04:40:27.042
  May 14 04:40:27.053: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4043" for this suite. @ 05/14/24 04:40:27.06
• [0.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 05/14/24 04:40:27.077
  May 14 04:40:27.077: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename projected @ 05/14/24 04:40:27.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:40:27.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:40:27.098
  STEP: Creating projection with secret that has name projected-secret-test-map-5471941f-497a-4507-bf29-c9dfb93703ec @ 05/14/24 04:40:27.1
  STEP: Creating a pod to test consume secrets @ 05/14/24 04:40:27.106
  E0514 04:40:28.017920      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:29.018344      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:30.018451      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:31.019272      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:40:31.135
  May 14 04:40:31.145: INFO: Trying to get logs from node viola-paas-worker03 pod pod-projected-secrets-eda2c382-a116-429c-9d56-fe8cd2e55740 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/14/24 04:40:31.157
  May 14 04:40:31.193: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4188" for this suite. @ 05/14/24 04:40:31.198
• [4.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:341
  STEP: Creating a kubernetes client @ 05/14/24 04:40:31.208
  May 14 04:40:31.208: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename kubectl @ 05/14/24 04:40:31.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:40:31.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:40:31.243
  STEP: creating a replication controller @ 05/14/24 04:40:31.246
  May 14 04:40:31.247: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-9716 create -f -'
  E0514 04:40:32.020222      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:40:32.193: INFO: stderr: ""
  May 14 04:40:32.193: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/14/24 04:40:32.194
  May 14 04:40:32.194: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-9716 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 14 04:40:32.274: INFO: stderr: ""
  May 14 04:40:32.274: INFO: stdout: "update-demo-nautilus-6lczd update-demo-nautilus-mhmmh "
  May 14 04:40:32.274: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-9716 get pods update-demo-nautilus-6lczd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 14 04:40:32.345: INFO: stderr: ""
  May 14 04:40:32.345: INFO: stdout: ""
  May 14 04:40:32.345: INFO: update-demo-nautilus-6lczd is created but not running
  E0514 04:40:33.020279      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:34.020738      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:35.021124      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:36.021880      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:37.022176      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:40:37.345: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-9716 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 14 04:40:37.409: INFO: stderr: ""
  May 14 04:40:37.409: INFO: stdout: "update-demo-nautilus-6lczd update-demo-nautilus-mhmmh "
  May 14 04:40:37.409: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-9716 get pods update-demo-nautilus-6lczd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 14 04:40:37.473: INFO: stderr: ""
  May 14 04:40:37.473: INFO: stdout: "true"
  May 14 04:40:37.473: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-9716 get pods update-demo-nautilus-6lczd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 14 04:40:37.538: INFO: stderr: ""
  May 14 04:40:37.538: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 14 04:40:37.538: INFO: validating pod update-demo-nautilus-6lczd
  May 14 04:40:37.551: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 14 04:40:37.551: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 14 04:40:37.551: INFO: update-demo-nautilus-6lczd is verified up and running
  May 14 04:40:37.551: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-9716 get pods update-demo-nautilus-mhmmh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 14 04:40:37.614: INFO: stderr: ""
  May 14 04:40:37.614: INFO: stdout: "true"
  May 14 04:40:37.614: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-9716 get pods update-demo-nautilus-mhmmh -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 14 04:40:37.670: INFO: stderr: ""
  May 14 04:40:37.670: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 14 04:40:37.670: INFO: validating pod update-demo-nautilus-mhmmh
  May 14 04:40:37.676: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 14 04:40:37.676: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 14 04:40:37.676: INFO: update-demo-nautilus-mhmmh is verified up and running
  STEP: using delete to clean up resources @ 05/14/24 04:40:37.676
  May 14 04:40:37.676: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-9716 delete --grace-period=0 --force -f -'
  May 14 04:40:37.753: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 14 04:40:37.753: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  May 14 04:40:37.753: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-9716 get rc,svc -l name=update-demo --no-headers'
  May 14 04:40:37.821: INFO: stderr: "No resources found in kubectl-9716 namespace.\n"
  May 14 04:40:37.821: INFO: stdout: ""
  May 14 04:40:37.821: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-9716 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  May 14 04:40:37.881: INFO: stderr: ""
  May 14 04:40:37.881: INFO: stdout: ""
  May 14 04:40:37.881: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9716" for this suite. @ 05/14/24 04:40:37.901
• [6.707 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 05/14/24 04:40:37.916
  May 14 04:40:37.916: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename deployment @ 05/14/24 04:40:37.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:40:37.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:40:37.946
  May 14 04:40:37.949: INFO: Creating simple deployment test-new-deployment
  May 14 04:40:37.970: INFO: deployment "test-new-deployment" doesn't have the required revision set
  E0514 04:40:38.022536      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:39.022566      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 05/14/24 04:40:39.987
  STEP: updating a scale subresource @ 05/14/24 04:40:39.99
  STEP: verifying the deployment Spec.Replicas was modified @ 05/14/24 04:40:39.997
  STEP: Patch a scale subresource @ 05/14/24 04:40:40.001
  E0514 04:40:40.023239      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:40:40.036: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7940",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "af52ff45-937c-4582-a116-2ada005b77e0",
      ResourceVersion: (string) (len=8) "26332162",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851258437,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851258437,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851258439,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851258439,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851258439,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851258439,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851258437,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 14 04:40:40.041: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7940",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "98df8238-28cf-4cd8-91ca-222ba23623fc",
      ResourceVersion: (string) (len=8) "26332166",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851258437,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "af52ff45-937c-4582-a116-2ada005b77e0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851258439,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 66 35 32 66 66  34 35 2d 39 33 37 63 2d  |\"af52ff45-937c-|
              00000120  34 35 38 32 2d 61 31 31  36 2d 32 61 64 61 30 30  |4582-a116-2ada00|
              00000130  35 62 37 37 65 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |5b77e0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851258440,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 14 04:40:40.048: INFO: Pod "test-new-deployment-557759b7c7-ssgpc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-ssgpc",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7940",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cd5effb2-ec71-4350-a5b1-f0967699bf79",
      ResourceVersion: (string) (len=8) "26332147",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851258437,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "98df8238-28cf-4cd8-91ca-222ba23623fc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851258437,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 38  64 66 38 32 33 38 2d 32  |d\":\"98df8238-2|
              00000090  38 63 66 2d 34 63 64 38  2d 39 31 63 61 2d 32 32  |8cf-4cd8-91ca-22|
              000000a0  32 62 61 32 33 36 32 33  66 63 5c 22 7d 22 3a 7b  |2ba23623fc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851258439,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 31 31 33 5c 22 7d  |10.233.64.113\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bltjl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bltjl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851258438,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851258439,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851258439,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851258437,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.241",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.64.113",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.113"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851258438,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851258438,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b985b665b7153c39700d87ca421d6a5ae112a41e1559af11920d4dedbea74d23",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:40:40.049: INFO: Pod "test-new-deployment-557759b7c7-tk2vv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-tk2vv",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7940",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d02f08e3-0b7c-40fa-8251-b417eb9445b6",
      ResourceVersion: (string) (len=8) "26332167",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851258440,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "98df8238-28cf-4cd8-91ca-222ba23623fc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851258440,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 38  64 66 38 32 33 38 2d 32  |d\":\"98df8238-2|
              00000090  38 63 66 2d 34 63 64 38  2d 39 31 63 61 2d 32 32  |8cf-4cd8-91ca-22|
              000000a0  32 62 61 32 33 36 32 33  66 63 5c 22 7d 22 3a 7b  |2ba23623fc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t6ktl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t6ktl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851258440,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:40:40.050: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7940" for this suite. @ 05/14/24 04:40:40.057
• [2.170 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:107
  STEP: Creating a kubernetes client @ 05/14/24 04:40:40.087
  May 14 04:40:40.087: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename emptydir @ 05/14/24 04:40:40.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:40:40.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:40:40.135
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/14/24 04:40:40.138
  E0514 04:40:41.023461      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:42.023742      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:43.023948      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:44.024354      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:40:44.165
  May 14 04:40:44.169: INFO: Trying to get logs from node viola-paas-worker03 pod pod-2b1bdc3e-7b0c-4763-915a-51ac601ca591 container test-container: <nil>
  STEP: delete the pod @ 05/14/24 04:40:44.175
  May 14 04:40:44.197: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9473" for this suite. @ 05/14/24 04:40:44.203
• [4.151 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
test/e2e/apps/job.go:430
  STEP: Creating a kubernetes client @ 05/14/24 04:40:44.238
  May 14 04:40:44.238: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename job @ 05/14/24 04:40:44.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:40:44.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:40:44.266
  STEP: Creating a job @ 05/14/24 04:40:44.269
  STEP: Ensuring job reaches completions @ 05/14/24 04:40:44.277
  E0514 04:40:45.025072      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:46.025453      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:47.025484      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:48.025645      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:49.025734      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:50.026368      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:51.026558      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:52.026497      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:53.027050      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:54.027543      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:40:54.282: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-849" for this suite. @ 05/14/24 04:40:54.289
• [10.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 05/14/24 04:40:54.301
  May 14 04:40:54.301: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename watch @ 05/14/24 04:40:54.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:40:54.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:40:54.33
  STEP: getting a starting resourceVersion @ 05/14/24 04:40:54.333
  STEP: starting a background goroutine to produce watch events @ 05/14/24 04:40:54.336
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 05/14/24 04:40:54.336
  E0514 04:40:55.028371      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:56.029198      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:57.029648      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:40:57.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9573" for this suite. @ 05/14/24 04:40:57.162
• [2.912 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance]
test/e2e/common/node/secrets.go:154
  STEP: Creating a kubernetes client @ 05/14/24 04:40:57.217
  May 14 04:40:57.217: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename secrets @ 05/14/24 04:40:57.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:40:57.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:40:57.251
  STEP: creating a secret @ 05/14/24 04:40:57.254
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 05/14/24 04:40:57.26
  STEP: patching the secret @ 05/14/24 04:40:57.37
  STEP: deleting the secret using a LabelSelector @ 05/14/24 04:40:57.386
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 05/14/24 04:40:57.395
  May 14 04:40:57.442: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9852" for this suite. @ 05/14/24 04:40:57.449
• [0.241 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 05/14/24 04:40:57.459
  May 14 04:40:57.459: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/14/24 04:40:57.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:40:57.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:40:57.545
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 05/14/24 04:40:57.548
  May 14 04:40:57.549: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  E0514 04:40:58.030655      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:40:59.031156      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:00.031240      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:01.032127      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:02.032757      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:03.032987      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:04.033762      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:05.034908      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:06.035301      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:07.036407      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:08.037075      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:09.038200      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:10.038602      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:11.039489      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 05/14/24 04:41:11.48
  May 14 04:41:11.481: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  E0514 04:41:12.040015      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:13.040045      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:14.041073      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:15.041599      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:16.042202      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:17.042371      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:18.043176      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:19.043722      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:41:19.499: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  E0514 04:41:20.044260      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:21.044544      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:22.045260      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:23.046231      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:24.047101      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:25.047485      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:26.047687      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:27.048911      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:28.052736      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:29.052699      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:30.053042      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:31.053134      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:32.054160      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:33.054818      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:34.055209      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:41:34.554: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-519" for this suite. @ 05/14/24 04:41:34.565
• [37.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 05/14/24 04:41:34.577
  May 14 04:41:34.577: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename container-probe @ 05/14/24 04:41:34.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:41:34.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:41:34.623
  STEP: Creating pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525 @ 05/14/24 04:41:34.625
  E0514 04:41:35.056189      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:36.056400      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/14/24 04:41:36.651
  May 14 04:41:36.654: INFO: Initial restart count of pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 is 0
  May 14 04:41:36.657: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:41:37.057275      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:38.057607      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:41:38.664: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:41:39.058093      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:40.058456      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:41:40.671: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:41:41.059521      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:42.060088      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:41:42.677: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:41:43.060257      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:44.060428      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:41:44.681: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:41:45.061414      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:46.062445      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:41:46.687: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:41:47.062637      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:48.063143      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:41:48.693: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:41:49.063786      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:50.063962      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:41:50.699: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:41:51.064769      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:52.065108      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:41:52.706: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:41:53.065972      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:54.066974      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:41:54.713: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:41:55.067770      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:56.067961      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:41:56.720: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:41:57.068762      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:41:58.069126      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:41:58.725: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:41:59.069730      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:42:00.070068      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:42:00.731: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:42:01.070764      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:42:02.071631      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:42:02.736: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:42:03.072745      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:42:04.072910      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:42:04.741: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:42:05.073490      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:42:06.074197      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:42:06.748: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:42:07.074786      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:42:08.075310      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:42:08.754: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:42:09.075999      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:42:10.076343      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:42:10.760: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:42:11.077263      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:42:12.077594      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:42:12.767: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:42:13.078523      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:42:14.078845      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:42:14.774: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:42:15.078966      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:42:16.079843      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:42:16.781: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:42:17.080684      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:42:18.080853      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:42:18.785: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:42:19.081505      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:42:20.081610      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:42:20.791: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:42:21.082552      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:42:22.082796      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:42:22.795: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:42:23.083755      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:42:24.084065      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:42:24.801: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:42:25.084875      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:42:26.085078      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:42:26.808: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:42:27.085253      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:42:28.085724      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:42:28.813: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:42:29.086357      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:42:30.086832      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:42:30.820: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:42:31.087351      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:42:32.087792      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:42:32.825: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:42:33.088524      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:42:34.088761      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:42:34.830: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:42:35.089760      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:42:36.089856      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:42:36.836: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:42:37.090848      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:42:38.091222      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:42:38.842: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:42:39.091219      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:42:40.091607      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:42:40.849: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:42:41.092071      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:42:42.092453      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:42:42.854: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:42:43.093188      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:42:44.093663      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:42:44.860: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:42:45.094523      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:42:46.095271      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:42:46.867: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:42:47.096142      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:42:48.096433      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:42:48.872: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:42:49.097356      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:42:50.097702      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:42:50.879: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:42:51.098814      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:42:52.099311      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:42:52.885: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:42:53.100325      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:42:54.100700      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:42:54.890: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:42:55.101256      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:42:56.102076      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:42:56.901: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:42:57.102685      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:42:58.102979      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:42:58.905: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:42:59.103940      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:43:00.104293      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:43:00.911: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:43:01.104472      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:43:02.105012      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:43:02.916: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:43:03.105513      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:43:04.105802      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:43:04.921: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:43:05.105873      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:43:06.106924      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:43:06.927: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:43:07.107420      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:43:08.107649      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:43:08.931: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:43:09.107812      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:43:10.107931      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:43:10.935: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:43:11.108977      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:43:12.109310      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:43:12.943: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:43:13.109378      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:43:14.109597      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:43:14.948: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:43:15.109935      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:43:16.110827      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:43:16.954: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:43:17.111020      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:43:18.111348      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:43:18.960: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:43:19.111655      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:43:20.112005      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:43:20.965: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:43:21.112505      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:43:22.112893      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:43:22.970: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:43:23.113421      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:43:24.113576      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:43:24.975: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:43:25.114419      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:43:26.115412      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:43:26.986: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:43:27.115120      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:43:28.115468      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:43:28.991: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:43:29.115930      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:43:30.116365      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:43:30.996: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:43:31.117311      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:43:32.118089      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:43:33.003: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:43:33.118354      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:43:34.119319      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:43:35.009: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:43:35.120041      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:43:36.120600      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:43:37.014: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:43:37.121052      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:43:38.121349      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:43:39.021: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:43:39.121666      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:43:40.122134      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:43:41.031: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:43:41.123143      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:43:42.123501      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:43:43.037: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:43:43.123776      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:43:44.124084      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:43:45.042: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:43:45.125031      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:43:46.125793      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:43:47.047: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:43:47.126527      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:43:48.126800      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:43:49.051: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:43:49.127142      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:43:50.127438      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:43:51.057: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:43:51.128119      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:43:52.128414      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:43:53.062: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:43:53.129070      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:43:54.129295      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:43:55.069: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:43:55.129410      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:43:56.129593      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:43:57.073: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:43:57.129808      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:43:58.129957      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:43:59.077: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:43:59.131085      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:44:00.131282      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:44:01.083: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:44:01.131268      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:44:02.131450      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:44:03.090: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:44:03.131739      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:44:04.132067      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:44:05.096: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:44:05.132164      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:44:06.132769      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:44:07.102: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:44:07.133760      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:44:08.134094      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:44:09.108: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:44:09.134241      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:44:10.134597      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:44:11.114: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:44:11.135584      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:44:12.135913      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:44:13.119: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:44:13.136638      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:44:14.136999      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:44:15.124: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:44:15.137646      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:44:16.138403      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:44:17.129: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:44:17.138449      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:44:18.138734      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:44:19.135: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:44:19.139216      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:44:20.139817      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:44:21.139823      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:44:21.141: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:44:22.140546      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:44:23.141515      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:44:23.148: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:44:24.142513      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:44:25.142965      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:44:25.153: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:44:26.143714      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:44:27.144072      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:44:27.159: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:44:28.144852      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:44:29.145216      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:44:29.165: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:44:30.145486      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:44:31.146120      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:44:31.172: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:44:32.146646      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:44:33.146940      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:44:33.177: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:44:34.147618      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:44:35.148228      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:44:35.181: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:44:36.148666      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:44:37.149017      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:44:37.187: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:44:38.149275      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:44:39.149638      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:44:39.195: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:44:40.150381      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:44:41.150875      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:44:41.202: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:44:42.151596      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:44:43.151938      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:44:43.209: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:44:44.152907      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:44:45.153648      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:44:45.215: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:44:46.154270      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:44:47.154616      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:44:47.220: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:44:48.155628      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:44:49.155961      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:44:49.226: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:44:50.156174      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:44:51.156952      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:44:51.232: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:44:52.157290      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:44:53.157637      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:44:53.238: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:44:54.158169      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:44:55.158704      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:44:55.245: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:44:56.159506      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:44:57.159840      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:44:57.252: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:44:58.160170      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:44:59.160502      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:44:59.257: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:45:00.161205      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:01.161749      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:45:01.263: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:45:02.162842      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:03.163168      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:45:03.268: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:45:04.163835      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:05.164636      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:45:05.275: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:45:06.165610      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:07.165908      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:45:07.281: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:45:08.166327      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:09.166667      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:45:09.287: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:45:10.167817      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:11.168204      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:45:11.292: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:45:12.168726      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:13.169071      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:45:13.297: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:45:14.169342      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:15.169849      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:45:15.302: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:45:16.170082      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:17.170436      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:45:17.308: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:45:18.170590      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:19.170958      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:45:19.313: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:45:20.171272      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:21.171873      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:45:21.320: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:45:22.171885      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:23.172066      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:45:23.325: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:45:24.172648      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:25.173311      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:45:25.331: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:45:26.173557      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:27.174070      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:45:27.339: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:45:28.175172      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:29.175470      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:45:29.345: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:45:30.175959      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:31.176293      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:45:31.352: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:45:32.176558      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:33.176891      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:45:33.363: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:45:34.177118      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:35.177370      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:45:35.369: INFO: Get pod liveness-f095de41-4045-4fc3-a709-3e9b959003f4 in namespace container-probe-6525
  E0514 04:45:36.178231      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:37.178444      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:45:37.370: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/14/24 04:45:37.378
  STEP: Destroying namespace "container-probe-6525" for this suite. @ 05/14/24 04:45:37.398
• [242.833 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance]
test/e2e/apimachinery/resource_quota.go:1013
  STEP: Creating a kubernetes client @ 05/14/24 04:45:37.411
  May 14 04:45:37.411: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename resourcequota @ 05/14/24 04:45:37.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:45:37.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:45:37.435
  STEP: Creating resourceQuota "e2e-rq-status-fmc5p" @ 05/14/24 04:45:37.441
  May 14 04:45:37.449: INFO: Resource quota "e2e-rq-status-fmc5p" reports spec: hard cpu limit of 500m
  May 14 04:45:37.449: INFO: Resource quota "e2e-rq-status-fmc5p" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-fmc5p" /status @ 05/14/24 04:45:37.449
  STEP: Confirm /status for "e2e-rq-status-fmc5p" resourceQuota via watch @ 05/14/24 04:45:37.463
  May 14 04:45:37.464: INFO: observed resourceQuota "e2e-rq-status-fmc5p" in namespace "resourcequota-1521" with hard status: v1.ResourceList(nil)
  May 14 04:45:37.464: INFO: Found resourceQuota "e2e-rq-status-fmc5p" in namespace "resourcequota-1521" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  May 14 04:45:37.464: INFO: ResourceQuota "e2e-rq-status-fmc5p" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 05/14/24 04:45:37.471
  May 14 04:45:37.480: INFO: Resource quota "e2e-rq-status-fmc5p" reports spec: hard cpu limit of 1
  May 14 04:45:37.480: INFO: Resource quota "e2e-rq-status-fmc5p" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-fmc5p" /status @ 05/14/24 04:45:37.48
  STEP: Confirm /status for "e2e-rq-status-fmc5p" resourceQuota via watch @ 05/14/24 04:45:37.493
  May 14 04:45:37.494: INFO: observed resourceQuota "e2e-rq-status-fmc5p" in namespace "resourcequota-1521" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  May 14 04:45:37.494: INFO: Found resourceQuota "e2e-rq-status-fmc5p" in namespace "resourcequota-1521" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  May 14 04:45:37.494: INFO: ResourceQuota "e2e-rq-status-fmc5p" /status was patched
  STEP: Get "e2e-rq-status-fmc5p" /status @ 05/14/24 04:45:37.494
  May 14 04:45:37.498: INFO: Resourcequota "e2e-rq-status-fmc5p" reports status: hard cpu of 1
  May 14 04:45:37.498: INFO: Resourcequota "e2e-rq-status-fmc5p" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-fmc5p" /status before checking Spec is unchanged @ 05/14/24 04:45:37.501
  May 14 04:45:37.510: INFO: Resourcequota "e2e-rq-status-fmc5p" reports status: hard cpu of 2
  May 14 04:45:37.510: INFO: Resourcequota "e2e-rq-status-fmc5p" reports status: hard memory of 2Gi
  May 14 04:45:37.511: INFO: Found resourceQuota "e2e-rq-status-fmc5p" in namespace "resourcequota-1521" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  E0514 04:45:38.178475      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:39.178721      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:40.179458      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:41.179817      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:42.180141      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:43.180954      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:44.181545      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:45.182409      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:46.182720      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:47.182831      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:48.183047      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:49.183329      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:50.184321      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:51.184619      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:52.184954      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:53.185463      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:54.185630      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:55.186305      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:56.186593      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:57.186787      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:58.187106      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:45:59.187327      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:00.187946      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:01.188081      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:02.188256      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:03.188580      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:04.188902      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:05.189000      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:06.189362      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:07.189713      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:08.190210      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:09.190472      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:10.191000      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:11.191310      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:12.191614      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:13.192557      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:14.192728      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:15.193700      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:16.194047      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:17.194182      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:18.194430      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:19.194860      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:20.195540      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:21.195859      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:22.196108      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:23.196275      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:24.196408      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:25.196938      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:26.197191      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:27.197295      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:28.198377      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:29.198410      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:30.199876      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:31.200657      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:32.201153      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:33.201570      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:34.201738      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:35.202519      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:36.202820      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:37.202995      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:38.204020      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:39.204392      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:40.205359      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:41.205422      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:42.205772      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:43.206376      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:44.206521      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:45.207333      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:46.207667      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:47.207851      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:48.208476      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:49.208904      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:50.209242      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:51.209554      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:52.209835      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:53.210179      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:54.210822      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:55.210739      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:56.211108      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:57.211253      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:58.212035      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:46:59.212360      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:00.213271      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:01.213580      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:02.213914      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:03.214400      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:04.214723      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:05.215542      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:06.215827      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:07.215894      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:08.216125      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:09.216473      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:10.217326      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:11.217618      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:12.217894      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:13.218291      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:14.218499      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:15.219154      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:16.219508      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:17.219795      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:18.220779      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:19.221031      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:20.221823      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:21.222182      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:22.222542      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:23.223612      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:24.224048      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:25.224150      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:26.224493      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:27.224702      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:28.224978      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:29.225404      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:30.225997      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:31.226349      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:32.226761      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:47:32.525: INFO: ResourceQuota "e2e-rq-status-fmc5p" Spec was unchanged and /status reset
  May 14 04:47:32.525: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1521" for this suite. @ 05/14/24 04:47:32.533
• [115.135 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:45
  STEP: Creating a kubernetes client @ 05/14/24 04:47:32.547
  May 14 04:47:32.547: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename downward-api @ 05/14/24 04:47:32.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:47:32.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:47:32.569
  STEP: Creating a pod to test downward api env vars @ 05/14/24 04:47:32.572
  E0514 04:47:33.227796      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:34.228668      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:35.228658      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:36.228890      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:47:36.593
  May 14 04:47:36.595: INFO: Trying to get logs from node viola-paas-worker03 pod downward-api-726ee94a-5ef7-4ee4-8bc4-dcc01f0eeca2 container dapi-container: <nil>
  STEP: delete the pod @ 05/14/24 04:47:36.604
  May 14 04:47:36.626: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-407" for this suite. @ 05/14/24 04:47:36.632
• [4.091 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 05/14/24 04:47:36.638
  May 14 04:47:36.638: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename deployment @ 05/14/24 04:47:36.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:47:36.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:47:36.668
  STEP: creating a Deployment @ 05/14/24 04:47:36.679
  STEP: waiting for Deployment to be created @ 05/14/24 04:47:36.689
  STEP: waiting for all Replicas to be Ready @ 05/14/24 04:47:36.698
  May 14 04:47:36.700: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 14 04:47:36.700: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 14 04:47:36.713: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 14 04:47:36.713: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 14 04:47:36.730: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 14 04:47:36.730: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 14 04:47:36.781: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 14 04:47:36.781: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0514 04:47:37.229574      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:47:37.909: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  May 14 04:47:37.909: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  May 14 04:47:38.148: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 05/14/24 04:47:38.148
  May 14 04:47:38.157: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 05/14/24 04:47:38.157
  May 14 04:47:38.158: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 0
  May 14 04:47:38.158: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 0
  May 14 04:47:38.158: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 0
  May 14 04:47:38.158: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 0
  May 14 04:47:38.158: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 0
  May 14 04:47:38.158: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 0
  May 14 04:47:38.159: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 0
  May 14 04:47:38.159: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 0
  May 14 04:47:38.159: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1
  May 14 04:47:38.159: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1
  May 14 04:47:38.159: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2
  May 14 04:47:38.159: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2
  May 14 04:47:38.159: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2
  May 14 04:47:38.159: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2
  May 14 04:47:38.184: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2
  May 14 04:47:38.184: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2
  E0514 04:47:38.229998      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:47:38.240: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2
  May 14 04:47:38.240: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2
  May 14 04:47:38.253: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1
  May 14 04:47:38.253: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1
  May 14 04:47:38.280: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1
  May 14 04:47:38.280: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1
  May 14 04:47:39.202: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2
  May 14 04:47:39.202: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2
  E0514 04:47:39.230920      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:47:39.261: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1
  STEP: listing Deployments @ 05/14/24 04:47:39.261
  May 14 04:47:39.268: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 05/14/24 04:47:39.268
  May 14 04:47:39.285: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 05/14/24 04:47:39.286
  May 14 04:47:39.291: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  May 14 04:47:39.315: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  May 14 04:47:39.354: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  May 14 04:47:39.389: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  May 14 04:47:39.418: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  May 14 04:47:40.180: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0514 04:47:40.231646      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:47:40.536: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  May 14 04:47:40.544: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0514 04:47:41.231670      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:47:41.967: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 05/14/24 04:47:41.994
  STEP: fetching the DeploymentStatus @ 05/14/24 04:47:42.01
  May 14 04:47:42.024: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1
  May 14 04:47:42.024: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1
  May 14 04:47:42.024: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1
  May 14 04:47:42.024: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1
  May 14 04:47:42.024: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1
  May 14 04:47:42.024: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2
  May 14 04:47:42.024: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2
  May 14 04:47:42.024: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2
  May 14 04:47:42.024: INFO: observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 3
  STEP: deleting the Deployment @ 05/14/24 04:47:42.024
  May 14 04:47:42.045: INFO: observed event type MODIFIED
  May 14 04:47:42.045: INFO: observed event type MODIFIED
  May 14 04:47:42.045: INFO: observed event type MODIFIED
  May 14 04:47:42.045: INFO: observed event type MODIFIED
  May 14 04:47:42.045: INFO: observed event type MODIFIED
  May 14 04:47:42.045: INFO: observed event type MODIFIED
  May 14 04:47:42.045: INFO: observed event type MODIFIED
  May 14 04:47:42.045: INFO: observed event type MODIFIED
  May 14 04:47:42.045: INFO: observed event type MODIFIED
  May 14 04:47:42.045: INFO: observed event type MODIFIED
  May 14 04:47:42.045: INFO: observed event type MODIFIED
  May 14 04:47:42.045: INFO: observed event type MODIFIED
  May 14 04:47:42.058: INFO: Log out all the ReplicaSets if there is no deployment created
  May 14 04:47:42.072: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3039" for this suite. @ 05/14/24 04:47:42.078
• [5.449 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:321
  STEP: Creating a kubernetes client @ 05/14/24 04:47:42.089
  May 14 04:47:42.089: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename gc @ 05/14/24 04:47:42.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:47:42.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:47:42.109
  STEP: create the rc @ 05/14/24 04:47:42.111
  W0514 04:47:42.116831      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0514 04:47:42.232119      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:43.232697      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:44.233075      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:45.233968      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:46.234364      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 05/14/24 04:47:47.121
  STEP: wait for all pods to be garbage collected @ 05/14/24 04:47:47.127
  E0514 04:47:47.235382      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:48.235719      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:49.235947      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:50.236509      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:51.236923      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/14/24 04:47:52.135
  May 14 04:47:52.231: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May 14 04:47:52.231: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0514 04:47:52.236858      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "gc-517" for this suite. @ 05/14/24 04:47:52.237
• [10.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 05/14/24 04:47:52.253
  May 14 04:47:52.253: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename pods @ 05/14/24 04:47:52.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:47:52.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:47:52.28
  May 14 04:47:52.283: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: creating the pod @ 05/14/24 04:47:52.284
  STEP: submitting the pod to kubernetes @ 05/14/24 04:47:52.284
  E0514 04:47:53.237229      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:54.237656      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:47:54.366: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9213" for this suite. @ 05/14/24 04:47:54.373
• [2.130 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 05/14/24 04:47:54.384
  May 14 04:47:54.384: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename dns @ 05/14/24 04:47:54.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:47:54.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:47:54.406
  STEP: Creating a test externalName service @ 05/14/24 04:47:54.409
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1891.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-1891.svc.cluster.local; sleep 1; done
   @ 05/14/24 04:47:54.417
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1891.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1891.svc.cluster.local; sleep 1; done
   @ 05/14/24 04:47:54.417
  STEP: creating a pod to probe DNS @ 05/14/24 04:47:54.417
  STEP: submitting the pod to kubernetes @ 05/14/24 04:47:54.417
  E0514 04:47:55.237946      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:56.238349      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/14/24 04:47:56.437
  STEP: looking for the results for each expected name from probers @ 05/14/24 04:47:56.441
  May 14 04:47:56.449: INFO: File jessie_udp@dns-test-service-3.dns-1891.svc.cluster.local from pod  dns-1891/dns-test-42e8c6e8-ea55-4964-8dcb-c813c37013e9 contains '' instead of 'foo.example.com.'
  May 14 04:47:56.449: INFO: Lookups using dns-1891/dns-test-42e8c6e8-ea55-4964-8dcb-c813c37013e9 failed for: [jessie_udp@dns-test-service-3.dns-1891.svc.cluster.local]

  May 14 04:47:56.454: INFO: Pod client logs for webserver: 
  May 14 04:47:56.459: INFO: Pod client logs for querier: 
  May 14 04:47:56.465: INFO: Pod client logs for jessie-querier: 
  E0514 04:47:57.238590      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:58.238921      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:47:59.239322      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:00.239926      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:01.240305      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:48:01.476: INFO: DNS probes using dns-test-42e8c6e8-ea55-4964-8dcb-c813c37013e9 succeeded

  STEP: changing the externalName to bar.example.com @ 05/14/24 04:48:01.476
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1891.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-1891.svc.cluster.local; sleep 1; done
   @ 05/14/24 04:48:01.486
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1891.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1891.svc.cluster.local; sleep 1; done
   @ 05/14/24 04:48:01.486
  STEP: creating a second pod to probe DNS @ 05/14/24 04:48:01.486
  STEP: submitting the pod to kubernetes @ 05/14/24 04:48:01.486
  E0514 04:48:02.240928      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:03.241254      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/14/24 04:48:03.504
  STEP: looking for the results for each expected name from probers @ 05/14/24 04:48:03.508
  May 14 04:48:03.514: INFO: File wheezy_udp@dns-test-service-3.dns-1891.svc.cluster.local from pod  dns-1891/dns-test-0a59d644-79de-4877-87af-5a9bc7c74309 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  May 14 04:48:03.518: INFO: File jessie_udp@dns-test-service-3.dns-1891.svc.cluster.local from pod  dns-1891/dns-test-0a59d644-79de-4877-87af-5a9bc7c74309 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  May 14 04:48:03.518: INFO: Lookups using dns-1891/dns-test-0a59d644-79de-4877-87af-5a9bc7c74309 failed for: [wheezy_udp@dns-test-service-3.dns-1891.svc.cluster.local jessie_udp@dns-test-service-3.dns-1891.svc.cluster.local]

  May 14 04:48:03.524: INFO: Pod client logs for webserver: 
  May 14 04:48:03.532: INFO: Pod client logs for querier: 
  May 14 04:48:03.537: INFO: Pod client logs for jessie-querier: 
  E0514 04:48:04.242437      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:05.243638      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:06.243599      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:07.244049      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:08.244585      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:48:08.553: INFO: DNS probes using dns-test-0a59d644-79de-4877-87af-5a9bc7c74309 succeeded

  STEP: changing the service to type=ClusterIP @ 05/14/24 04:48:08.553
  W0514 04:48:08.573679      23 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1891.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-1891.svc.cluster.local; sleep 1; done
   @ 05/14/24 04:48:08.573
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1891.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-1891.svc.cluster.local; sleep 1; done
   @ 05/14/24 04:48:08.573
  STEP: creating a third pod to probe DNS @ 05/14/24 04:48:08.573
  STEP: submitting the pod to kubernetes @ 05/14/24 04:48:08.578
  E0514 04:48:09.245437      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:10.245922      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/14/24 04:48:10.594
  STEP: looking for the results for each expected name from probers @ 05/14/24 04:48:10.598
  May 14 04:48:10.608: INFO: DNS probes using dns-test-dbb36594-eb4e-4f59-a263-8bbc2fcc9444 succeeded

  May 14 04:48:10.609: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/14/24 04:48:10.615
  STEP: deleting the pod @ 05/14/24 04:48:10.642
  STEP: deleting the pod @ 05/14/24 04:48:10.666
  STEP: deleting the test externalName service @ 05/14/24 04:48:10.706
  STEP: Destroying namespace "dns-1891" for this suite. @ 05/14/24 04:48:10.737
• [16.363 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 05/14/24 04:48:10.747
  May 14 04:48:10.747: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename webhook @ 05/14/24 04:48:10.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:48:10.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:48:10.781
  STEP: Setting up server cert @ 05/14/24 04:48:10.815
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/14/24 04:48:11.2
  STEP: Deploying the webhook pod @ 05/14/24 04:48:11.213
  STEP: Wait for the deployment to be ready @ 05/14/24 04:48:11.238
  E0514 04:48:11.246375      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:48:11.254: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0514 04:48:12.246946      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:13.247743      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:48:13.271: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 14, 4, 48, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 4, 48, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 14, 4, 48, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 4, 48, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0514 04:48:14.247935      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:15.248628      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/14/24 04:48:15.278
  STEP: Verifying the service has paired with the endpoint @ 05/14/24 04:48:15.296
  E0514 04:48:16.249443      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:48:16.296: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 05/14/24 04:48:16.307
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/14/24 04:48:16.307
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 05/14/24 04:48:16.331
  E0514 04:48:17.250144      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 05/14/24 04:48:17.348
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/14/24 04:48:17.348
  E0514 04:48:18.250582      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 05/14/24 04:48:18.392
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/14/24 04:48:18.392
  E0514 04:48:19.251570      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:20.252275      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:21.252687      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:22.252739      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:23.252934      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 05/14/24 04:48:23.432
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/14/24 04:48:23.432
  E0514 04:48:24.253777      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:25.254168      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:26.254755      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:27.254824      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:28.255219      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:48:28.469: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2506" for this suite. @ 05/14/24 04:48:28.555
  STEP: Destroying namespace "webhook-markers-5530" for this suite. @ 05/14/24 04:48:28.565
• [17.827 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance]
test/e2e/apps/job.go:713
  STEP: Creating a kubernetes client @ 05/14/24 04:48:28.575
  May 14 04:48:28.575: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename job @ 05/14/24 04:48:28.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:48:28.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:48:28.608
  STEP: Creating a suspended job @ 05/14/24 04:48:28.615
  STEP: Patching the Job @ 05/14/24 04:48:28.627
  STEP: Watching for Job to be patched @ 05/14/24 04:48:28.64
  May 14 04:48:28.643: INFO: Event ADDED observed for Job e2e-tskxg in namespace job-5397 with labels: map[e2e-job-label:e2e-tskxg] and annotations: map[]
  May 14 04:48:28.643: INFO: Event MODIFIED found for Job e2e-tskxg in namespace job-5397 with labels: map[e2e-job-label:e2e-tskxg e2e-tskxg:patched] and annotations: map[]
  STEP: Updating the job @ 05/14/24 04:48:28.643
  STEP: Watching for Job to be updated @ 05/14/24 04:48:28.658
  May 14 04:48:28.661: INFO: Event MODIFIED found for Job e2e-tskxg in namespace job-5397 with labels: map[e2e-job-label:e2e-tskxg e2e-tskxg:patched] and annotations: map[updated:true]
  May 14 04:48:28.661: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 05/14/24 04:48:28.661
  May 14 04:48:28.665: INFO: Job: e2e-tskxg as labels: map[e2e-job-label:e2e-tskxg e2e-tskxg:patched]
  STEP: Waiting for job to complete @ 05/14/24 04:48:28.665
  E0514 04:48:29.255420      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:30.256190      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:31.256754      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:32.257116      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:33.257903      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:34.258406      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:35.259185      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:36.259371      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 05/14/24 04:48:36.671
  STEP: Watching for Job to be deleted @ 05/14/24 04:48:36.68
  May 14 04:48:36.682: INFO: Event MODIFIED observed for Job e2e-tskxg in namespace job-5397 with labels: map[e2e-job-label:e2e-tskxg e2e-tskxg:patched] and annotations: map[updated:true]
  May 14 04:48:36.682: INFO: Event MODIFIED observed for Job e2e-tskxg in namespace job-5397 with labels: map[e2e-job-label:e2e-tskxg e2e-tskxg:patched] and annotations: map[updated:true]
  May 14 04:48:36.682: INFO: Event MODIFIED observed for Job e2e-tskxg in namespace job-5397 with labels: map[e2e-job-label:e2e-tskxg e2e-tskxg:patched] and annotations: map[updated:true]
  May 14 04:48:36.682: INFO: Event MODIFIED observed for Job e2e-tskxg in namespace job-5397 with labels: map[e2e-job-label:e2e-tskxg e2e-tskxg:patched] and annotations: map[updated:true]
  May 14 04:48:36.682: INFO: Event MODIFIED observed for Job e2e-tskxg in namespace job-5397 with labels: map[e2e-job-label:e2e-tskxg e2e-tskxg:patched] and annotations: map[updated:true]
  May 14 04:48:36.682: INFO: Event DELETED found for Job e2e-tskxg in namespace job-5397 with labels: map[e2e-job-label:e2e-tskxg e2e-tskxg:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 05/14/24 04:48:36.682
  May 14 04:48:36.686: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5397" for this suite. @ 05/14/24 04:48:36.697
• [8.143 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 05/14/24 04:48:36.718
  May 14 04:48:36.719: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/14/24 04:48:36.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:48:36.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:48:36.742
  May 14 04:48:36.746: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  E0514 04:48:37.259951      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:38.260429      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:39.261160      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:40.261991      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:41.262458      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:42.262584      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:43.263036      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:44.263329      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/14/24 04:48:44.484
  May 14 04:48:44.485: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=crd-publish-openapi-10 --namespace=crd-publish-openapi-10 create -f -'
  E0514 04:48:45.264013      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:48:45.758: INFO: stderr: ""
  May 14 04:48:45.758: INFO: stdout: "e2e-test-crd-publish-openapi-357-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  May 14 04:48:45.758: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=crd-publish-openapi-10 --namespace=crd-publish-openapi-10 delete e2e-test-crd-publish-openapi-357-crds test-cr'
  May 14 04:48:45.839: INFO: stderr: ""
  May 14 04:48:45.839: INFO: stdout: "e2e-test-crd-publish-openapi-357-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  May 14 04:48:45.840: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=crd-publish-openapi-10 --namespace=crd-publish-openapi-10 apply -f -'
  May 14 04:48:46.101: INFO: stderr: ""
  May 14 04:48:46.101: INFO: stdout: "e2e-test-crd-publish-openapi-357-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  May 14 04:48:46.101: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=crd-publish-openapi-10 --namespace=crd-publish-openapi-10 delete e2e-test-crd-publish-openapi-357-crds test-cr'
  May 14 04:48:46.173: INFO: stderr: ""
  May 14 04:48:46.173: INFO: stdout: "e2e-test-crd-publish-openapi-357-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/14/24 04:48:46.173
  May 14 04:48:46.173: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=crd-publish-openapi-10 explain e2e-test-crd-publish-openapi-357-crds'
  E0514 04:48:46.264482      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:48:46.411: INFO: stderr: ""
  May 14 04:48:46.411: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-357-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0514 04:48:47.264884      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:48.265390      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:48:49.057: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-10" for this suite. @ 05/14/24 04:48:49.067
• [12.357 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 05/14/24 04:48:49.078
  May 14 04:48:49.078: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename configmap @ 05/14/24 04:48:49.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:48:49.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:48:49.108
  STEP: Creating configMap with name configmap-test-volume-map-dbdd63be-9d9c-4ff9-9e74-6ac4281a17a8 @ 05/14/24 04:48:49.11
  STEP: Creating a pod to test consume configMaps @ 05/14/24 04:48:49.115
  E0514 04:48:49.265930      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:50.266526      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:51.267571      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:52.268264      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:48:53.142
  May 14 04:48:53.145: INFO: Trying to get logs from node viola-paas-worker03 pod pod-configmaps-5e4fc228-d8b2-4e7d-8634-d7d04d9a4eef container agnhost-container: <nil>
  STEP: delete the pod @ 05/14/24 04:48:53.158
  May 14 04:48:53.184: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2232" for this suite. @ 05/14/24 04:48:53.192
• [4.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 05/14/24 04:48:53.203
  May 14 04:48:53.203: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename dns @ 05/14/24 04:48:53.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:48:53.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:48:53.24
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 05/14/24 04:48:53.243
  E0514 04:48:53.269078      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:48:53.357: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-5489  398493d6-2b93-4bf9-8cd6-f504bea75a7c 26336131 0 2024-05-14 04:48:53 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-05-14 04:48:53 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-bgvn2,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.45,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-bgvn2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0514 04:48:54.269772      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:55.270792      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 05/14/24 04:48:55.366
  May 14 04:48:55.366: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-5489 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 04:48:55.366: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 04:48:55.367: INFO: ExecWithOptions: Clientset creation
  May 14 04:48:55.367: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-5489/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 05/14/24 04:48:55.434
  May 14 04:48:55.434: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-5489 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 04:48:55.434: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 04:48:55.435: INFO: ExecWithOptions: Clientset creation
  May 14 04:48:55.435: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-5489/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 14 04:48:55.494: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May 14 04:48:55.501: INFO: Deleting pod test-dns-nameservers...
  STEP: Destroying namespace "dns-5489" for this suite. @ 05/14/24 04:48:55.519
• [2.331 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:370
  STEP: Creating a kubernetes client @ 05/14/24 04:48:55.534
  May 14 04:48:55.534: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename namespaces @ 05/14/24 04:48:55.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:48:55.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:48:55.568
  STEP: Updating Namespace "namespaces-698" @ 05/14/24 04:48:55.571
  May 14 04:48:55.583: INFO: Namespace "namespaces-698" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"d67b12ce-b209-4ec2-980e-6b4cf5e11100", "kubernetes.io/metadata.name":"namespaces-698", "namespaces-698":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  May 14 04:48:55.583: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-698" for this suite. @ 05/14/24 04:48:55.588
• [0.061 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance]
test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 05/14/24 04:48:55.595
  May 14 04:48:55.595: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename deployment @ 05/14/24 04:48:55.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:48:55.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:48:55.623
  STEP: creating a Deployment @ 05/14/24 04:48:55.631
  May 14 04:48:55.631: INFO: Creating simple deployment test-deployment-jxsqn
  May 14 04:48:55.648: INFO: new replicaset for deployment "test-deployment-jxsqn" is yet to be created
  E0514 04:48:56.271550      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:57.271731      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 05/14/24 04:48:57.664
  May 14 04:48:57.667: INFO: Deployment test-deployment-jxsqn has Conditions: [{Available True 2024-05-14 04:48:57 +0000 UTC 2024-05-14 04:48:57 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-05-14 04:48:57 +0000 UTC 2024-05-14 04:48:55 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-jxsqn-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 05/14/24 04:48:57.667
  May 14 04:48:57.682: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 14, 4, 48, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 4, 48, 57, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 14, 4, 48, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 4, 48, 55, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-jxsqn-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 05/14/24 04:48:57.682
  May 14 04:48:57.685: INFO: Observed &Deployment event: ADDED
  May 14 04:48:57.685: INFO: Observed Deployment test-deployment-jxsqn in namespace deployment-8810 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-14 04:48:55 +0000 UTC 2024-05-14 04:48:55 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-jxsqn-5d576bd769"}
  May 14 04:48:57.685: INFO: Observed &Deployment event: MODIFIED
  May 14 04:48:57.685: INFO: Observed Deployment test-deployment-jxsqn in namespace deployment-8810 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-14 04:48:55 +0000 UTC 2024-05-14 04:48:55 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-jxsqn-5d576bd769"}
  May 14 04:48:57.685: INFO: Observed Deployment test-deployment-jxsqn in namespace deployment-8810 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-14 04:48:55 +0000 UTC 2024-05-14 04:48:55 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  May 14 04:48:57.686: INFO: Observed &Deployment event: MODIFIED
  May 14 04:48:57.686: INFO: Observed Deployment test-deployment-jxsqn in namespace deployment-8810 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-14 04:48:55 +0000 UTC 2024-05-14 04:48:55 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  May 14 04:48:57.686: INFO: Observed Deployment test-deployment-jxsqn in namespace deployment-8810 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-14 04:48:55 +0000 UTC 2024-05-14 04:48:55 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-jxsqn-5d576bd769" is progressing.}
  May 14 04:48:57.686: INFO: Observed &Deployment event: MODIFIED
  May 14 04:48:57.686: INFO: Observed Deployment test-deployment-jxsqn in namespace deployment-8810 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-14 04:48:57 +0000 UTC 2024-05-14 04:48:57 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  May 14 04:48:57.686: INFO: Observed Deployment test-deployment-jxsqn in namespace deployment-8810 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-14 04:48:57 +0000 UTC 2024-05-14 04:48:55 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-jxsqn-5d576bd769" has successfully progressed.}
  May 14 04:48:57.686: INFO: Observed &Deployment event: MODIFIED
  May 14 04:48:57.686: INFO: Observed Deployment test-deployment-jxsqn in namespace deployment-8810 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-14 04:48:57 +0000 UTC 2024-05-14 04:48:57 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  May 14 04:48:57.686: INFO: Observed Deployment test-deployment-jxsqn in namespace deployment-8810 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-14 04:48:57 +0000 UTC 2024-05-14 04:48:55 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-jxsqn-5d576bd769" has successfully progressed.}
  May 14 04:48:57.686: INFO: Found Deployment test-deployment-jxsqn in namespace deployment-8810 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May 14 04:48:57.686: INFO: Deployment test-deployment-jxsqn has an updated status
  STEP: patching the Statefulset Status @ 05/14/24 04:48:57.686
  May 14 04:48:57.686: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  May 14 04:48:57.697: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 05/14/24 04:48:57.697
  May 14 04:48:57.699: INFO: Observed &Deployment event: ADDED
  May 14 04:48:57.699: INFO: Observed deployment test-deployment-jxsqn in namespace deployment-8810 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-14 04:48:55 +0000 UTC 2024-05-14 04:48:55 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-jxsqn-5d576bd769"}
  May 14 04:48:57.699: INFO: Observed &Deployment event: MODIFIED
  May 14 04:48:57.699: INFO: Observed deployment test-deployment-jxsqn in namespace deployment-8810 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-14 04:48:55 +0000 UTC 2024-05-14 04:48:55 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-jxsqn-5d576bd769"}
  May 14 04:48:57.699: INFO: Observed deployment test-deployment-jxsqn in namespace deployment-8810 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-14 04:48:55 +0000 UTC 2024-05-14 04:48:55 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  May 14 04:48:57.699: INFO: Observed &Deployment event: MODIFIED
  May 14 04:48:57.699: INFO: Observed deployment test-deployment-jxsqn in namespace deployment-8810 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-14 04:48:55 +0000 UTC 2024-05-14 04:48:55 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  May 14 04:48:57.699: INFO: Observed deployment test-deployment-jxsqn in namespace deployment-8810 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-14 04:48:55 +0000 UTC 2024-05-14 04:48:55 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-jxsqn-5d576bd769" is progressing.}
  May 14 04:48:57.699: INFO: Observed &Deployment event: MODIFIED
  May 14 04:48:57.699: INFO: Observed deployment test-deployment-jxsqn in namespace deployment-8810 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-14 04:48:57 +0000 UTC 2024-05-14 04:48:57 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  May 14 04:48:57.699: INFO: Observed deployment test-deployment-jxsqn in namespace deployment-8810 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-14 04:48:57 +0000 UTC 2024-05-14 04:48:55 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-jxsqn-5d576bd769" has successfully progressed.}
  May 14 04:48:57.699: INFO: Observed &Deployment event: MODIFIED
  May 14 04:48:57.699: INFO: Observed deployment test-deployment-jxsqn in namespace deployment-8810 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-14 04:48:57 +0000 UTC 2024-05-14 04:48:57 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  May 14 04:48:57.699: INFO: Observed deployment test-deployment-jxsqn in namespace deployment-8810 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-14 04:48:57 +0000 UTC 2024-05-14 04:48:55 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-jxsqn-5d576bd769" has successfully progressed.}
  May 14 04:48:57.699: INFO: Observed deployment test-deployment-jxsqn in namespace deployment-8810 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May 14 04:48:57.700: INFO: Observed &Deployment event: MODIFIED
  May 14 04:48:57.700: INFO: Found deployment test-deployment-jxsqn in namespace deployment-8810 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  May 14 04:48:57.700: INFO: Deployment test-deployment-jxsqn has a patched status
  May 14 04:48:57.706: INFO: Deployment "test-deployment-jxsqn":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-jxsqn",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8810",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "61cf5f93-10dc-4d5c-906b-e9d024aa7083",
      ResourceVersion: (string) (len=8) "26336203",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851258935,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851258935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851258937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851258937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851258937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851258937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-jxsqn-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 14 04:48:57.712: INFO: New ReplicaSet "test-deployment-jxsqn-5d576bd769" of Deployment "test-deployment-jxsqn":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-jxsqn-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8810",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7093b033-d8f1-47b2-886d-ea32204f52ce",
      ResourceVersion: (string) (len=8) "26336196",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851258935,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-jxsqn",
          UID: (types.UID) (len=36) "61cf5f93-10dc-4d5c-906b-e9d024aa7083",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851258935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 36 31 63  |k:{\"uid\":\"61c|
              00000120  66 35 66 39 33 2d 31 30  64 63 2d 34 64 35 63 2d  |f5f93-10dc-4d5c-|
              00000130  39 30 36 62 2d 65 39 64  30 32 34 61 61 37 30 38  |906b-e9d024aa708|
              00000140  33 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |3\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851258937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 14 04:48:57.722: INFO: Pod "test-deployment-jxsqn-5d576bd769-bhk4f" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-jxsqn-5d576bd769-bhk4f",
      GenerateName: (string) (len=33) "test-deployment-jxsqn-5d576bd769-",
      Namespace: (string) (len=15) "deployment-8810",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e6c60255-2e9e-404a-bdeb-69976b3150b3",
      ResourceVersion: (string) (len=8) "26336195",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851258935,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-jxsqn-5d576bd769",
          UID: (types.UID) (len=36) "7093b033-d8f1-47b2-886d-ea32204f52ce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851258935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 37 30 39 33 62 30 33  33 2d 64 38 66 31 2d 34  |"7093b033-d8f1-4|
              000000a0  37 62 32 2d 38 38 36 64  2d 65 61 33 32 32 30 34  |7b2-886d-ea32204|
              000000b0  66 35 32 63 65 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |f52ce\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851258937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 31 32 31 5c 22 7d  |10.233.64.121\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6khw8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6khw8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851258935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851258937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851258937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851258935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.241",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.64.121",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.121"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851258935,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851258936,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6e91944430a4844cb8f176bac14893be13c8172261d818f3dc24359c3af55c56",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 04:48:57.723: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8810" for this suite. @ 05/14/24 04:48:57.73
• [2.146 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]
test/e2e/apimachinery/resource_quota.go:101
  STEP: Creating a kubernetes client @ 05/14/24 04:48:57.742
  May 14 04:48:57.742: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename resourcequota @ 05/14/24 04:48:57.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:48:57.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:48:57.77
  STEP: Counting existing ResourceQuota @ 05/14/24 04:48:57.772
  E0514 04:48:58.272624      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:48:59.273152      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:00.274059      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:01.274997      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:02.275473      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/14/24 04:49:02.775
  STEP: Ensuring resource quota status is calculated @ 05/14/24 04:49:02.781
  E0514 04:49:03.276328      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:04.276711      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 05/14/24 04:49:04.786
  STEP: Creating a NodePort Service @ 05/14/24 04:49:04.82
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 05/14/24 04:49:04.865
  STEP: Ensuring resource quota status captures service creation @ 05/14/24 04:49:04.906
  E0514 04:49:05.277195      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:06.277594      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 05/14/24 04:49:06.91
  STEP: Ensuring resource quota status released usage @ 05/14/24 04:49:06.962
  E0514 04:49:07.278142      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:08.278386      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:49:08.968: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-788" for this suite. @ 05/14/24 04:49:08.974
• [11.242 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]
test/e2e/kubectl/kubectl.go:1342
  STEP: Creating a kubernetes client @ 05/14/24 04:49:08.985
  May 14 04:49:08.985: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename kubectl @ 05/14/24 04:49:08.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:49:09.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:49:09.018
  May 14 04:49:09.021: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-6228 create -f -'
  E0514 04:49:09.278788      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:49:09.973: INFO: stderr: ""
  May 14 04:49:09.973: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  May 14 04:49:09.973: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-6228 create -f -'
  E0514 04:49:10.279752      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:49:10.286: INFO: stderr: ""
  May 14 04:49:10.286: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/14/24 04:49:10.286
  E0514 04:49:11.279969      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:49:11.291: INFO: Selector matched 1 pods for map[app:agnhost]
  May 14 04:49:11.291: INFO: Found 0 / 1
  E0514 04:49:12.280768      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:49:12.371: INFO: Selector matched 1 pods for map[app:agnhost]
  May 14 04:49:12.371: INFO: Found 1 / 1
  May 14 04:49:12.371: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  May 14 04:49:12.374: INFO: Selector matched 1 pods for map[app:agnhost]
  May 14 04:49:12.374: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  May 14 04:49:12.374: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-6228 describe pod agnhost-primary-9sbmn'
  May 14 04:49:12.519: INFO: stderr: ""
  May 14 04:49:12.519: INFO: stdout: "Name:             agnhost-primary-9sbmn\nNamespace:        kubectl-6228\nPriority:         0\nService Account:  default\nNode:             viola-paas-worker03/172.10.50.241\nStart Time:       Tue, 14 May 2024 04:49:10 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.233.64.227\nIPs:\n  IP:           10.233.64.227\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://afecb22aaeadc2eec787ee07a38fc253c45425899041aa9c35c4c369b98603a8\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.45\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Tue, 14 May 2024 04:49:10 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-dcns5 (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-dcns5:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-6228/agnhost-primary-9sbmn to viola-paas-worker03\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  May 14 04:49:12.519: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-6228 describe rc agnhost-primary'
  May 14 04:49:12.830: INFO: stderr: ""
  May 14 04:49:12.830: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-6228\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.45\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-9sbmn\n"
  May 14 04:49:12.831: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-6228 describe service agnhost-primary'
  May 14 04:49:12.998: INFO: stderr: ""
  May 14 04:49:12.998: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-6228\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.233.22.141\nIPs:               10.233.22.141\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.233.64.227:6379\nSession Affinity:  None\nEvents:            <none>\n"
  May 14 04:49:13.006: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-6228 describe node viola-paas-ingress01'
  May 14 04:49:13.170: INFO: stderr: ""
  May 14 04:49:13.170: INFO: stdout: "Name:               viola-paas-ingress01\nRoles:              ingress-node\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=viola-paas-ingress01\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/ingress-node=\nAnnotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/containerd/containerd.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Wed, 27 Mar 2024 17:20:26 +0000\nTaints:             node=ingress:PreferNoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  viola-paas-ingress01\n  AcquireTime:     <unset>\n  RenewTime:       Tue, 14 May 2024 04:49:10 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Wed, 27 Mar 2024 17:21:17 +0000   Wed, 27 Mar 2024 17:21:17 +0000   CiliumIsUp                   Cilium is running on this node\n  MemoryPressure       False   Tue, 14 May 2024 04:49:10 +0000   Wed, 27 Mar 2024 17:20:26 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Tue, 14 May 2024 04:49:10 +0000   Wed, 27 Mar 2024 17:20:26 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Tue, 14 May 2024 04:49:10 +0000   Wed, 27 Mar 2024 17:20:26 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Tue, 14 May 2024 04:49:10 +0000   Tue, 14 May 2024 02:21:11 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.10.50.45\n  Hostname:    viola-paas-ingress01\nCapacity:\n  cpu:                4\n  ephemeral-storage:  50620216Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8127020Ki\n  pods:               110\nAllocatable:\n  cpu:                4\n  ephemeral-storage:  46651590989\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8024620Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ab016c7874f34c509d220606bba9e66a\n  System UUID:                ab016c78-74f3-4c50-9d22-0606bba9e66a\n  Boot ID:                    80d75ed6-6e8a-4226-8d19-aa303644e201\n  Kernel Version:             5.15.0-92-generic\n  OS Image:                   Ubuntu 22.04.3 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.7.5\n  Kubelet Version:            v1.28.5\n  Kube-Proxy Version:         v1.28.5\nPodCIDR:                      10.233.71.0/24\nPodCIDRs:                     10.233.71.0/24\nNon-terminated Pods:          (5 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  common-datastore            vault-0                                                    0 (0%)        0 (0%)      0 (0%)           0 (0%)         19h\n  kube-system                 cilium-r9ckd                                               100m (2%)     0 (0%)      100Mi (1%)       0 (0%)         148m\n  kube-system                 kube-proxy-6dkxt                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         16h\n  mgmt                        prometheus-stack-prometheus-node-exporter-cnrmz            0 (0%)        0 (0%)      0 (0%)           0 (0%)         46d\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-1b7153daae854a0a-l2wdq    0 (0%)        0 (0%)      0 (0%)           0 (0%)         70m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                100m (2%)   0 (0%)\n  memory             100Mi (1%)  0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  May 14 04:49:13.170: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-6228 describe namespace kubectl-6228'
  May 14 04:49:13.251: INFO: stderr: ""
  May 14 04:49:13.251: INFO: stdout: "Name:         kubectl-6228\nLabels:       e2e-framework=kubectl\n              e2e-run=d67b12ce-b209-4ec2-980e-6b4cf5e11100\n              kubernetes.io/metadata.name=kubectl-6228\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  May 14 04:49:13.251: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0514 04:49:13.281562      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "kubectl-6228" for this suite. @ 05/14/24 04:49:13.348
• [4.444 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 05/14/24 04:49:13.431
  May 14 04:49:13.432: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename configmap @ 05/14/24 04:49:13.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:49:13.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:49:13.84
  STEP: Creating configMap with name configmap-test-volume-map-a0d329d7-5709-48a3-a37f-798b83a70a1b @ 05/14/24 04:49:13.843
  STEP: Creating a pod to test consume configMaps @ 05/14/24 04:49:13.91
  E0514 04:49:14.281674      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:15.282577      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:16.283216      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:17.283687      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:18.284287      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:19.284637      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:49:20.217
  May 14 04:49:20.221: INFO: Trying to get logs from node viola-paas-worker03 pod pod-configmaps-281a0013-afac-48d2-ab5f-8072b41eb9bb container agnhost-container: <nil>
  STEP: delete the pod @ 05/14/24 04:49:20.231
  E0514 04:49:20.285275      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:49:20.289: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8321" for this suite. @ 05/14/24 04:49:20.296
• [6.929 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]
test/e2e/common/node/configmap.go:138
  STEP: Creating a kubernetes client @ 05/14/24 04:49:20.361
  May 14 04:49:20.361: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename configmap @ 05/14/24 04:49:20.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:49:20.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:49:20.434
  STEP: Creating configMap that has name configmap-test-emptyKey-067bc31f-7ed3-4089-b4dc-d1baf921bf74 @ 05/14/24 04:49:20.451
  May 14 04:49:20.453: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8513" for this suite. @ 05/14/24 04:49:20.46
• [0.123 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance]
test/e2e/apps/rc.go:424
  STEP: Creating a kubernetes client @ 05/14/24 04:49:20.484
  May 14 04:49:20.484: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename replication-controller @ 05/14/24 04:49:20.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:49:20.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:49:20.651
  STEP: Creating ReplicationController "e2e-rc-ffwgh" @ 05/14/24 04:49:20.654
  May 14 04:49:20.667: INFO: Get Replication Controller "e2e-rc-ffwgh" to confirm replicas
  E0514 04:49:21.286020      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:49:21.690: INFO: Get Replication Controller "e2e-rc-ffwgh" to confirm replicas
  May 14 04:49:21.830: INFO: Found 1 replicas for "e2e-rc-ffwgh" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-ffwgh" @ 05/14/24 04:49:21.83
  STEP: Updating a scale subresource @ 05/14/24 04:49:21.833
  STEP: Verifying replicas where modified for replication controller "e2e-rc-ffwgh" @ 05/14/24 04:49:21.872
  May 14 04:49:21.872: INFO: Get Replication Controller "e2e-rc-ffwgh" to confirm replicas
  E0514 04:49:22.286360      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:49:23.012: INFO: Get Replication Controller "e2e-rc-ffwgh" to confirm replicas
  E0514 04:49:23.287747      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:49:24.012: INFO: Get Replication Controller "e2e-rc-ffwgh" to confirm replicas
  May 14 04:49:24.089: INFO: Found 2 replicas for "e2e-rc-ffwgh" replication controller
  May 14 04:49:24.090: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8552" for this suite. @ 05/14/24 04:49:24.114
• [3.727 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods  [Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 05/14/24 04:49:24.214
  May 14 04:49:24.214: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename services @ 05/14/24 04:49:24.216
  E0514 04:49:24.287763      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:49:24.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:49:24.529
  STEP: creating service endpoint-test2 in namespace services-7948 @ 05/14/24 04:49:24.569
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7948 to expose endpoints map[] @ 05/14/24 04:49:25.137
  May 14 04:49:25.164: INFO: successfully validated that service endpoint-test2 in namespace services-7948 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-7948 @ 05/14/24 04:49:25.165
  E0514 04:49:25.288488      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:26.289001      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:27.289841      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:28.290576      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:29.291244      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7948 to expose endpoints map[pod1:[80]] @ 05/14/24 04:49:29.356
  May 14 04:49:29.485: INFO: successfully validated that service endpoint-test2 in namespace services-7948 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 05/14/24 04:49:29.485
  May 14 04:49:29.485: INFO: Creating new exec pod
  E0514 04:49:30.291275      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:31.291718      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:32.292731      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:49:32.669: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-7948 exec execpodxpppf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  May 14 04:49:32.800: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  May 14 04:49:32.800: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 14 04:49:32.800: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-7948 exec execpodxpppf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.58.178 80'
  May 14 04:49:32.912: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.58.178 80\nConnection to 10.233.58.178 80 port [tcp/http] succeeded!\n"
  May 14 04:49:32.912: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-7948 @ 05/14/24 04:49:32.912
  E0514 04:49:33.293324      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:34.293523      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7948 to expose endpoints map[pod1:[80] pod2:[80]] @ 05/14/24 04:49:34.968
  May 14 04:49:34.981: INFO: successfully validated that service endpoint-test2 in namespace services-7948 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 05/14/24 04:49:34.981
  E0514 04:49:35.294686      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:49:35.983: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-7948 exec execpodxpppf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  May 14 04:49:36.124: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  May 14 04:49:36.124: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 14 04:49:36.124: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-7948 exec execpodxpppf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.58.178 80'
  May 14 04:49:36.261: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.58.178 80\nConnection to 10.233.58.178 80 port [tcp/http] succeeded!\n"
  May 14 04:49:36.261: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-7948 @ 05/14/24 04:49:36.261
  E0514 04:49:36.295440      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7948 to expose endpoints map[pod2:[80]] @ 05/14/24 04:49:36.341
  May 14 04:49:36.372: INFO: successfully validated that service endpoint-test2 in namespace services-7948 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 05/14/24 04:49:36.372
  E0514 04:49:37.295827      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:49:37.373: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-7948 exec execpodxpppf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  May 14 04:49:37.482: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  May 14 04:49:37.482: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 14 04:49:37.482: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-7948 exec execpodxpppf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.58.178 80'
  May 14 04:49:37.582: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.58.178 80\nConnection to 10.233.58.178 80 port [tcp/http] succeeded!\n"
  May 14 04:49:37.583: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-7948 @ 05/14/24 04:49:37.583
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7948 to expose endpoints map[] @ 05/14/24 04:49:37.639
  May 14 04:49:37.649: INFO: successfully validated that service endpoint-test2 in namespace services-7948 exposes endpoints map[]
  May 14 04:49:37.650: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7948" for this suite. @ 05/14/24 04:49:37.693
• [13.493 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 05/14/24 04:49:37.71
  May 14 04:49:37.710: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename projected @ 05/14/24 04:49:37.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:49:37.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:49:37.801
  STEP: Creating configMap with name projected-configmap-test-volume-map-59c7132d-db68-4273-8906-01124aa1d3c0 @ 05/14/24 04:49:37.804
  STEP: Creating a pod to test consume configMaps @ 05/14/24 04:49:37.816
  E0514 04:49:38.296205      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:39.297058      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:40.297559      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:41.297978      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:49:41.886
  May 14 04:49:41.890: INFO: Trying to get logs from node viola-paas-worker03 pod pod-projected-configmaps-08a733a4-0d02-42e4-ae98-eaf67a1ae0b5 container agnhost-container: <nil>
  STEP: delete the pod @ 05/14/24 04:49:41.897
  May 14 04:49:41.924: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4698" for this suite. @ 05/14/24 04:49:41.93
• [4.231 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:218
  STEP: Creating a kubernetes client @ 05/14/24 04:49:41.944
  May 14 04:49:41.944: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename downward-api @ 05/14/24 04:49:41.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:49:42.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:49:42.006
  STEP: Creating a pod to test downward api env vars @ 05/14/24 04:49:42.009
  E0514 04:49:42.298622      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:43.299640      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:44.300337      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:45.301092      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:49:46.041
  May 14 04:49:46.044: INFO: Trying to get logs from node viola-paas-worker03 pod downward-api-6ed612dc-d083-4bff-960d-cf2c2ea8abf8 container dapi-container: <nil>
  STEP: delete the pod @ 05/14/24 04:49:46.051
  May 14 04:49:46.102: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5617" for this suite. @ 05/14/24 04:49:46.107
• [4.195 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod  [Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 05/14/24 04:49:46.139
  May 14 04:49:46.139: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename prestop @ 05/14/24 04:49:46.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:49:46.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:49:46.207
  STEP: Creating server pod server in namespace prestop-36 @ 05/14/24 04:49:46.21
  STEP: Waiting for pods to come up. @ 05/14/24 04:49:46.221
  E0514 04:49:46.301967      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:47.302836      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-36 @ 05/14/24 04:49:48.268
  E0514 04:49:48.303904      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:49.304334      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:50.304945      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 05/14/24 04:49:50.324
  E0514 04:49:51.305947      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:52.306449      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:53.306640      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:54.307109      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:55.307166      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:49:55.351: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  May 14 04:49:55.352: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Deleting the server pod @ 05/14/24 04:49:55.359
  STEP: Destroying namespace "prestop-36" for this suite. @ 05/14/24 04:49:55.389
• [9.271 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:528
  STEP: Creating a kubernetes client @ 05/14/24 04:49:55.411
  May 14 04:49:55.411: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename security-context-test @ 05/14/24 04:49:55.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:49:55.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:49:55.444
  E0514 04:49:56.307616      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:57.308186      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:58.308430      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:49:59.308646      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:49:59.523: INFO: Got logs for pod "busybox-privileged-false-adfa84e2-97c1-4318-8a0a-d037cd545a61": "ip: RTNETLINK answers: Operation not permitted\n"
  May 14 04:49:59.523: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8801" for this suite. @ 05/14/24 04:49:59.531
• [4.128 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]
test/e2e/apimachinery/resource_quota.go:328
  STEP: Creating a kubernetes client @ 05/14/24 04:49:59.539
  May 14 04:49:59.539: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename resourcequota @ 05/14/24 04:49:59.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:49:59.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:49:59.588
  E0514 04:50:00.309427      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:01.309493      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:02.310096      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:03.311089      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:04.311261      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:05.312227      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:06.312643      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:07.313013      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:08.314175      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:09.314334      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:10.314370      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:11.315948      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:12.316402      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:13.316590      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:14.316738      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:15.317858      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:16.318863      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 05/14/24 04:50:16.596
  E0514 04:50:17.319726      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:18.320736      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:19.321741      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:20.322600      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:21.323624      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/14/24 04:50:21.601
  STEP: Ensuring resource quota status is calculated @ 05/14/24 04:50:21.627
  E0514 04:50:22.324693      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:23.325032      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 05/14/24 04:50:23.634
  STEP: Ensuring resource quota status captures configMap creation @ 05/14/24 04:50:23.656
  E0514 04:50:24.325493      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:25.326502      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 05/14/24 04:50:25.663
  STEP: Ensuring resource quota status released usage @ 05/14/24 04:50:25.68
  E0514 04:50:26.326408      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:27.326775      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:50:27.686: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7378" for this suite. @ 05/14/24 04:50:27.694
• [28.162 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 05/14/24 04:50:27.703
  May 14 04:50:27.703: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename daemonsets @ 05/14/24 04:50:27.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:50:27.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:50:27.748
  STEP: Creating simple DaemonSet "daemon-set" @ 05/14/24 04:50:27.79
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/14/24 04:50:27.804
  May 14 04:50:27.810: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:50:27.810: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:50:27.810: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:50:27.813: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 14 04:50:27.813: INFO: Node viola-paas-ingress01 is running 0 daemon pod, expected 1
  E0514 04:50:28.327503      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:50:28.821: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:50:28.821: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:50:28.821: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:50:28.825: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 14 04:50:28.825: INFO: Node viola-paas-ingress01 is running 0 daemon pod, expected 1
  E0514 04:50:29.327836      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:50:29.850: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:50:29.850: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:50:29.850: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:50:29.876: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
  May 14 04:50:29.876: INFO: Number of running nodes: 5, number of available pods: 5 in daemonset daemon-set
  STEP: listing all DaemonSets @ 05/14/24 04:50:29.879
  STEP: DeleteCollection of the DaemonSets @ 05/14/24 04:50:29.892
  STEP: Verify that ReplicaSets have been deleted @ 05/14/24 04:50:29.905
  May 14 04:50:29.954: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26337240"},"items":null}

  May 14 04:50:29.984: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26337243"},"items":[{"metadata":{"name":"daemon-set-78v5x","generateName":"daemon-set-","namespace":"daemonsets-9465","uid":"b463f457-b3ce-41e9-8c57-088ea829a118","resourceVersion":"26337243","creationTimestamp":"2024-05-14T04:50:27Z","deletionTimestamp":"2024-05-14T04:50:59Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"cb62706c-9d97-4d4c-84ff-9f76461ab5c5","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-14T04:50:27Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"cb62706c-9d97-4d4c-84ff-9f76461ab5c5\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-14T04:50:29Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.70.138\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-tdjt9","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-tdjt9","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"viola-paas-ingress02","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["viola-paas-ingress02"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-14T04:50:27Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-14T04:50:29Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-14T04:50:29Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-14T04:50:27Z"}],"hostIP":"172.10.50.211","podIP":"10.233.70.138","podIPs":[{"ip":"10.233.70.138"}],"startTime":"2024-05-14T04:50:27Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-14T04:50:28Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://eb9d7bc974be605a273af8b4a7d944838782257e6acfd950ed0e2bafac359b40","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-cbddt","generateName":"daemon-set-","namespace":"daemonsets-9465","uid":"45f1dea0-114d-4def-82e2-cf62285f4d1b","resourceVersion":"26337242","creationTimestamp":"2024-05-14T04:50:27Z","deletionTimestamp":"2024-05-14T04:50:59Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"cb62706c-9d97-4d4c-84ff-9f76461ab5c5","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-14T04:50:27Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"cb62706c-9d97-4d4c-84ff-9f76461ab5c5\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-14T04:50:29Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.67.235\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-5ldt5","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-5ldt5","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"viola-paas-ingress01","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["viola-paas-ingress01"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-14T04:50:27Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-14T04:50:29Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-14T04:50:29Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-14T04:50:27Z"}],"hostIP":"172.10.50.45","podIP":"10.233.67.235","podIPs":[{"ip":"10.233.67.235"}],"startTime":"2024-05-14T04:50:27Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-14T04:50:28Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://a97e6acfae54900379b3734e946963c3e1487efccb530c643121a1f4932803f9","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-gzx67","generateName":"daemon-set-","namespace":"daemonsets-9465","uid":"e755ce53-8721-4442-a2d0-ad731883ba6d","resourceVersion":"26337229","creationTimestamp":"2024-05-14T04:50:27Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"cb62706c-9d97-4d4c-84ff-9f76461ab5c5","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-14T04:50:27Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"cb62706c-9d97-4d4c-84ff-9f76461ab5c5\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-14T04:50:29Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.71.252\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-6m2wc","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-6m2wc","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"viola-paas-worker02","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["viola-paas-worker02"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-14T04:50:27Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-14T04:50:29Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-14T04:50:29Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-14T04:50:27Z"}],"hostIP":"172.10.50.165","podIP":"10.233.71.252","podIPs":[{"ip":"10.233.71.252"}],"startTime":"2024-05-14T04:50:27Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-14T04:50:28Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://9ea31247243f3df9a76ae0673d9040c2c1b5ff80ebfd39ffc5fcb67cd72d04eb","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-k7wpk","generateName":"daemon-set-","namespace":"daemonsets-9465","uid":"8d4785e1-5681-4c42-8aba-8eca6dd51d2b","resourceVersion":"26337238","creationTimestamp":"2024-05-14T04:50:27Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"cb62706c-9d97-4d4c-84ff-9f76461ab5c5","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-14T04:50:27Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"cb62706c-9d97-4d4c-84ff-9f76461ab5c5\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-14T04:50:29Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.64.35\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-qmcdg","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-qmcdg","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"viola-paas-worker03","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["viola-paas-worker03"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-14T04:50:27Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-14T04:50:29Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-14T04:50:29Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-14T04:50:27Z"}],"hostIP":"172.10.50.241","podIP":"10.233.64.35","podIPs":[{"ip":"10.233.64.35"}],"startTime":"2024-05-14T04:50:27Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-14T04:50:28Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://38f7b6c4b89e70198e202e5c99252bd10af6dfd39f023f0307aad3f480d8e24d","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-rkfd8","generateName":"daemon-set-","namespace":"daemonsets-9465","uid":"3a62b45d-90cb-4f9c-a69d-cf06e7bda7bd","resourceVersion":"26337236","creationTimestamp":"2024-05-14T04:50:27Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"cb62706c-9d97-4d4c-84ff-9f76461ab5c5","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-14T04:50:27Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"cb62706c-9d97-4d4c-84ff-9f76461ab5c5\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-14T04:50:29Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.69.245\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-8mmvz","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-8mmvz","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"viola-paas-worker01","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["viola-paas-worker01"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-14T04:50:27Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-14T04:50:29Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-14T04:50:29Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-14T04:50:27Z"}],"hostIP":"172.10.50.107","podIP":"10.233.69.245","podIPs":[{"ip":"10.233.69.245"}],"startTime":"2024-05-14T04:50:27Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-14T04:50:28Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://da424a8ce6a25265665f2d3c76d223ab1d5ec0aebbc503c20c623fa1c67b1c7f","started":true}],"qosClass":"BestEffort"}}]}

  May 14 04:50:30.011: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9465" for this suite. @ 05/14/24 04:50:30.016
• [2.321 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 05/14/24 04:50:30.025
  May 14 04:50:30.025: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename containers @ 05/14/24 04:50:30.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:50:30.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:50:30.102
  E0514 04:50:30.328211      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:31.328772      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:50:32.134: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2252" for this suite. @ 05/14/24 04:50:32.14
• [2.123 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:107
  STEP: Creating a kubernetes client @ 05/14/24 04:50:32.148
  May 14 04:50:32.148: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename pod-network-test @ 05/14/24 04:50:32.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:50:32.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:50:32.189
  STEP: Performing setup for networking test in namespace pod-network-test-8216 @ 05/14/24 04:50:32.192
  STEP: creating a selector @ 05/14/24 04:50:32.192
  STEP: Creating the service pods in kubernetes @ 05/14/24 04:50:32.192
  May 14 04:50:32.192: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0514 04:50:32.329242      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:33.329312      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:34.329628      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:35.330137      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:36.330456      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:37.330684      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:38.330777      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:39.331161      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:40.331787      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:41.332718      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:42.333088      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:43.333352      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:44.333679      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:45.333842      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:46.334229      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:47.334781      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:48.335199      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:49.336186      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:50.336884      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:51.337183      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:52.337516      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:53.338027      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:54.338367      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/14/24 04:50:54.449
  E0514 04:50:55.339164      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:56.339503      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:50:56.486: INFO: Setting MaxTries for pod polling to 55 for networking test based on endpoint count 5
  May 14 04:50:56.486: INFO: Going to poll 10.233.67.72 on port 8083 at least 0 times, with a maximum of 55 tries before failing
  May 14 04:50:56.488: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.67.72:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8216 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 04:50:56.488: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 04:50:56.489: INFO: ExecWithOptions: Clientset creation
  May 14 04:50:56.489: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-8216/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.67.72%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 14 04:50:56.541: INFO: Found all 1 expected endpoints: [netserver-0]
  May 14 04:50:56.541: INFO: Going to poll 10.233.70.220 on port 8083 at least 0 times, with a maximum of 55 tries before failing
  May 14 04:50:56.545: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.70.220:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8216 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 04:50:56.545: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 04:50:56.545: INFO: ExecWithOptions: Clientset creation
  May 14 04:50:56.545: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-8216/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.70.220%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 14 04:50:56.589: INFO: Found all 1 expected endpoints: [netserver-1]
  May 14 04:50:56.589: INFO: Going to poll 10.233.69.25 on port 8083 at least 0 times, with a maximum of 55 tries before failing
  May 14 04:50:56.593: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.69.25:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8216 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 04:50:56.593: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 04:50:56.594: INFO: ExecWithOptions: Clientset creation
  May 14 04:50:56.594: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-8216/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.69.25%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 14 04:50:56.639: INFO: Found all 1 expected endpoints: [netserver-2]
  May 14 04:50:56.639: INFO: Going to poll 10.233.71.217 on port 8083 at least 0 times, with a maximum of 55 tries before failing
  May 14 04:50:56.643: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.71.217:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8216 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 04:50:56.643: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 04:50:56.644: INFO: ExecWithOptions: Clientset creation
  May 14 04:50:56.644: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-8216/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.71.217%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 14 04:50:56.687: INFO: Found all 1 expected endpoints: [netserver-3]
  May 14 04:50:56.687: INFO: Going to poll 10.233.64.251 on port 8083 at least 0 times, with a maximum of 55 tries before failing
  May 14 04:50:56.691: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.64.251:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8216 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 04:50:56.691: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 04:50:56.691: INFO: ExecWithOptions: Clientset creation
  May 14 04:50:56.691: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-8216/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.64.251%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 14 04:50:56.737: INFO: Found all 1 expected endpoints: [netserver-4]
  May 14 04:50:56.737: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8216" for this suite. @ 05/14/24 04:50:56.744
• [24.608 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 05/14/24 04:50:56.757
  May 14 04:50:56.757: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename container-probe @ 05/14/24 04:50:56.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:50:56.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:50:56.8
  STEP: Creating pod busybox-3816e51d-f4ff-4390-9561-64d67b588fca in namespace container-probe-1245 @ 05/14/24 04:50:56.802
  E0514 04:50:57.340473      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:50:58.340945      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/14/24 04:50:58.831
  May 14 04:50:58.834: INFO: Initial restart count of pod busybox-3816e51d-f4ff-4390-9561-64d67b588fca is 0
  May 14 04:50:58.837: INFO: Get pod busybox-3816e51d-f4ff-4390-9561-64d67b588fca in namespace container-probe-1245
  E0514 04:50:59.340992      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:51:00.341449      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:51:00.843: INFO: Get pod busybox-3816e51d-f4ff-4390-9561-64d67b588fca in namespace container-probe-1245
  E0514 04:51:01.342038      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:51:02.342394      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:51:02.848: INFO: Get pod busybox-3816e51d-f4ff-4390-9561-64d67b588fca in namespace container-probe-1245
  E0514 04:51:03.342945      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:51:04.343260      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:51:04.853: INFO: Get pod busybox-3816e51d-f4ff-4390-9561-64d67b588fca in namespace container-probe-1245
  E0514 04:51:05.344172      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:51:06.344603      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:51:06.859: INFO: Get pod busybox-3816e51d-f4ff-4390-9561-64d67b588fca in namespace container-probe-1245
  E0514 04:51:07.345632      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:51:08.345988      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:51:08.864: INFO: Get pod busybox-3816e51d-f4ff-4390-9561-64d67b588fca in namespace container-probe-1245
  E0514 04:51:09.346116      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:51:10.346452      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:51:10.868: INFO: Get pod busybox-3816e51d-f4ff-4390-9561-64d67b588fca in namespace container-probe-1245
  E0514 04:51:11.347407      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:51:12.347715      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:51:12.874: INFO: Get pod busybox-3816e51d-f4ff-4390-9561-64d67b588fca in namespace container-probe-1245
  E0514 04:51:13.350457      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:51:14.350444      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:51:14.880: INFO: Get pod busybox-3816e51d-f4ff-4390-9561-64d67b588fca in namespace container-probe-1245
  E0514 04:51:15.351302      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:51:16.351763      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:51:16.885: INFO: Get pod busybox-3816e51d-f4ff-4390-9561-64d67b588fca in namespace container-probe-1245
  E0514 04:51:17.352062      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:51:18.352421      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:51:18.890: INFO: Get pod busybox-3816e51d-f4ff-4390-9561-64d67b588fca in namespace container-probe-1245
  E0514 04:51:19.353394      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:51:20.354043      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:51:20.896: INFO: Get pod busybox-3816e51d-f4ff-4390-9561-64d67b588fca in namespace container-probe-1245
  E0514 04:51:21.355040      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:51:22.355342      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:51:22.902: INFO: Get pod busybox-3816e51d-f4ff-4390-9561-64d67b588fca in namespace container-probe-1245
  E0514 04:51:23.355413      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:51:24.355778      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:51:24.913: INFO: Get pod busybox-3816e51d-f4ff-4390-9561-64d67b588fca in namespace container-probe-1245
  E0514 04:51:25.356609      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:51:26.356932      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:51:26.918: INFO: Get pod busybox-3816e51d-f4ff-4390-9561-64d67b588fca in namespace container-probe-1245
  E0514 04:51:27.357197      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:51:28.357496      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:51:28.922: INFO: Get pod busybox-3816e51d-f4ff-4390-9561-64d67b588fca in namespace container-probe-1245
  E0514 04:51:29.358492      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:51:30.359100      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:51:30.927: INFO: Get pod busybox-3816e51d-f4ff-4390-9561-64d67b588fca in namespace container-probe-1245
  E0514 04:51:31.359468      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:51:32.359948      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:51:32.934: INFO: Get pod busybox-3816e51d-f4ff-4390-9561-64d67b588fca in namespace container-probe-1245
  E0514 04:51:33.360754      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:51:34.361066      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:51:34.940: INFO: Get pod busybox-3816e51d-f4ff-4390-9561-64d67b588fca in namespace container-probe-1245
  E0514 04:51:35.362062      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:51:36.362421      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:51:36.944: INFO: Get pod busybox-3816e51d-f4ff-4390-9561-64d67b588fca in namespace container-probe-1245
  E0514 04:51:37.363427      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:51:38.363770      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:51:38.950: INFO: Get pod busybox-3816e51d-f4ff-4390-9561-64d67b588fca in namespace container-probe-1245
  E0514 04:51:39.364548      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:51:40.365211      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:51:40.955: INFO: Get pod busybox-3816e51d-f4ff-4390-9561-64d67b588fca in namespace container-probe-1245
  E0514 04:51:41.365334      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:51:42.365593      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:51:42.961: INFO: Get pod busybox-3816e51d-f4ff-4390-9561-64d67b588fca in namespace container-probe-1245
  E0514 04:51:43.366668      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:51:44.366850      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:51:44.965: INFO: Get pod busybox-3816e51d-f4ff-4390-9561-64d67b588fca in namespace container-probe-1245
  E0514 04:51:45.367048      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:51:46.367434      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:51:46.971: INFO: Get pod busybox-3816e51d-f4ff-4390-9561-64d67b588fca in namespace container-probe-1245
  E0514 04:51:47.367865      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:51:48.368175      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:51:48.976: INFO: Get pod busybox-3816e51d-f4ff-4390-9561-64d67b588fca in namespace container-probe-1245
  May 14 04:51:48.976: INFO: Restart count of pod container-probe-1245/busybox-3816e51d-f4ff-4390-9561-64d67b588fca is now 1 (50.141934875s elapsed)
  May 14 04:51:48.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/14/24 04:51:48.982
  STEP: Destroying namespace "container-probe-1245" for this suite. @ 05/14/24 04:51:49.027
• [52.282 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]
test/e2e/auth/service_accounts.go:161
  STEP: Creating a kubernetes client @ 05/14/24 04:51:49.04
  May 14 04:51:49.040: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename svcaccounts @ 05/14/24 04:51:49.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:51:49.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:51:49.079
  May 14 04:51:49.114: INFO: created pod pod-service-account-defaultsa
  May 14 04:51:49.114: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  May 14 04:51:49.123: INFO: created pod pod-service-account-mountsa
  May 14 04:51:49.123: INFO: pod pod-service-account-mountsa service account token volume mount: true
  May 14 04:51:49.135: INFO: created pod pod-service-account-nomountsa
  May 14 04:51:49.135: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  May 14 04:51:49.153: INFO: created pod pod-service-account-defaultsa-mountspec
  May 14 04:51:49.154: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  May 14 04:51:49.162: INFO: created pod pod-service-account-mountsa-mountspec
  May 14 04:51:49.162: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  May 14 04:51:49.177: INFO: created pod pod-service-account-nomountsa-mountspec
  May 14 04:51:49.177: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  May 14 04:51:49.201: INFO: created pod pod-service-account-defaultsa-nomountspec
  May 14 04:51:49.201: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  May 14 04:51:49.211: INFO: created pod pod-service-account-mountsa-nomountspec
  May 14 04:51:49.211: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  May 14 04:51:49.228: INFO: created pod pod-service-account-nomountsa-nomountspec
  May 14 04:51:49.228: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  May 14 04:51:49.228: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6648" for this suite. @ 05/14/24 04:51:49.236
• [0.217 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 05/14/24 04:51:49.258
  May 14 04:51:49.258: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename webhook @ 05/14/24 04:51:49.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:51:49.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:51:49.312
  STEP: Setting up server cert @ 05/14/24 04:51:49.357
  E0514 04:51:49.368896      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/14/24 04:51:49.523
  STEP: Deploying the webhook pod @ 05/14/24 04:51:49.534
  STEP: Wait for the deployment to be ready @ 05/14/24 04:51:49.555
  May 14 04:51:49.568: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0514 04:51:50.369602      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:51:51.369923      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/14/24 04:51:51.579
  STEP: Verifying the service has paired with the endpoint @ 05/14/24 04:51:51.592
  E0514 04:51:52.370815      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:51:52.593: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/14/24 04:51:52.709
  STEP: Creating a configMap that should be mutated @ 05/14/24 04:51:52.723
  STEP: Deleting the collection of validation webhooks @ 05/14/24 04:51:52.762
  STEP: Creating a configMap that should not be mutated @ 05/14/24 04:51:52.851
  May 14 04:51:52.866: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9126" for this suite. @ 05/14/24 04:51:52.935
  STEP: Destroying namespace "webhook-markers-7014" for this suite. @ 05/14/24 04:51:52.942
• [3.708 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]
test/e2e/apps/statefulset.go:320
  STEP: Creating a kubernetes client @ 05/14/24 04:51:52.966
  May 14 04:51:52.966: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename statefulset @ 05/14/24 04:51:52.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:51:52.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:51:53.001
  STEP: Creating service test in namespace statefulset-4537 @ 05/14/24 04:51:53.007
  STEP: Creating a new StatefulSet @ 05/14/24 04:51:53.019
  May 14 04:51:53.038: INFO: Found 0 stateful pods, waiting for 3
  E0514 04:51:53.371053      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:51:54.371446      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:51:55.372155      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:51:56.372465      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:51:57.372761      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:51:58.373070      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:51:59.373351      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:00.374380      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:01.374601      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:02.374876      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:52:03.044: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  May 14 04:52:03.044: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  May 14 04:52:03.044: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  May 14 04:52:03.053: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=statefulset-4537 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 14 04:52:03.182: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 14 04:52:03.182: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 14 04:52:03.182: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0514 04:52:03.375472      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:04.375766      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:05.376535      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:06.376893      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:07.377237      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:08.377554      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:09.377914      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:10.378503      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:11.378815      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:12.379162      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/14/24 04:52:13.2
  May 14 04:52:13.226: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 05/14/24 04:52:13.226
  E0514 04:52:13.379687      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:14.380012      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:15.380841      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:16.380984      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:17.381135      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:18.381422      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:19.381704      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:20.382454      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:21.382481      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:22.382642      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 05/14/24 04:52:23.252
  May 14 04:52:23.255: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=statefulset-4537 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 14 04:52:23.379: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 14 04:52:23.379: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 14 04:52:23.379: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0514 04:52:23.383333      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:24.383493      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:25.384112      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:26.384463      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:27.384799      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:28.384953      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:29.385131      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:30.385778      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:31.386084      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:32.386547      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:33.387633      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 05/14/24 04:52:33.403
  May 14 04:52:33.403: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=statefulset-4537 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 14 04:52:33.530: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 14 04:52:33.530: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 14 04:52:33.530: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0514 04:52:34.388423      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:35.389440      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:36.390761      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:37.391047      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:38.391817      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:39.392287      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:40.392956      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:41.393346      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:42.394084      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:43.394544      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:52:43.575: INFO: Updating stateful set ss2
  E0514 04:52:44.395197      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:45.396135      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:46.396752      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:47.396910      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:48.397068      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:49.397252      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:50.397445      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:51.397609      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:52.398164      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:53.398375      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 05/14/24 04:52:53.589
  May 14 04:52:53.593: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=statefulset-4537 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 14 04:52:53.722: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 14 04:52:53.722: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 14 04:52:53.722: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0514 04:52:54.398780      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:55.399675      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:56.399934      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:57.400824      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:58.400624      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:52:59.400886      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:00.401456      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:01.401839      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:02.402265      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:03.402537      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:53:03.748: INFO: Deleting all statefulset in ns statefulset-4537
  May 14 04:53:03.754: INFO: Scaling statefulset ss2 to 0
  E0514 04:53:04.403570      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:05.404412      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:06.404773      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:07.405149      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:08.405527      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:09.405880      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:10.406523      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:11.406869      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:12.407226      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:13.407468      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:53:13.779: INFO: Waiting for statefulset status.replicas updated to 0
  May 14 04:53:13.782: INFO: Deleting statefulset ss2
  May 14 04:53:13.799: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4537" for this suite. @ 05/14/24 04:53:13.815
• [80.856 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]
test/e2e/apps/statefulset.go:961
  STEP: Creating a kubernetes client @ 05/14/24 04:53:13.823
  May 14 04:53:13.823: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename statefulset @ 05/14/24 04:53:13.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:53:13.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:53:13.849
  STEP: Creating service test in namespace statefulset-2877 @ 05/14/24 04:53:13.851
  May 14 04:53:13.872: INFO: Found 0 stateful pods, waiting for 1
  E0514 04:53:14.408140      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:15.408152      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:16.408463      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:17.408806      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:18.409186      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:19.409537      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:20.410303      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:21.410650      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:22.410977      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:23.411296      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:53:23.878: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 05/14/24 04:53:23.883
  W0514 04:53:23.897497      23 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  May 14 04:53:23.914: INFO: Found 1 stateful pods, waiting for 2
  E0514 04:53:24.411995      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:25.412669      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:26.412904      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:27.413240      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:28.413566      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:29.413888      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:30.414493      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:31.414847      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:32.415291      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:33.415691      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:53:33.919: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  May 14 04:53:33.919: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 05/14/24 04:53:33.926
  STEP: Delete all of the StatefulSets @ 05/14/24 04:53:33.93
  STEP: Verify that StatefulSets have been deleted @ 05/14/24 04:53:33.94
  May 14 04:53:33.945: INFO: Deleting all statefulset in ns statefulset-2877
  May 14 04:53:33.971: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2877" for this suite. @ 05/14/24 04:53:33.98
• [20.178 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 05/14/24 04:53:34.002
  May 14 04:53:34.002: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename projected @ 05/14/24 04:53:34.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:53:34.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:53:34.043
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-6cfac0b2-cdac-4215-bbb4-681634f30bbe @ 05/14/24 04:53:34.051
  STEP: Creating the pod @ 05/14/24 04:53:34.058
  E0514 04:53:34.416120      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:35.416873      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-6cfac0b2-cdac-4215-bbb4-681634f30bbe @ 05/14/24 04:53:36.107
  STEP: waiting to observe update in volume @ 05/14/24 04:53:36.114
  E0514 04:53:36.417238      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:37.417578      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:38.418010      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:39.418410      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:40.419053      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:41.419404      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:42.419971      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:43.420346      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:44.421232      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:45.422033      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:46.422720      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:47.423140      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:48.423521      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:49.424069      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:50.424682      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:51.425022      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:52.425164      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:53.425669      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:54.426205      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:55.427178      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:56.427586      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:57.427864      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:58.428961      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:53:59.429259      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:00.429390      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:01.429681      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:02.430520      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:03.430846      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:04.431606      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:05.432825      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:06.433479      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:07.433974      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:08.434240      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:09.434658      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:10.435427      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:11.435768      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:12.436310      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:13.436631      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:14.436752      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:15.437792      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:16.438842      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:17.439190      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:18.440035      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:19.440392      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:20.441064      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:21.441468      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:22.442458      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:23.442854      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:24.443389      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:25.444399      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:26.444548      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:27.444885      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:28.445070      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:29.445495      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:30.446396      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:31.446731      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:32.447068      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:33.447730      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:34.448661      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:35.449456      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:36.449769      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:37.450099      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:38.450209      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:39.450512      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:40.451010      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:41.451873      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:42.452215      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:43.452913      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:44.453342      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:45.453909      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:46.454397      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:47.454983      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:48.455554      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:54:48.495: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1886" for this suite. @ 05/14/24 04:54:48.502
• [74.507 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services  [Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 05/14/24 04:54:48.51
  May 14 04:54:48.510: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename dns @ 05/14/24 04:54:48.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:54:48.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:54:48.554
  STEP: Creating a test headless service @ 05/14/24 04:54:48.557
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8401.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8401.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8401.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8401.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8401.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-8401.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8401.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-8401.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8401.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-8401.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8401.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-8401.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 87.15.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.15.87_udp@PTR;check="$$(dig +tcp +noall +answer +search 87.15.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.15.87_tcp@PTR;sleep 1; done
   @ 05/14/24 04:54:48.585
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8401.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8401.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8401.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8401.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8401.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8401.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8401.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8401.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8401.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8401.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8401.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8401.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 87.15.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.15.87_udp@PTR;check="$$(dig +tcp +noall +answer +search 87.15.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.15.87_tcp@PTR;sleep 1; done
   @ 05/14/24 04:54:48.585
  STEP: creating a pod to probe DNS @ 05/14/24 04:54:48.585
  STEP: submitting the pod to kubernetes @ 05/14/24 04:54:48.585
  E0514 04:54:49.455910      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:50.456286      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:51.456452      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:52.456823      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/14/24 04:54:52.665
  STEP: looking for the results for each expected name from probers @ 05/14/24 04:54:52.668
  May 14 04:54:52.673: INFO: Unable to read wheezy_udp@dns-test-service.dns-8401.svc.cluster.local from pod dns-8401/dns-test-d7307145-d6ba-4ab0-b637-81e02ea5aa41: the server could not find the requested resource (get pods dns-test-d7307145-d6ba-4ab0-b637-81e02ea5aa41)
  May 14 04:54:52.676: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8401.svc.cluster.local from pod dns-8401/dns-test-d7307145-d6ba-4ab0-b637-81e02ea5aa41: the server could not find the requested resource (get pods dns-test-d7307145-d6ba-4ab0-b637-81e02ea5aa41)
  May 14 04:54:52.679: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8401.svc.cluster.local from pod dns-8401/dns-test-d7307145-d6ba-4ab0-b637-81e02ea5aa41: the server could not find the requested resource (get pods dns-test-d7307145-d6ba-4ab0-b637-81e02ea5aa41)
  May 14 04:54:52.682: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8401.svc.cluster.local from pod dns-8401/dns-test-d7307145-d6ba-4ab0-b637-81e02ea5aa41: the server could not find the requested resource (get pods dns-test-d7307145-d6ba-4ab0-b637-81e02ea5aa41)
  May 14 04:54:52.696: INFO: Unable to read jessie_udp@dns-test-service.dns-8401.svc.cluster.local from pod dns-8401/dns-test-d7307145-d6ba-4ab0-b637-81e02ea5aa41: the server could not find the requested resource (get pods dns-test-d7307145-d6ba-4ab0-b637-81e02ea5aa41)
  May 14 04:54:52.698: INFO: Unable to read jessie_tcp@dns-test-service.dns-8401.svc.cluster.local from pod dns-8401/dns-test-d7307145-d6ba-4ab0-b637-81e02ea5aa41: the server could not find the requested resource (get pods dns-test-d7307145-d6ba-4ab0-b637-81e02ea5aa41)
  May 14 04:54:52.701: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8401.svc.cluster.local from pod dns-8401/dns-test-d7307145-d6ba-4ab0-b637-81e02ea5aa41: the server could not find the requested resource (get pods dns-test-d7307145-d6ba-4ab0-b637-81e02ea5aa41)
  May 14 04:54:52.703: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8401.svc.cluster.local from pod dns-8401/dns-test-d7307145-d6ba-4ab0-b637-81e02ea5aa41: the server could not find the requested resource (get pods dns-test-d7307145-d6ba-4ab0-b637-81e02ea5aa41)
  May 14 04:54:52.713: INFO: Lookups using dns-8401/dns-test-d7307145-d6ba-4ab0-b637-81e02ea5aa41 failed for: [wheezy_udp@dns-test-service.dns-8401.svc.cluster.local wheezy_tcp@dns-test-service.dns-8401.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-8401.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-8401.svc.cluster.local jessie_udp@dns-test-service.dns-8401.svc.cluster.local jessie_tcp@dns-test-service.dns-8401.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8401.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8401.svc.cluster.local]

  May 14 04:54:52.719: INFO: Pod client logs for webserver: 
  May 14 04:54:52.734: INFO: Pod client logs for querier: 
  May 14 04:54:52.741: INFO: Pod client logs for jessie-querier: 
  E0514 04:54:53.457840      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:54.458297      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:55.459022      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:56.459512      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:57.459918      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:54:57.791: INFO: DNS probes using dns-8401/dns-test-d7307145-d6ba-4ab0-b637-81e02ea5aa41 succeeded

  May 14 04:54:57.791: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/14/24 04:54:57.796
  STEP: deleting the test service @ 05/14/24 04:54:57.825
  STEP: deleting the test headless service @ 05/14/24 04:54:57.877
  STEP: Destroying namespace "dns-8401" for this suite. @ 05/14/24 04:54:57.894
• [9.402 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 05/14/24 04:54:57.913
  May 14 04:54:57.913: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename downward-api @ 05/14/24 04:54:57.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:54:57.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:54:57.957
  STEP: Creating the pod @ 05/14/24 04:54:57.96
  E0514 04:54:58.460409      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:54:59.460742      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:00.461279      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:55:00.515: INFO: Successfully updated pod "annotationupdate7b2def25-9baa-452f-98bb-97b24b59ff50"
  E0514 04:55:01.462183      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:02.462633      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:03.463593      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:04.463898      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:55:04.543: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3375" for this suite. @ 05/14/24 04:55:04.55
• [6.646 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 05/14/24 04:55:04.56
  May 14 04:55:04.560: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename configmap @ 05/14/24 04:55:04.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:55:04.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:55:04.589
  STEP: Creating configMap with name configmap-test-upd-5b491a27-353a-448c-a97a-02dcc1b687ee @ 05/14/24 04:55:04.596
  STEP: Creating the pod @ 05/14/24 04:55:04.603
  E0514 04:55:05.464401      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:06.464739      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-5b491a27-353a-448c-a97a-02dcc1b687ee @ 05/14/24 04:55:06.641
  STEP: waiting to observe update in volume @ 05/14/24 04:55:06.651
  E0514 04:55:07.465189      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:08.465500      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:09.465561      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:10.466204      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:11.466804      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:12.467156      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:13.468096      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:14.467970      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:15.469045      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:16.469342      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:17.469873      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:18.470214      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:19.470716      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:20.471398      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:21.471956      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:22.472335      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:23.472930      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:24.473191      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:25.474059      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:26.474391      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:27.474517      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:28.474792      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:29.474926      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:30.475783      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:31.476824      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:32.477347      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:33.478421      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:34.478771      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:35.479500      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:36.479804      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:37.480162      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:38.480468      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:39.480942      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:40.481649      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:41.481683      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:42.482173      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:43.482603      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:44.482990      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:45.483835      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:46.484176      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:47.484593      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:48.484978      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:49.486032      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:50.486632      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:51.487554      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:52.487884      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:53.488012      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:54.489064      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:55.490035      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:56.490726      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:57.490976      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:58.491267      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:55:59.491706      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:00.492407      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:01.493133      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:02.493441      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:03.493890      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:04.494364      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:05.495245      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:06.495611      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:07.496363      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:08.496718      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:09.497810      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:10.498529      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:11.498739      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:12.499073      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:13.499347      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:14.499728      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:15.500324      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:16.500647      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:17.500982      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:18.501289      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:19.501373      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:20.501979      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:21.502756      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:22.503638      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:23.504262      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:24.504783      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:25.505359      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:26.505765      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:27.506036      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:28.506465      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:29.506882      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:30.507891      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:31.507966      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:32.508374      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:33.508911      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:34.509283      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:56:35.094: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4682" for this suite. @ 05/14/24 04:56:35.101
• [90.563 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:197
  STEP: Creating a kubernetes client @ 05/14/24 04:56:35.123
  May 14 04:56:35.123: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename emptydir @ 05/14/24 04:56:35.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:56:35.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:56:35.164
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/14/24 04:56:35.167
  E0514 04:56:35.509460      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:36.510061      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:37.510827      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:38.511212      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:56:39.206
  May 14 04:56:39.210: INFO: Trying to get logs from node viola-paas-worker03 pod pod-20e0c3a8-d281-4bc5-95cf-117c35caf274 container test-container: <nil>
  STEP: delete the pod @ 05/14/24 04:56:39.218
  May 14 04:56:39.256: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7844" for this suite. @ 05/14/24 04:56:39.267
• [4.161 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2224
  STEP: Creating a kubernetes client @ 05/14/24 04:56:39.285
  May 14 04:56:39.285: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename services @ 05/14/24 04:56:39.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:56:39.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:56:39.341
  STEP: creating service in namespace services-9653 @ 05/14/24 04:56:39.344
  STEP: creating service affinity-nodeport-transition in namespace services-9653 @ 05/14/24 04:56:39.344
  STEP: creating replication controller affinity-nodeport-transition in namespace services-9653 @ 05/14/24 04:56:39.396
  I0514 04:56:39.423696      23 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-9653, replica count: 3
  E0514 04:56:39.511620      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:40.512516      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:41.512872      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0514 04:56:42.474797      23 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 14 04:56:42.496: INFO: Creating new exec pod
  E0514 04:56:42.513521      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:43.514044      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:44.514408      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:45.514520      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:56:45.528: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-9653 exec execpod-affinity2r9j9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  May 14 04:56:45.667: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  May 14 04:56:45.667: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 14 04:56:45.667: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-9653 exec execpod-affinity2r9j9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.38.122 80'
  May 14 04:56:45.783: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.38.122 80\nConnection to 10.233.38.122 80 port [tcp/http] succeeded!\n"
  May 14 04:56:45.783: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 14 04:56:45.783: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-9653 exec execpod-affinity2r9j9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.10.50.45 31780'
  May 14 04:56:45.940: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.10.50.45 31780\nConnection to 172.10.50.45 31780 port [tcp/*] succeeded!\n"
  May 14 04:56:45.940: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 14 04:56:45.940: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-9653 exec execpod-affinity2r9j9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.10.50.107 31780'
  May 14 04:56:46.055: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.10.50.107 31780\nConnection to 172.10.50.107 31780 port [tcp/*] succeeded!\n"
  May 14 04:56:46.055: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 14 04:56:46.068: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-9653 exec execpod-affinity2r9j9 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.10.50.45:31780/ ; done'
  May 14 04:56:46.247: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31780/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31780/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31780/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31780/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31780/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31780/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31780/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31780/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31780/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31780/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31780/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31780/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31780/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31780/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31780/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31780/\n"
  May 14 04:56:46.247: INFO: stdout: "\naffinity-nodeport-transition-mjx7j\naffinity-nodeport-transition-mjx7j\naffinity-nodeport-transition-xcwwb\naffinity-nodeport-transition-mjx7j\naffinity-nodeport-transition-r27fl\naffinity-nodeport-transition-xcwwb\naffinity-nodeport-transition-r27fl\naffinity-nodeport-transition-mjx7j\naffinity-nodeport-transition-mjx7j\naffinity-nodeport-transition-xcwwb\naffinity-nodeport-transition-r27fl\naffinity-nodeport-transition-xcwwb\naffinity-nodeport-transition-mjx7j\naffinity-nodeport-transition-r27fl\naffinity-nodeport-transition-mjx7j\naffinity-nodeport-transition-xcwwb"
  May 14 04:56:46.247: INFO: Received response from host: affinity-nodeport-transition-mjx7j
  May 14 04:56:46.247: INFO: Received response from host: affinity-nodeport-transition-mjx7j
  May 14 04:56:46.247: INFO: Received response from host: affinity-nodeport-transition-xcwwb
  May 14 04:56:46.247: INFO: Received response from host: affinity-nodeport-transition-mjx7j
  May 14 04:56:46.247: INFO: Received response from host: affinity-nodeport-transition-r27fl
  May 14 04:56:46.247: INFO: Received response from host: affinity-nodeport-transition-xcwwb
  May 14 04:56:46.247: INFO: Received response from host: affinity-nodeport-transition-r27fl
  May 14 04:56:46.247: INFO: Received response from host: affinity-nodeport-transition-mjx7j
  May 14 04:56:46.247: INFO: Received response from host: affinity-nodeport-transition-mjx7j
  May 14 04:56:46.247: INFO: Received response from host: affinity-nodeport-transition-xcwwb
  May 14 04:56:46.247: INFO: Received response from host: affinity-nodeport-transition-r27fl
  May 14 04:56:46.247: INFO: Received response from host: affinity-nodeport-transition-xcwwb
  May 14 04:56:46.247: INFO: Received response from host: affinity-nodeport-transition-mjx7j
  May 14 04:56:46.247: INFO: Received response from host: affinity-nodeport-transition-r27fl
  May 14 04:56:46.247: INFO: Received response from host: affinity-nodeport-transition-mjx7j
  May 14 04:56:46.247: INFO: Received response from host: affinity-nodeport-transition-xcwwb
  May 14 04:56:46.292: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-9653 exec execpod-affinity2r9j9 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.10.50.45:31780/ ; done'
  May 14 04:56:46.458: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31780/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31780/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31780/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31780/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31780/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31780/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31780/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31780/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31780/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31780/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31780/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31780/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31780/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31780/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31780/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.45:31780/\n"
  May 14 04:56:46.458: INFO: stdout: "\naffinity-nodeport-transition-xcwwb\naffinity-nodeport-transition-xcwwb\naffinity-nodeport-transition-xcwwb\naffinity-nodeport-transition-xcwwb\naffinity-nodeport-transition-xcwwb\naffinity-nodeport-transition-xcwwb\naffinity-nodeport-transition-xcwwb\naffinity-nodeport-transition-xcwwb\naffinity-nodeport-transition-xcwwb\naffinity-nodeport-transition-xcwwb\naffinity-nodeport-transition-xcwwb\naffinity-nodeport-transition-xcwwb\naffinity-nodeport-transition-xcwwb\naffinity-nodeport-transition-xcwwb\naffinity-nodeport-transition-xcwwb\naffinity-nodeport-transition-xcwwb"
  May 14 04:56:46.458: INFO: Received response from host: affinity-nodeport-transition-xcwwb
  May 14 04:56:46.458: INFO: Received response from host: affinity-nodeport-transition-xcwwb
  May 14 04:56:46.458: INFO: Received response from host: affinity-nodeport-transition-xcwwb
  May 14 04:56:46.458: INFO: Received response from host: affinity-nodeport-transition-xcwwb
  May 14 04:56:46.458: INFO: Received response from host: affinity-nodeport-transition-xcwwb
  May 14 04:56:46.458: INFO: Received response from host: affinity-nodeport-transition-xcwwb
  May 14 04:56:46.458: INFO: Received response from host: affinity-nodeport-transition-xcwwb
  May 14 04:56:46.458: INFO: Received response from host: affinity-nodeport-transition-xcwwb
  May 14 04:56:46.458: INFO: Received response from host: affinity-nodeport-transition-xcwwb
  May 14 04:56:46.458: INFO: Received response from host: affinity-nodeport-transition-xcwwb
  May 14 04:56:46.458: INFO: Received response from host: affinity-nodeport-transition-xcwwb
  May 14 04:56:46.458: INFO: Received response from host: affinity-nodeport-transition-xcwwb
  May 14 04:56:46.458: INFO: Received response from host: affinity-nodeport-transition-xcwwb
  May 14 04:56:46.458: INFO: Received response from host: affinity-nodeport-transition-xcwwb
  May 14 04:56:46.458: INFO: Received response from host: affinity-nodeport-transition-xcwwb
  May 14 04:56:46.458: INFO: Received response from host: affinity-nodeport-transition-xcwwb
  May 14 04:56:46.458: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May 14 04:56:46.465: INFO: Cleaning up the exec pod
  E0514 04:56:46.514722      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-9653, will wait for the garbage collector to delete the pods @ 05/14/24 04:56:46.518
  May 14 04:56:46.598: INFO: Deleting ReplicationController affinity-nodeport-transition took: 26.259107ms
  May 14 04:56:46.699: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 101.231474ms
  E0514 04:56:47.514996      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:48.515532      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:49.515841      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-9653" for this suite. @ 05/14/24 04:56:50.067
• [10.808 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 05/14/24 04:56:50.094
  May 14 04:56:50.094: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename webhook @ 05/14/24 04:56:50.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:56:50.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:56:50.147
  STEP: Setting up server cert @ 05/14/24 04:56:50.211
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/14/24 04:56:50.478
  STEP: Deploying the webhook pod @ 05/14/24 04:56:50.493
  E0514 04:56:50.516668      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 05/14/24 04:56:50.528
  May 14 04:56:50.535: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0514 04:56:51.517565      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:52.517939      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/14/24 04:56:52.548
  STEP: Verifying the service has paired with the endpoint @ 05/14/24 04:56:52.573
  E0514 04:56:53.518653      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:56:53.574: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/14/24 04:56:53.996
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/14/24 04:56:54.021
  STEP: Deleting the collection of validation webhooks @ 05/14/24 04:56:54.037
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/14/24 04:56:54.213
  May 14 04:56:54.241: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-845" for this suite. @ 05/14/24 04:56:54.378
  STEP: Destroying namespace "webhook-markers-1563" for this suite. @ 05/14/24 04:56:54.392
• [4.313 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 05/14/24 04:56:54.408
  May 14 04:56:54.408: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename containers @ 05/14/24 04:56:54.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:56:54.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:56:54.485
  STEP: Creating a pod to test override all @ 05/14/24 04:56:54.488
  E0514 04:56:54.519274      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:55.520207      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:56.520545      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:57.520661      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:56:58.521006      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:56:58.572
  May 14 04:56:58.576: INFO: Trying to get logs from node viola-paas-worker03 pod client-containers-e4f8593d-5ea5-4ff4-95c5-922893bc4dac container agnhost-container: <nil>
  STEP: delete the pod @ 05/14/24 04:56:58.582
  May 14 04:56:58.610: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8066" for this suite. @ 05/14/24 04:56:58.619
• [4.220 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 05/14/24 04:56:58.628
  May 14 04:56:58.628: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename var-expansion @ 05/14/24 04:56:58.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:56:58.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:56:58.683
  E0514 04:56:59.521109      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:00.521739      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:57:00.742: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May 14 04:57:00.748: INFO: Deleting pod "var-expansion-5abae0eb-f9a7-484b-ad72-3283475fdde0" in namespace "var-expansion-8281"
  May 14 04:57:00.777: INFO: Wait up to 5m0s for pod "var-expansion-5abae0eb-f9a7-484b-ad72-3283475fdde0" to be fully deleted
  E0514 04:57:01.522497      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:02.522853      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-8281" for this suite. @ 05/14/24 04:57:02.798
• [4.183 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 05/14/24 04:57:02.813
  May 14 04:57:02.813: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/14/24 04:57:02.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:57:02.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:57:02.866
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 05/14/24 04:57:02.869
  May 14 04:57:02.870: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  E0514 04:57:03.523434      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:04.523688      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:05.524633      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:06.525619      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:07.525685      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:08.526736      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:09.526749      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:10.527723      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:57:11.023: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  E0514 04:57:11.528173      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:12.529265      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:13.529727      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:14.529785      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:15.530678      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:16.530681      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:17.530883      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:18.531067      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:19.531113      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:20.531747      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:21.532232      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:22.532573      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:23.533287      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:24.533727      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:25.534455      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:26.535296      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:57:26.751: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9161" for this suite. @ 05/14/24 04:57:26.761
• [23.955 seconds]
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance]
test/e2e/instrumentation/core_events.go:175
  STEP: Creating a kubernetes client @ 05/14/24 04:57:26.768
  May 14 04:57:26.768: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename events @ 05/14/24 04:57:26.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:57:26.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:57:26.816
  STEP: Create set of events @ 05/14/24 04:57:26.818
  May 14 04:57:26.835: INFO: created test-event-1
  May 14 04:57:26.852: INFO: created test-event-2
  May 14 04:57:26.858: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 05/14/24 04:57:26.858
  STEP: delete collection of events @ 05/14/24 04:57:26.865
  May 14 04:57:26.865: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/14/24 04:57:26.947
  May 14 04:57:26.947: INFO: requesting list of events to confirm quantity
  May 14 04:57:26.960: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2259" for this suite. @ 05/14/24 04:57:26.966
• [0.216 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 05/14/24 04:57:26.986
  May 14 04:57:26.986: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename downward-api @ 05/14/24 04:57:26.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:57:27.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:57:27.038
  STEP: Creating a pod to test downward API volume plugin @ 05/14/24 04:57:27.041
  E0514 04:57:27.535577      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:28.535976      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:29.536212      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:30.536776      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:57:31.089
  May 14 04:57:31.091: INFO: Trying to get logs from node viola-paas-worker03 pod downwardapi-volume-075a012f-42a6-4456-9ec1-d56c8b78c618 container client-container: <nil>
  STEP: delete the pod @ 05/14/24 04:57:31.098
  May 14 04:57:31.155: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3393" for this suite. @ 05/14/24 04:57:31.161
• [4.217 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:187
  STEP: Creating a kubernetes client @ 05/14/24 04:57:31.207
  May 14 04:57:31.207: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename emptydir @ 05/14/24 04:57:31.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:57:31.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:57:31.287
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/14/24 04:57:31.299
  E0514 04:57:31.536813      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:32.537193      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:33.537700      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:34.538049      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:57:35.369
  May 14 04:57:35.374: INFO: Trying to get logs from node viola-paas-worker03 pod pod-48ea9fa8-fafb-4d65-8b70-0010ae244402 container test-container: <nil>
  STEP: delete the pod @ 05/14/24 04:57:35.38
  May 14 04:57:35.451: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7372" for this suite. @ 05/14/24 04:57:35.456
• [4.263 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]
test/e2e/apps/job.go:513
  STEP: Creating a kubernetes client @ 05/14/24 04:57:35.47
  May 14 04:57:35.470: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename job @ 05/14/24 04:57:35.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:57:35.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:57:35.514
  STEP: Creating a job @ 05/14/24 04:57:35.516
  STEP: Ensuring active pods == parallelism @ 05/14/24 04:57:35.524
  E0514 04:57:35.539176      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:36.539592      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:37.540498      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 05/14/24 04:57:37.549
  May 14 04:57:38.090: INFO: Successfully updated pod "adopt-release-w6djv"
  STEP: Checking that the Job readopts the Pod @ 05/14/24 04:57:38.09
  E0514 04:57:38.541416      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:39.541731      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 05/14/24 04:57:40.116
  E0514 04:57:40.541996      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:57:40.665: INFO: Successfully updated pod "adopt-release-w6djv"
  STEP: Checking that the Job releases the Pod @ 05/14/24 04:57:40.665
  E0514 04:57:41.542173      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:42.542644      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:57:42.695: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-222" for this suite. @ 05/14/24 04:57:42.702
• [7.245 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 05/14/24 04:57:42.716
  May 14 04:57:42.716: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename pods @ 05/14/24 04:57:42.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:57:42.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:57:42.873
  STEP: Create a pod @ 05/14/24 04:57:42.876
  E0514 04:57:43.543340      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:44.543676      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 05/14/24 04:57:44.961
  May 14 04:57:45.003: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  May 14 04:57:45.003: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7045" for this suite. @ 05/14/24 04:57:45.016
• [2.311 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2187
  STEP: Creating a kubernetes client @ 05/14/24 04:57:45.028
  May 14 04:57:45.028: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename services @ 05/14/24 04:57:45.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:57:45.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:57:45.073
  STEP: creating service in namespace services-3083 @ 05/14/24 04:57:45.091
  STEP: creating service affinity-clusterip-transition in namespace services-3083 @ 05/14/24 04:57:45.092
  STEP: creating replication controller affinity-clusterip-transition in namespace services-3083 @ 05/14/24 04:57:45.144
  I0514 04:57:45.161629      23 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-3083, replica count: 3
  E0514 04:57:45.544726      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:46.545479      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:47.546296      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0514 04:57:48.213213      23 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 14 04:57:48.221: INFO: Creating new exec pod
  E0514 04:57:48.546373      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:49.546831      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:50.547625      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:57:51.278: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-3083 exec execpod-affinitylmxbw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  May 14 04:57:51.401: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  May 14 04:57:51.401: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 14 04:57:51.401: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-3083 exec execpod-affinitylmxbw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.29.74 80'
  May 14 04:57:51.514: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.29.74 80\nConnection to 10.233.29.74 80 port [tcp/http] succeeded!\n"
  May 14 04:57:51.514: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 14 04:57:51.523: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-3083 exec execpod-affinitylmxbw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.29.74:80/ ; done'
  E0514 04:57:51.548711      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:57:51.728: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.74:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.74:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.74:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.74:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.74:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.74:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.74:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.74:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.74:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.74:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.74:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.74:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.74:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.74:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.74:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.74:80/\n"
  May 14 04:57:51.728: INFO: stdout: "\naffinity-clusterip-transition-c8ntp\naffinity-clusterip-transition-5khtt\naffinity-clusterip-transition-9n7rm\naffinity-clusterip-transition-c8ntp\naffinity-clusterip-transition-9n7rm\naffinity-clusterip-transition-c8ntp\naffinity-clusterip-transition-c8ntp\naffinity-clusterip-transition-c8ntp\naffinity-clusterip-transition-c8ntp\naffinity-clusterip-transition-c8ntp\naffinity-clusterip-transition-c8ntp\naffinity-clusterip-transition-c8ntp\naffinity-clusterip-transition-5khtt\naffinity-clusterip-transition-5khtt\naffinity-clusterip-transition-c8ntp\naffinity-clusterip-transition-5khtt"
  May 14 04:57:51.728: INFO: Received response from host: affinity-clusterip-transition-c8ntp
  May 14 04:57:51.728: INFO: Received response from host: affinity-clusterip-transition-5khtt
  May 14 04:57:51.728: INFO: Received response from host: affinity-clusterip-transition-9n7rm
  May 14 04:57:51.728: INFO: Received response from host: affinity-clusterip-transition-c8ntp
  May 14 04:57:51.728: INFO: Received response from host: affinity-clusterip-transition-9n7rm
  May 14 04:57:51.728: INFO: Received response from host: affinity-clusterip-transition-c8ntp
  May 14 04:57:51.728: INFO: Received response from host: affinity-clusterip-transition-c8ntp
  May 14 04:57:51.728: INFO: Received response from host: affinity-clusterip-transition-c8ntp
  May 14 04:57:51.728: INFO: Received response from host: affinity-clusterip-transition-c8ntp
  May 14 04:57:51.728: INFO: Received response from host: affinity-clusterip-transition-c8ntp
  May 14 04:57:51.728: INFO: Received response from host: affinity-clusterip-transition-c8ntp
  May 14 04:57:51.728: INFO: Received response from host: affinity-clusterip-transition-c8ntp
  May 14 04:57:51.728: INFO: Received response from host: affinity-clusterip-transition-5khtt
  May 14 04:57:51.728: INFO: Received response from host: affinity-clusterip-transition-5khtt
  May 14 04:57:51.728: INFO: Received response from host: affinity-clusterip-transition-c8ntp
  May 14 04:57:51.728: INFO: Received response from host: affinity-clusterip-transition-5khtt
  May 14 04:57:51.760: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-3083 exec execpod-affinitylmxbw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.29.74:80/ ; done'
  May 14 04:57:51.937: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.74:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.74:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.74:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.74:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.74:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.74:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.74:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.74:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.74:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.74:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.74:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.74:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.74:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.74:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.74:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.74:80/\n"
  May 14 04:57:51.937: INFO: stdout: "\naffinity-clusterip-transition-c8ntp\naffinity-clusterip-transition-c8ntp\naffinity-clusterip-transition-c8ntp\naffinity-clusterip-transition-c8ntp\naffinity-clusterip-transition-c8ntp\naffinity-clusterip-transition-c8ntp\naffinity-clusterip-transition-c8ntp\naffinity-clusterip-transition-c8ntp\naffinity-clusterip-transition-c8ntp\naffinity-clusterip-transition-c8ntp\naffinity-clusterip-transition-c8ntp\naffinity-clusterip-transition-c8ntp\naffinity-clusterip-transition-c8ntp\naffinity-clusterip-transition-c8ntp\naffinity-clusterip-transition-c8ntp\naffinity-clusterip-transition-c8ntp"
  May 14 04:57:51.937: INFO: Received response from host: affinity-clusterip-transition-c8ntp
  May 14 04:57:51.937: INFO: Received response from host: affinity-clusterip-transition-c8ntp
  May 14 04:57:51.937: INFO: Received response from host: affinity-clusterip-transition-c8ntp
  May 14 04:57:51.937: INFO: Received response from host: affinity-clusterip-transition-c8ntp
  May 14 04:57:51.937: INFO: Received response from host: affinity-clusterip-transition-c8ntp
  May 14 04:57:51.937: INFO: Received response from host: affinity-clusterip-transition-c8ntp
  May 14 04:57:51.937: INFO: Received response from host: affinity-clusterip-transition-c8ntp
  May 14 04:57:51.937: INFO: Received response from host: affinity-clusterip-transition-c8ntp
  May 14 04:57:51.937: INFO: Received response from host: affinity-clusterip-transition-c8ntp
  May 14 04:57:51.937: INFO: Received response from host: affinity-clusterip-transition-c8ntp
  May 14 04:57:51.937: INFO: Received response from host: affinity-clusterip-transition-c8ntp
  May 14 04:57:51.937: INFO: Received response from host: affinity-clusterip-transition-c8ntp
  May 14 04:57:51.937: INFO: Received response from host: affinity-clusterip-transition-c8ntp
  May 14 04:57:51.937: INFO: Received response from host: affinity-clusterip-transition-c8ntp
  May 14 04:57:51.937: INFO: Received response from host: affinity-clusterip-transition-c8ntp
  May 14 04:57:51.937: INFO: Received response from host: affinity-clusterip-transition-c8ntp
  May 14 04:57:51.937: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May 14 04:57:51.942: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-3083, will wait for the garbage collector to delete the pods @ 05/14/24 04:57:51.986
  May 14 04:57:52.062: INFO: Deleting ReplicationController affinity-clusterip-transition took: 16.809136ms
  May 14 04:57:52.163: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.873462ms
  E0514 04:57:52.549537      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:53.550100      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:54.550587      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:55.550904      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-3083" for this suite. @ 05/14/24 04:57:55.681
• [10.696 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:95
  STEP: Creating a kubernetes client @ 05/14/24 04:57:55.725
  May 14 04:57:55.725: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename secrets @ 05/14/24 04:57:55.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:57:55.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:57:55.806
  STEP: creating secret secrets-4464/secret-test-899f7289-80d9-4ad1-8ef4-fea10563c3e0 @ 05/14/24 04:57:55.808
  STEP: Creating a pod to test consume secrets @ 05/14/24 04:57:55.823
  E0514 04:57:56.551645      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:57.552566      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:58.552702      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:57:59.553061      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 04:57:59.866
  May 14 04:57:59.870: INFO: Trying to get logs from node viola-paas-worker03 pod pod-configmaps-952560e6-0bd5-4d42-9a98-25a481eb14c3 container env-test: <nil>
  STEP: delete the pod @ 05/14/24 04:57:59.877
  May 14 04:57:59.919: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4464" for this suite. @ 05/14/24 04:57:59.934
• [4.226 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 05/14/24 04:57:59.951
  May 14 04:57:59.951: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename daemonsets @ 05/14/24 04:57:59.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:58:00.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:58:00.019
  May 14 04:58:00.079: INFO: Create a RollingUpdate DaemonSet
  May 14 04:58:00.088: INFO: Check that daemon pods launch on every node of the cluster
  May 14 04:58:00.093: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:58:00.093: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:58:00.093: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:58:00.102: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 14 04:58:00.102: INFO: Node viola-paas-ingress01 is running 0 daemon pod, expected 1
  E0514 04:58:00.553846      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:58:01.116: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:58:01.116: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:58:01.116: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:58:01.175: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 14 04:58:01.175: INFO: Node viola-paas-ingress01 is running 0 daemon pod, expected 1
  E0514 04:58:01.554098      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:58:02.107: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:58:02.107: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:58:02.107: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:58:02.112: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  May 14 04:58:02.112: INFO: Node viola-paas-worker03 is running 0 daemon pod, expected 1
  E0514 04:58:02.555083      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:58:03.109: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:58:03.109: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:58:03.109: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:58:03.113: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
  May 14 04:58:03.113: INFO: Number of running nodes: 5, number of available pods: 5 in daemonset daemon-set
  May 14 04:58:03.113: INFO: Update the DaemonSet to trigger a rollout
  May 14 04:58:03.133: INFO: Updating DaemonSet daemon-set
  E0514 04:58:03.555419      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:58:04.160: INFO: Roll back the DaemonSet before rollout is complete
  May 14 04:58:04.188: INFO: Updating DaemonSet daemon-set
  May 14 04:58:04.188: INFO: Make sure DaemonSet rollback is complete
  May 14 04:58:04.192: INFO: Wrong image for pod: daemon-set-xdp6b. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  May 14 04:58:04.192: INFO: Pod daemon-set-xdp6b is not available
  May 14 04:58:04.204: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:58:04.204: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:58:04.204: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0514 04:58:04.555610      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:58:05.216: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:58:05.216: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:58:05.216: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0514 04:58:05.556371      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:58:06.217: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:58:06.217: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:58:06.217: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0514 04:58:06.557376      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:58:07.218: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:58:07.218: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:58:07.218: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0514 04:58:07.558486      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:58:08.211: INFO: Pod daemon-set-7jnkn is not available
  May 14 04:58:08.217: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:58:08.218: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:58:08.218: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 05/14/24 04:58:08.237
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6466, will wait for the garbage collector to delete the pods @ 05/14/24 04:58:08.237
  May 14 04:58:08.303: INFO: Deleting DaemonSet.extensions daemon-set took: 10.46284ms
  May 14 04:58:08.503: INFO: Terminating DaemonSet.extensions daemon-set pods took: 200.44442ms
  E0514 04:58:08.558844      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:09.559762      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:10.559723      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:58:10.607: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 14 04:58:10.608: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May 14 04:58:10.611: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26341838"},"items":null}

  May 14 04:58:10.614: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26341838"},"items":null}

  May 14 04:58:10.635: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6466" for this suite. @ 05/14/24 04:58:10.644
• [10.707 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 05/14/24 04:58:10.662
  May 14 04:58:10.662: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename dns @ 05/14/24 04:58:10.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:58:10.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:58:10.717
  STEP: Creating a test headless service @ 05/14/24 04:58:10.729
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1870 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1870;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1870 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1870;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1870.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1870.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1870.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1870.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1870.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-1870.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1870.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-1870.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1870.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-1870.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1870.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-1870.svc;check="$$(dig +notcp +noall +answer +search 244.26.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.26.244_udp@PTR;check="$$(dig +tcp +noall +answer +search 244.26.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.26.244_tcp@PTR;sleep 1; done
   @ 05/14/24 04:58:10.831
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1870 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1870;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1870 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1870;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1870.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1870.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1870.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1870.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1870.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-1870.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1870.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-1870.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1870.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-1870.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1870.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-1870.svc;check="$$(dig +notcp +noall +answer +search 244.26.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.26.244_udp@PTR;check="$$(dig +tcp +noall +answer +search 244.26.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.26.244_tcp@PTR;sleep 1; done
   @ 05/14/24 04:58:10.831
  STEP: creating a pod to probe DNS @ 05/14/24 04:58:10.831
  STEP: submitting the pod to kubernetes @ 05/14/24 04:58:10.831
  E0514 04:58:11.560150      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:12.560470      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:13.560859      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:14.561204      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/14/24 04:58:14.905
  STEP: looking for the results for each expected name from probers @ 05/14/24 04:58:14.909
  May 14 04:58:14.914: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-1870/dns-test-d994f4d0-c313-44c3-bb62-c5a996295692: the server could not find the requested resource (get pods dns-test-d994f4d0-c313-44c3-bb62-c5a996295692)
  May 14 04:58:14.917: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-1870/dns-test-d994f4d0-c313-44c3-bb62-c5a996295692: the server could not find the requested resource (get pods dns-test-d994f4d0-c313-44c3-bb62-c5a996295692)
  May 14 04:58:14.920: INFO: Unable to read wheezy_udp@dns-test-service.dns-1870 from pod dns-1870/dns-test-d994f4d0-c313-44c3-bb62-c5a996295692: the server could not find the requested resource (get pods dns-test-d994f4d0-c313-44c3-bb62-c5a996295692)
  May 14 04:58:14.924: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1870 from pod dns-1870/dns-test-d994f4d0-c313-44c3-bb62-c5a996295692: the server could not find the requested resource (get pods dns-test-d994f4d0-c313-44c3-bb62-c5a996295692)
  May 14 04:58:14.926: INFO: Unable to read wheezy_udp@dns-test-service.dns-1870.svc from pod dns-1870/dns-test-d994f4d0-c313-44c3-bb62-c5a996295692: the server could not find the requested resource (get pods dns-test-d994f4d0-c313-44c3-bb62-c5a996295692)
  May 14 04:58:14.929: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1870.svc from pod dns-1870/dns-test-d994f4d0-c313-44c3-bb62-c5a996295692: the server could not find the requested resource (get pods dns-test-d994f4d0-c313-44c3-bb62-c5a996295692)
  May 14 04:58:14.932: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1870.svc from pod dns-1870/dns-test-d994f4d0-c313-44c3-bb62-c5a996295692: the server could not find the requested resource (get pods dns-test-d994f4d0-c313-44c3-bb62-c5a996295692)
  May 14 04:58:14.935: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1870.svc from pod dns-1870/dns-test-d994f4d0-c313-44c3-bb62-c5a996295692: the server could not find the requested resource (get pods dns-test-d994f4d0-c313-44c3-bb62-c5a996295692)
  May 14 04:58:14.952: INFO: Unable to read jessie_udp@dns-test-service from pod dns-1870/dns-test-d994f4d0-c313-44c3-bb62-c5a996295692: the server could not find the requested resource (get pods dns-test-d994f4d0-c313-44c3-bb62-c5a996295692)
  May 14 04:58:14.955: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-1870/dns-test-d994f4d0-c313-44c3-bb62-c5a996295692: the server could not find the requested resource (get pods dns-test-d994f4d0-c313-44c3-bb62-c5a996295692)
  May 14 04:58:14.957: INFO: Unable to read jessie_udp@dns-test-service.dns-1870 from pod dns-1870/dns-test-d994f4d0-c313-44c3-bb62-c5a996295692: the server could not find the requested resource (get pods dns-test-d994f4d0-c313-44c3-bb62-c5a996295692)
  May 14 04:58:14.960: INFO: Unable to read jessie_tcp@dns-test-service.dns-1870 from pod dns-1870/dns-test-d994f4d0-c313-44c3-bb62-c5a996295692: the server could not find the requested resource (get pods dns-test-d994f4d0-c313-44c3-bb62-c5a996295692)
  May 14 04:58:14.962: INFO: Unable to read jessie_udp@dns-test-service.dns-1870.svc from pod dns-1870/dns-test-d994f4d0-c313-44c3-bb62-c5a996295692: the server could not find the requested resource (get pods dns-test-d994f4d0-c313-44c3-bb62-c5a996295692)
  May 14 04:58:14.965: INFO: Unable to read jessie_tcp@dns-test-service.dns-1870.svc from pod dns-1870/dns-test-d994f4d0-c313-44c3-bb62-c5a996295692: the server could not find the requested resource (get pods dns-test-d994f4d0-c313-44c3-bb62-c5a996295692)
  May 14 04:58:14.968: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1870.svc from pod dns-1870/dns-test-d994f4d0-c313-44c3-bb62-c5a996295692: the server could not find the requested resource (get pods dns-test-d994f4d0-c313-44c3-bb62-c5a996295692)
  May 14 04:58:14.970: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1870.svc from pod dns-1870/dns-test-d994f4d0-c313-44c3-bb62-c5a996295692: the server could not find the requested resource (get pods dns-test-d994f4d0-c313-44c3-bb62-c5a996295692)
  May 14 04:58:14.983: INFO: Lookups using dns-1870/dns-test-d994f4d0-c313-44c3-bb62-c5a996295692 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-1870 wheezy_tcp@dns-test-service.dns-1870 wheezy_udp@dns-test-service.dns-1870.svc wheezy_tcp@dns-test-service.dns-1870.svc wheezy_udp@_http._tcp.dns-test-service.dns-1870.svc wheezy_tcp@_http._tcp.dns-test-service.dns-1870.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1870 jessie_tcp@dns-test-service.dns-1870 jessie_udp@dns-test-service.dns-1870.svc jessie_tcp@dns-test-service.dns-1870.svc jessie_udp@_http._tcp.dns-test-service.dns-1870.svc jessie_tcp@_http._tcp.dns-test-service.dns-1870.svc]

  May 14 04:58:14.989: INFO: Pod client logs for webserver: 
  May 14 04:58:14.994: INFO: Pod client logs for querier: 
  May 14 04:58:15.000: INFO: Pod client logs for jessie-querier: 
  E0514 04:58:15.561261      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:16.561815      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:17.562157      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:18.562507      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:19.562866      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:58:20.137: INFO: DNS probes using dns-1870/dns-test-d994f4d0-c313-44c3-bb62-c5a996295692 succeeded

  May 14 04:58:20.137: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/14/24 04:58:20.146
  STEP: deleting the test service @ 05/14/24 04:58:20.272
  STEP: deleting the test headless service @ 05/14/24 04:58:20.354
  STEP: Destroying namespace "dns-1870" for this suite. @ 05/14/24 04:58:20.411
• [9.777 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 05/14/24 04:58:20.442
  May 14 04:58:20.442: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename disruption @ 05/14/24 04:58:20.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:58:20.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:58:20.525
  E0514 04:58:20.563828      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 05/14/24 04:58:20.578
  STEP: Waiting for all pods to be running @ 05/14/24 04:58:20.706
  May 14 04:58:20.729: INFO: running pods: 0 < 3
  E0514 04:58:21.564775      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:22.564910      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:58:22.738: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2385" for this suite. @ 05/14/24 04:58:22.747
• [2.335 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]
test/e2e/apps/statefulset.go:901
  STEP: Creating a kubernetes client @ 05/14/24 04:58:22.779
  May 14 04:58:22.779: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename statefulset @ 05/14/24 04:58:22.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:58:22.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:58:22.863
  STEP: Creating service test in namespace statefulset-9997 @ 05/14/24 04:58:22.866
  STEP: Creating statefulset ss in namespace statefulset-9997 @ 05/14/24 04:58:22.879
  May 14 04:58:22.938: INFO: Found 0 stateful pods, waiting for 1
  E0514 04:58:23.565059      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:24.565471      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:25.566385      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:26.566495      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:27.566799      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:28.567541      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:29.567700      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:30.567886      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:31.568188      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:32.568236      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:58:32.945: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 05/14/24 04:58:32.959
  STEP: updating a scale subresource @ 05/14/24 04:58:32.962
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/14/24 04:58:32.979
  STEP: Patch a scale subresource @ 05/14/24 04:58:33.006
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/14/24 04:58:33.029
  May 14 04:58:33.104: INFO: Deleting all statefulset in ns statefulset-9997
  May 14 04:58:33.107: INFO: Scaling statefulset ss to 0
  E0514 04:58:33.569192      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:34.569902      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:35.570003      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:36.570153      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:37.570880      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:38.570761      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:39.570858      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:40.571512      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:41.571715      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:42.571831      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:58:43.180: INFO: Waiting for statefulset status.replicas updated to 0
  May 14 04:58:43.184: INFO: Deleting statefulset ss
  May 14 04:58:43.220: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9997" for this suite. @ 05/14/24 04:58:43.226
• [20.467 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 05/14/24 04:58:43.247
  May 14 04:58:43.248: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename field-validation @ 05/14/24 04:58:43.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:58:43.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:58:43.323
  May 14 04:58:43.326: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  E0514 04:58:43.572848      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:44.573456      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:45.574087      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:46.574727      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:47.575422      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:48.575672      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:49.576410      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:50.577040      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0514 04:58:50.906582      23 warnings.go:70] unknown field "alpha"
  W0514 04:58:50.906623      23 warnings.go:70] unknown field "beta"
  W0514 04:58:50.906627      23 warnings.go:70] unknown field "delta"
  W0514 04:58:50.906631      23 warnings.go:70] unknown field "epsilon"
  W0514 04:58:50.906635      23 warnings.go:70] unknown field "gamma"
  May 14 04:58:51.463: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5972" for this suite. @ 05/14/24 04:58:51.483
• [8.260 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:145
  STEP: Creating a kubernetes client @ 05/14/24 04:58:51.509
  May 14 04:58:51.509: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/14/24 04:58:51.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:58:51.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:58:51.574
  E0514 04:58:51.577281      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:58:51.580: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  E0514 04:58:52.577670      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:53.578587      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:54.579606      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:55.579777      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:56.580525      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:58:57.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8119" for this suite. @ 05/14/24 04:58:57.259
• [5.818 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 05/14/24 04:58:57.327
  May 14 04:58:57.327: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename daemonsets @ 05/14/24 04:58:57.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:58:57.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:58:57.436
  STEP: Creating simple DaemonSet "daemon-set" @ 05/14/24 04:58:57.483
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/14/24 04:58:57.511
  May 14 04:58:57.518: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:58:57.518: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:58:57.518: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:58:57.521: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 14 04:58:57.521: INFO: Node viola-paas-ingress01 is running 0 daemon pod, expected 1
  E0514 04:58:57.581175      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:58:58.538: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:58:58.538: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:58:58.538: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:58:58.543: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 14 04:58:58.543: INFO: Node viola-paas-ingress01 is running 0 daemon pod, expected 1
  E0514 04:58:58.581185      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:58:59.581978      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:58:59.600: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:58:59.600: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:58:59.600: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:58:59.614: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  May 14 04:58:59.614: INFO: Node viola-paas-worker01 is running 0 daemon pod, expected 1
  May 14 04:59:00.529: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:59:00.529: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:59:00.529: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:59:00.534: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
  May 14 04:59:00.534: INFO: Number of running nodes: 5, number of available pods: 5 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 05/14/24 04:59:00.536
  May 14 04:59:00.570: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:59:00.570: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:59:00.570: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:59:00.577: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  May 14 04:59:00.577: INFO: Node viola-paas-ingress02 is running 0 daemon pod, expected 1
  E0514 04:59:00.582403      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:01.583014      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:59:01.584: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:59:01.585: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:59:01.585: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:59:01.588: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  May 14 04:59:01.588: INFO: Node viola-paas-ingress02 is running 0 daemon pod, expected 1
  E0514 04:59:02.583115      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:59:02.585: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:59:02.585: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:59:02.585: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 04:59:02.589: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
  May 14 04:59:02.590: INFO: Number of running nodes: 5, number of available pods: 5 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/14/24 04:59:02.594
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5682, will wait for the garbage collector to delete the pods @ 05/14/24 04:59:02.594
  May 14 04:59:02.663: INFO: Deleting DaemonSet.extensions daemon-set took: 14.761141ms
  May 14 04:59:02.764: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.697134ms
  E0514 04:59:03.584091      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:04.584756      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:59:04.669: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 14 04:59:04.669: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May 14 04:59:04.672: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26342734"},"items":null}

  May 14 04:59:04.685: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26342734"},"items":null}

  May 14 04:59:04.728: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5682" for this suite. @ 05/14/24 04:59:04.735
• [7.433 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 05/14/24 04:59:04.76
  May 14 04:59:04.760: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename subjectreview @ 05/14/24 04:59:04.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:59:04.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:59:04.805
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-1926" @ 05/14/24 04:59:04.808
  May 14 04:59:04.821: INFO: saUsername: "system:serviceaccount:subjectreview-1926:e2e"
  May 14 04:59:04.821: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-1926"}
  May 14 04:59:04.821: INFO: saUID: "1842cb27-5edc-477e-9281-e5f73caaaaca"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-1926:e2e" @ 05/14/24 04:59:04.821
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-1926:e2e" @ 05/14/24 04:59:04.821
  May 14 04:59:04.823: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-1926:e2e" api 'list' configmaps in "subjectreview-1926" namespace @ 05/14/24 04:59:04.823
  May 14 04:59:04.824: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-1926:e2e" @ 05/14/24 04:59:04.824
  May 14 04:59:04.827: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  May 14 04:59:04.827: INFO: LocalSubjectAccessReview has been verified
  May 14 04:59:04.827: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-1926" for this suite. @ 05/14/24 04:59:04.832
• [0.105 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]
test/e2e/apimachinery/resource_quota.go:806
  STEP: Creating a kubernetes client @ 05/14/24 04:59:04.867
  May 14 04:59:04.867: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename resourcequota @ 05/14/24 04:59:04.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:59:04.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:59:04.92
  STEP: Creating a ResourceQuota with best effort scope @ 05/14/24 04:59:04.924
  STEP: Ensuring ResourceQuota status is calculated @ 05/14/24 04:59:04.94
  E0514 04:59:05.585034      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:06.585562      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 05/14/24 04:59:06.946
  STEP: Ensuring ResourceQuota status is calculated @ 05/14/24 04:59:06.955
  E0514 04:59:07.585720      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:08.586164      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 05/14/24 04:59:08.96
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 05/14/24 04:59:09.001
  E0514 04:59:09.586160      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:10.586693      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 05/14/24 04:59:11.005
  E0514 04:59:11.587608      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:12.588110      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/14/24 04:59:13.01
  STEP: Ensuring resource quota status released the pod usage @ 05/14/24 04:59:13.043
  E0514 04:59:13.588211      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:14.588507      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 05/14/24 04:59:15.05
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 05/14/24 04:59:15.083
  E0514 04:59:15.589575      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:16.589913      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 05/14/24 04:59:17.087
  E0514 04:59:17.590209      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:18.590651      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/14/24 04:59:19.095
  STEP: Ensuring resource quota status released the pod usage @ 05/14/24 04:59:19.154
  E0514 04:59:19.591358      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:20.591843      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 04:59:21.159: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3754" for this suite. @ 05/14/24 04:59:21.164
• [16.337 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance]
test/e2e/network/service.go:3326
  STEP: Creating a kubernetes client @ 05/14/24 04:59:21.204
  May 14 04:59:21.204: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename services @ 05/14/24 04:59:21.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:59:21.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:59:21.295
  STEP: creating a Service @ 05/14/24 04:59:21.302
  STEP: watching for the Service to be added @ 05/14/24 04:59:21.328
  May 14 04:59:21.330: INFO: Found Service test-service-8p298 in namespace services-4875 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
  May 14 04:59:21.330: INFO: Service test-service-8p298 created
  STEP: Getting /status @ 05/14/24 04:59:21.33
  May 14 04:59:21.333: INFO: Service test-service-8p298 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 05/14/24 04:59:21.333
  STEP: watching for the Service to be patched @ 05/14/24 04:59:21.363
  May 14 04:59:21.364: INFO: observed Service test-service-8p298 in namespace services-4875 with annotations: map[] & LoadBalancer: {[]}
  May 14 04:59:21.364: INFO: Found Service test-service-8p298 in namespace services-4875 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
  May 14 04:59:21.364: INFO: Service test-service-8p298 has service status patched
  STEP: updating the ServiceStatus @ 05/14/24 04:59:21.364
  May 14 04:59:21.390: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 05/14/24 04:59:21.39
  May 14 04:59:21.392: INFO: Observed Service test-service-8p298 in namespace services-4875 with annotations: map[] & Conditions: {[]}
  May 14 04:59:21.392: INFO: Observed event: &Service{ObjectMeta:{test-service-8p298  services-4875  15166034-fecd-4c73-96d9-c97b2c772c1e 26342901 0 2024-05-14 04:59:21 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-05-14 04:59:21 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-05-14 04:59:21 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.233.16.108,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.233.16.108],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  May 14 04:59:21.392: INFO: Found Service test-service-8p298 in namespace services-4875 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  May 14 04:59:21.392: INFO: Service test-service-8p298 has service status updated
  STEP: patching the service @ 05/14/24 04:59:21.392
  STEP: watching for the Service to be patched @ 05/14/24 04:59:21.409
  May 14 04:59:21.411: INFO: observed Service test-service-8p298 in namespace services-4875 with labels: map[test-service-static:true]
  May 14 04:59:21.411: INFO: observed Service test-service-8p298 in namespace services-4875 with labels: map[test-service-static:true]
  May 14 04:59:21.411: INFO: observed Service test-service-8p298 in namespace services-4875 with labels: map[test-service-static:true]
  May 14 04:59:21.411: INFO: Found Service test-service-8p298 in namespace services-4875 with labels: map[test-service:patched test-service-static:true]
  May 14 04:59:21.411: INFO: Service test-service-8p298 patched
  STEP: deleting the service @ 05/14/24 04:59:21.411
  STEP: watching for the Service to be deleted @ 05/14/24 04:59:21.461
  May 14 04:59:21.463: INFO: Observed event: ADDED
  May 14 04:59:21.463: INFO: Observed event: MODIFIED
  May 14 04:59:21.463: INFO: Observed event: MODIFIED
  May 14 04:59:21.463: INFO: Observed event: MODIFIED
  May 14 04:59:21.463: INFO: Found Service test-service-8p298 in namespace services-4875 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  May 14 04:59:21.463: INFO: Service test-service-8p298 deleted
  May 14 04:59:21.463: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4875" for this suite. @ 05/14/24 04:59:21.476
• [0.289 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]
test/e2e/apimachinery/garbage_collector.go:379
  STEP: Creating a kubernetes client @ 05/14/24 04:59:21.494
  May 14 04:59:21.494: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename gc @ 05/14/24 04:59:21.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 04:59:21.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 04:59:21.545
  STEP: create the rc @ 05/14/24 04:59:21.557
  W0514 04:59:21.575952      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0514 04:59:21.592204      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:22.592432      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:23.593254      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:24.593951      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:25.594601      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:26.595574      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:27.596256      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 05/14/24 04:59:27.616
  STEP: wait for the rc to be deleted @ 05/14/24 04:59:27.776
  E0514 04:59:28.596525      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:29.596868      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:30.597681      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:31.598271      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:32.598751      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 05/14/24 04:59:32.779
  E0514 04:59:33.599279      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:34.599656      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:35.600494      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:36.600806      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:37.601140      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:38.601479      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:39.601898      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:40.602403      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:41.602718      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:42.603044      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:43.603366      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:44.603815      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:45.604722      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:46.605064      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:47.605364      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:48.605828      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:49.606300      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:50.606483      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:51.606485      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:52.606628      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:53.606765      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:54.606927      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:55.607055      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:56.607457      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:57.607744      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:58.608761      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 04:59:59.609724      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:00.610238      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:01.610595      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:02.610636      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/14/24 05:00:02.8
  May 14 05:00:02.889: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May 14 05:00:02.889: INFO: Deleting pod "simpletest.rc-28hl9" in namespace "gc-230"
  May 14 05:00:02.918: INFO: Deleting pod "simpletest.rc-2bbwf" in namespace "gc-230"
  May 14 05:00:02.947: INFO: Deleting pod "simpletest.rc-2j4px" in namespace "gc-230"
  May 14 05:00:03.006: INFO: Deleting pod "simpletest.rc-2wm54" in namespace "gc-230"
  May 14 05:00:03.071: INFO: Deleting pod "simpletest.rc-424qv" in namespace "gc-230"
  May 14 05:00:03.108: INFO: Deleting pod "simpletest.rc-472sk" in namespace "gc-230"
  May 14 05:00:03.183: INFO: Deleting pod "simpletest.rc-4x8t2" in namespace "gc-230"
  May 14 05:00:03.221: INFO: Deleting pod "simpletest.rc-59kmm" in namespace "gc-230"
  May 14 05:00:03.298: INFO: Deleting pod "simpletest.rc-5j2kd" in namespace "gc-230"
  May 14 05:00:03.421: INFO: Deleting pod "simpletest.rc-5mk55" in namespace "gc-230"
  May 14 05:00:03.465: INFO: Deleting pod "simpletest.rc-5q7zn" in namespace "gc-230"
  May 14 05:00:03.495: INFO: Deleting pod "simpletest.rc-6c274" in namespace "gc-230"
  May 14 05:00:03.546: INFO: Deleting pod "simpletest.rc-6st76" in namespace "gc-230"
  May 14 05:00:03.572: INFO: Deleting pod "simpletest.rc-6z56h" in namespace "gc-230"
  E0514 05:00:03.611724      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:00:03.655: INFO: Deleting pod "simpletest.rc-7k2m7" in namespace "gc-230"
  May 14 05:00:03.722: INFO: Deleting pod "simpletest.rc-7n7sr" in namespace "gc-230"
  May 14 05:00:03.849: INFO: Deleting pod "simpletest.rc-7p9kr" in namespace "gc-230"
  May 14 05:00:03.910: INFO: Deleting pod "simpletest.rc-7qbdw" in namespace "gc-230"
  May 14 05:00:04.009: INFO: Deleting pod "simpletest.rc-84f9w" in namespace "gc-230"
  May 14 05:00:04.082: INFO: Deleting pod "simpletest.rc-8ddlt" in namespace "gc-230"
  May 14 05:00:04.197: INFO: Deleting pod "simpletest.rc-8gbgw" in namespace "gc-230"
  May 14 05:00:04.222: INFO: Deleting pod "simpletest.rc-8x6c8" in namespace "gc-230"
  May 14 05:00:04.313: INFO: Deleting pod "simpletest.rc-985w5" in namespace "gc-230"
  May 14 05:00:04.373: INFO: Deleting pod "simpletest.rc-9f664" in namespace "gc-230"
  May 14 05:00:04.445: INFO: Deleting pod "simpletest.rc-9hqbg" in namespace "gc-230"
  May 14 05:00:04.502: INFO: Deleting pod "simpletest.rc-9p5xp" in namespace "gc-230"
  May 14 05:00:04.568: INFO: Deleting pod "simpletest.rc-9vj87" in namespace "gc-230"
  E0514 05:00:04.611853      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:00:04.612: INFO: Deleting pod "simpletest.rc-bdmgw" in namespace "gc-230"
  May 14 05:00:04.704: INFO: Deleting pod "simpletest.rc-bg99w" in namespace "gc-230"
  May 14 05:00:04.775: INFO: Deleting pod "simpletest.rc-cbm2j" in namespace "gc-230"
  May 14 05:00:04.888: INFO: Deleting pod "simpletest.rc-cdktk" in namespace "gc-230"
  May 14 05:00:04.950: INFO: Deleting pod "simpletest.rc-cns4n" in namespace "gc-230"
  May 14 05:00:05.038: INFO: Deleting pod "simpletest.rc-cwgg4" in namespace "gc-230"
  May 14 05:00:05.079: INFO: Deleting pod "simpletest.rc-d62fc" in namespace "gc-230"
  May 14 05:00:05.135: INFO: Deleting pod "simpletest.rc-d8qpd" in namespace "gc-230"
  May 14 05:00:05.231: INFO: Deleting pod "simpletest.rc-dcqm5" in namespace "gc-230"
  May 14 05:00:05.301: INFO: Deleting pod "simpletest.rc-dhgdp" in namespace "gc-230"
  May 14 05:00:05.364: INFO: Deleting pod "simpletest.rc-f28cq" in namespace "gc-230"
  May 14 05:00:05.428: INFO: Deleting pod "simpletest.rc-f7gct" in namespace "gc-230"
  May 14 05:00:05.492: INFO: Deleting pod "simpletest.rc-ff8z2" in namespace "gc-230"
  May 14 05:00:05.554: INFO: Deleting pod "simpletest.rc-fn6tg" in namespace "gc-230"
  E0514 05:00:05.612273      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:00:05.651: INFO: Deleting pod "simpletest.rc-g5hpg" in namespace "gc-230"
  May 14 05:00:05.740: INFO: Deleting pod "simpletest.rc-gh6r8" in namespace "gc-230"
  May 14 05:00:05.768: INFO: Deleting pod "simpletest.rc-gktwh" in namespace "gc-230"
  May 14 05:00:05.957: INFO: Deleting pod "simpletest.rc-gtlfh" in namespace "gc-230"
  May 14 05:00:06.028: INFO: Deleting pod "simpletest.rc-gz59h" in namespace "gc-230"
  May 14 05:00:06.065: INFO: Deleting pod "simpletest.rc-gzhn8" in namespace "gc-230"
  May 14 05:00:06.093: INFO: Deleting pod "simpletest.rc-hpmlz" in namespace "gc-230"
  May 14 05:00:06.149: INFO: Deleting pod "simpletest.rc-hqhsc" in namespace "gc-230"
  May 14 05:00:06.222: INFO: Deleting pod "simpletest.rc-jkgk9" in namespace "gc-230"
  May 14 05:00:06.324: INFO: Deleting pod "simpletest.rc-jsbhm" in namespace "gc-230"
  May 14 05:00:06.434: INFO: Deleting pod "simpletest.rc-jt7p2" in namespace "gc-230"
  May 14 05:00:06.509: INFO: Deleting pod "simpletest.rc-k5fdw" in namespace "gc-230"
  May 14 05:00:06.572: INFO: Deleting pod "simpletest.rc-kjm75" in namespace "gc-230"
  E0514 05:00:06.612852      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:00:06.658: INFO: Deleting pod "simpletest.rc-kqcxx" in namespace "gc-230"
  May 14 05:00:06.712: INFO: Deleting pod "simpletest.rc-ksmbl" in namespace "gc-230"
  May 14 05:00:06.757: INFO: Deleting pod "simpletest.rc-ktfrc" in namespace "gc-230"
  May 14 05:00:06.811: INFO: Deleting pod "simpletest.rc-kx6dv" in namespace "gc-230"
  May 14 05:00:06.863: INFO: Deleting pod "simpletest.rc-l6l7l" in namespace "gc-230"
  May 14 05:00:06.896: INFO: Deleting pod "simpletest.rc-lgzn4" in namespace "gc-230"
  May 14 05:00:07.004: INFO: Deleting pod "simpletest.rc-lj2v5" in namespace "gc-230"
  May 14 05:00:07.027: INFO: Deleting pod "simpletest.rc-ljt6t" in namespace "gc-230"
  May 14 05:00:07.235: INFO: Deleting pod "simpletest.rc-lnwm4" in namespace "gc-230"
  May 14 05:00:07.409: INFO: Deleting pod "simpletest.rc-mhrcw" in namespace "gc-230"
  May 14 05:00:07.470: INFO: Deleting pod "simpletest.rc-n4j4q" in namespace "gc-230"
  May 14 05:00:07.549: INFO: Deleting pod "simpletest.rc-nrxq7" in namespace "gc-230"
  May 14 05:00:07.585: INFO: Deleting pod "simpletest.rc-p2js7" in namespace "gc-230"
  E0514 05:00:07.613156      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:00:07.663: INFO: Deleting pod "simpletest.rc-ph8l4" in namespace "gc-230"
  May 14 05:00:07.721: INFO: Deleting pod "simpletest.rc-pmzrn" in namespace "gc-230"
  May 14 05:00:07.802: INFO: Deleting pod "simpletest.rc-pn6qb" in namespace "gc-230"
  May 14 05:00:07.899: INFO: Deleting pod "simpletest.rc-qclj2" in namespace "gc-230"
  May 14 05:00:07.957: INFO: Deleting pod "simpletest.rc-qkvsf" in namespace "gc-230"
  May 14 05:00:08.045: INFO: Deleting pod "simpletest.rc-qxzn8" in namespace "gc-230"
  May 14 05:00:08.099: INFO: Deleting pod "simpletest.rc-r4t7m" in namespace "gc-230"
  May 14 05:00:08.120: INFO: Deleting pod "simpletest.rc-r778d" in namespace "gc-230"
  May 14 05:00:08.159: INFO: Deleting pod "simpletest.rc-rqkr9" in namespace "gc-230"
  May 14 05:00:08.249: INFO: Deleting pod "simpletest.rc-rr8lq" in namespace "gc-230"
  May 14 05:00:08.325: INFO: Deleting pod "simpletest.rc-rzksp" in namespace "gc-230"
  May 14 05:00:08.409: INFO: Deleting pod "simpletest.rc-s8h26" in namespace "gc-230"
  May 14 05:00:08.444: INFO: Deleting pod "simpletest.rc-s95br" in namespace "gc-230"
  May 14 05:00:08.557: INFO: Deleting pod "simpletest.rc-sbjcm" in namespace "gc-230"
  E0514 05:00:08.614137      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:00:08.629: INFO: Deleting pod "simpletest.rc-sfhrl" in namespace "gc-230"
  May 14 05:00:08.707: INFO: Deleting pod "simpletest.rc-ss9zc" in namespace "gc-230"
  May 14 05:00:08.758: INFO: Deleting pod "simpletest.rc-svqrd" in namespace "gc-230"
  May 14 05:00:08.803: INFO: Deleting pod "simpletest.rc-t6xpb" in namespace "gc-230"
  May 14 05:00:08.898: INFO: Deleting pod "simpletest.rc-tmvl6" in namespace "gc-230"
  May 14 05:00:08.973: INFO: Deleting pod "simpletest.rc-tvzs7" in namespace "gc-230"
  May 14 05:00:09.038: INFO: Deleting pod "simpletest.rc-v8dc9" in namespace "gc-230"
  May 14 05:00:09.127: INFO: Deleting pod "simpletest.rc-vbksn" in namespace "gc-230"
  May 14 05:00:09.186: INFO: Deleting pod "simpletest.rc-vjkj7" in namespace "gc-230"
  May 14 05:00:09.262: INFO: Deleting pod "simpletest.rc-vq8p5" in namespace "gc-230"
  May 14 05:00:09.319: INFO: Deleting pod "simpletest.rc-w7qsf" in namespace "gc-230"
  May 14 05:00:09.390: INFO: Deleting pod "simpletest.rc-w82c8" in namespace "gc-230"
  May 14 05:00:09.464: INFO: Deleting pod "simpletest.rc-wknw6" in namespace "gc-230"
  May 14 05:00:09.526: INFO: Deleting pod "simpletest.rc-wpcrz" in namespace "gc-230"
  E0514 05:00:09.614452      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:00:09.624: INFO: Deleting pod "simpletest.rc-x8b9l" in namespace "gc-230"
  May 14 05:00:09.664: INFO: Deleting pod "simpletest.rc-xqxw9" in namespace "gc-230"
  May 14 05:00:09.771: INFO: Deleting pod "simpletest.rc-xs7zz" in namespace "gc-230"
  May 14 05:00:09.815: INFO: Deleting pod "simpletest.rc-xv2r5" in namespace "gc-230"
  May 14 05:00:09.893: INFO: Deleting pod "simpletest.rc-zlqfp" in namespace "gc-230"
  May 14 05:00:09.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-230" for this suite. @ 05/14/24 05:00:09.982
• [48.520 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance]
test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 05/14/24 05:00:10.016
  May 14 05:00:10.016: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename job @ 05/14/24 05:00:10.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:00:10.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:00:10.097
  STEP: Creating a job @ 05/14/24 05:00:10.1
  STEP: Ensuring active pods == parallelism @ 05/14/24 05:00:10.147
  E0514 05:00:10.615345      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:11.615816      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 05/14/24 05:00:12.153
  STEP: deleting Job.batch foo in namespace job-1377, will wait for the garbage collector to delete the pods @ 05/14/24 05:00:12.153
  May 14 05:00:12.223: INFO: Deleting Job.batch foo took: 16.235563ms
  May 14 05:00:12.424: INFO: Terminating Job.batch foo pods took: 201.087191ms
  E0514 05:00:12.616004      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:13.616464      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:14.617274      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:15.618228      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:16.619170      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:17.620007      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:18.620495      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:19.620675      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:20.621621      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:21.622566      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:22.623149      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:23.623281      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:24.623943      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:25.624134      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:26.624262      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:27.624281      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:28.624397      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:29.625130      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:30.625915      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:31.626148      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:32.627165      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:33.627561      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:34.628302      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:35.628510      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:36.628847      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:37.628903      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:38.629051      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:39.629854      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:40.630825      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:41.631798      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:42.632883      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:43.633815      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 05/14/24 05:00:44.024
  May 14 05:00:44.029: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1377" for this suite. @ 05/14/24 05:00:44.038
• [34.034 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:167
  STEP: Creating a kubernetes client @ 05/14/24 05:00:44.05
  May 14 05:00:44.050: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename downward-api @ 05/14/24 05:00:44.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:00:44.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:00:44.099
  STEP: Creating a pod to test downward api env vars @ 05/14/24 05:00:44.102
  E0514 05:00:44.634607      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:45.635373      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:46.635613      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:47.635957      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 05:00:48.163
  May 14 05:00:48.167: INFO: Trying to get logs from node viola-paas-worker03 pod downward-api-dcab6f0a-4d14-481a-84b1-5a281e5067e2 container dapi-container: <nil>
  STEP: delete the pod @ 05/14/24 05:00:48.176
  May 14 05:00:48.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-793" for this suite. @ 05/14/24 05:00:48.213
• [4.176 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 05/14/24 05:00:48.229
  May 14 05:00:48.229: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename configmap @ 05/14/24 05:00:48.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:00:48.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:00:48.27
  STEP: Creating configMap with name cm-test-opt-del-90a6a37e-7d07-41e3-a0ac-748e292e1632 @ 05/14/24 05:00:48.287
  STEP: Creating configMap with name cm-test-opt-upd-f5bfd7dc-55fe-445f-be8c-9852abac09db @ 05/14/24 05:00:48.299
  STEP: Creating the pod @ 05/14/24 05:00:48.305
  E0514 05:00:48.636144      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:49.636508      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-90a6a37e-7d07-41e3-a0ac-748e292e1632 @ 05/14/24 05:00:50.371
  STEP: Updating configmap cm-test-opt-upd-f5bfd7dc-55fe-445f-be8c-9852abac09db @ 05/14/24 05:00:50.384
  STEP: Creating configMap with name cm-test-opt-create-91a373e3-4130-45e4-b67b-91d77da2cb79 @ 05/14/24 05:00:50.398
  STEP: waiting to observe update in volume @ 05/14/24 05:00:50.406
  E0514 05:00:50.636721      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:51.637030      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:52.637482      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:53.637678      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:54.638528      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:55.639656      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:56.640301      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:57.640430      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:58.641041      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:00:59.641415      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:00.642453      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:01.642815      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:02.643531      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:03.643836      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:04.643881      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:05.644656      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:06.645073      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:07.645374      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:08.645874      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:09.646328      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:10.646705      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:11.647080      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:12.647377      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:13.647605      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:14.648109      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:15.648958      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:16.648930      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:17.650534      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:18.651500      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:19.652022      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:20.652880      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:21.653367      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:22.653777      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:23.654842      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:24.655171      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:25.655976      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:26.656646      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:27.656972      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:28.657462      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:29.657765      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:30.658294      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:31.658620      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:32.658808      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:33.659115      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:34.659879      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:35.660112      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:36.660452      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:37.661287      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:38.661690      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:39.662465      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:40.663051      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:41.663598      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:42.664171      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:43.664697      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:44.665228      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:45.665162      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:46.665457      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:47.666269      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:48.666601      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:49.667144      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:50.667242      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:51.667390      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:52.667736      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:53.667797      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:54.668286      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:55.669230      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:56.669532      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:57.670178      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:58.670532      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:01:59.670760      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:00.670977      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:01.671099      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:02.671388      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:03.672135      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:04.672601      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:05.672830      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:06.673297      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:07.673580      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:08.674174      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:09.674492      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:10.674696      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:11.675545      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:12.676074      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:13.676710      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:14.676860      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:15.677032      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:16.677360      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:17.677478      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:18.677754      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:19.677937      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:20.678556      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:02:20.990: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8893" for this suite. @ 05/14/24 05:02:20.996
• [92.783 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster  [Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 05/14/24 05:02:21.013
  May 14 05:02:21.013: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename dns @ 05/14/24 05:02:21.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:02:21.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:02:21.052
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/14/24 05:02:21.054
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/14/24 05:02:21.054
  STEP: creating a pod to probe DNS @ 05/14/24 05:02:21.054
  STEP: submitting the pod to kubernetes @ 05/14/24 05:02:21.055
  E0514 05:02:21.678938      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:22.679279      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/14/24 05:02:23.361
  STEP: looking for the results for each expected name from probers @ 05/14/24 05:02:23.363
  May 14 05:02:23.379: INFO: DNS probes using dns-602/dns-test-be3365c9-7695-4fce-ac90-c73e4a7b40fa succeeded

  May 14 05:02:23.379: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/14/24 05:02:23.385
  STEP: Destroying namespace "dns-602" for this suite. @ 05/14/24 05:02:23.426
• [2.422 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 05/14/24 05:02:23.435
  May 14 05:02:23.435: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename configmap @ 05/14/24 05:02:23.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:02:23.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:02:23.473
  STEP: Creating configMap with name configmap-test-upd-91008c67-df08-4c5e-9ac0-2b293250b99f @ 05/14/24 05:02:23.491
  STEP: Creating the pod @ 05/14/24 05:02:23.502
  E0514 05:02:23.680342      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:24.680715      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 05/14/24 05:02:25.525
  STEP: Waiting for pod with binary data @ 05/14/24 05:02:25.533
  May 14 05:02:25.538: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9789" for this suite. @ 05/14/24 05:02:25.543
• [2.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 05/14/24 05:02:25.554
  May 14 05:02:25.555: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename events @ 05/14/24 05:02:25.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:02:25.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:02:25.605
  STEP: creating a test event @ 05/14/24 05:02:25.612
  STEP: listing events in all namespaces @ 05/14/24 05:02:25.631
  STEP: listing events in test namespace @ 05/14/24 05:02:25.658
  STEP: listing events with field selection filtering on source @ 05/14/24 05:02:25.667
  STEP: listing events with field selection filtering on reportingController @ 05/14/24 05:02:25.67
  STEP: getting the test event @ 05/14/24 05:02:25.673
  STEP: patching the test event @ 05/14/24 05:02:25.676
  E0514 05:02:25.681286      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting the test event @ 05/14/24 05:02:25.69
  STEP: updating the test event @ 05/14/24 05:02:25.709
  STEP: getting the test event @ 05/14/24 05:02:25.721
  STEP: deleting the test event @ 05/14/24 05:02:25.731
  STEP: listing events in all namespaces @ 05/14/24 05:02:25.742
  STEP: listing events in test namespace @ 05/14/24 05:02:25.755
  May 14 05:02:25.758: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2853" for this suite. @ 05/14/24 05:02:25.764
• [0.220 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 05/14/24 05:02:25.776
  May 14 05:02:25.776: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename projected @ 05/14/24 05:02:25.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:02:25.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:02:25.829
  STEP: Creating a pod to test downward API volume plugin @ 05/14/24 05:02:25.831
  E0514 05:02:26.681406      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:27.681842      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:28.682900      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:29.683313      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 05:02:29.9
  May 14 05:02:29.904: INFO: Trying to get logs from node viola-paas-worker03 pod downwardapi-volume-54e75ac7-4a85-4570-ba9d-95ce89dea2f4 container client-container: <nil>
  STEP: delete the pod @ 05/14/24 05:02:29.911
  May 14 05:02:30.019: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-206" for this suite. @ 05/14/24 05:02:30.032
• [4.275 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 05/14/24 05:02:30.051
  May 14 05:02:30.051: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename webhook @ 05/14/24 05:02:30.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:02:30.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:02:30.087
  STEP: Setting up server cert @ 05/14/24 05:02:30.144
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/14/24 05:02:30.347
  STEP: Deploying the webhook pod @ 05/14/24 05:02:30.387
  STEP: Wait for the deployment to be ready @ 05/14/24 05:02:30.434
  May 14 05:02:30.440: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0514 05:02:30.684229      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:31.684652      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/14/24 05:02:32.453
  STEP: Verifying the service has paired with the endpoint @ 05/14/24 05:02:32.481
  E0514 05:02:32.684777      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:02:33.481: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 05/14/24 05:02:33.49
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 05/14/24 05:02:33.533
  STEP: Creating a configMap that should not be mutated @ 05/14/24 05:02:33.548
  E0514 05:02:33.685352      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 05/14/24 05:02:33.695
  STEP: Creating a configMap that should be mutated @ 05/14/24 05:02:33.714
  May 14 05:02:33.750: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6881" for this suite. @ 05/14/24 05:02:33.91
  STEP: Destroying namespace "webhook-markers-4628" for this suite. @ 05/14/24 05:02:33.939
• [3.907 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:808
  STEP: Creating a kubernetes client @ 05/14/24 05:02:33.96
  May 14 05:02:33.960: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename svcaccounts @ 05/14/24 05:02:33.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:02:33.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:02:34.001
  STEP: Creating ServiceAccount "e2e-sa-54bxn"  @ 05/14/24 05:02:34.015
  May 14 05:02:34.038: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-54bxn"  @ 05/14/24 05:02:34.038
  May 14 05:02:34.063: INFO: AutomountServiceAccountToken: true
  May 14 05:02:34.063: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1292" for this suite. @ 05/14/24 05:02:34.069
• [0.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 05/14/24 05:02:34.081
  May 14 05:02:34.081: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename crd-watch @ 05/14/24 05:02:34.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:02:34.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:02:34.114
  May 14 05:02:34.122: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  E0514 05:02:34.686079      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:35.687151      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:36.688412      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:37.688345      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:38.689242      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:39.689792      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:40.690158      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:41.690437      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 05/14/24 05:02:41.69
  May 14 05:02:41.696: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-14T05:02:41Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-14T05:02:41Z]] name:name1 resourceVersion:26346361 uid:5eb19bb6-72fe-49b6-8452-e8df8fe91c70] num:map[num1:9223372036854775807 num2:1000000]]}
  E0514 05:02:42.691453      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:43.692034      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:44.692415      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:45.693300      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:46.693772      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:47.694120      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:48.694736      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:49.695488      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:50.695902      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:51.696124      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 05/14/24 05:02:51.697
  May 14 05:02:51.710: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-14T05:02:51Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-14T05:02:51Z]] name:name2 resourceVersion:26346410 uid:47b86503-8326-46c1-84e5-415a34158a38] num:map[num1:9223372036854775807 num2:1000000]]}
  E0514 05:02:52.696287      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:53.696466      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:54.697062      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:55.697980      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:56.698165      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:57.698305      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:58.698569      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:02:59.698727      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:00.698829      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:01.699248      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 05/14/24 05:03:01.711
  May 14 05:03:01.725: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-14T05:02:41Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-14T05:03:01Z]] name:name1 resourceVersion:26346483 uid:5eb19bb6-72fe-49b6-8452-e8df8fe91c70] num:map[num1:9223372036854775807 num2:1000000]]}
  E0514 05:03:02.699350      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:03.699647      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:04.699962      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:05.700882      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:06.701270      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:07.701635      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:08.702237      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:09.702563      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:10.702895      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:11.703282      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 05/14/24 05:03:11.725
  May 14 05:03:11.745: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-14T05:02:51Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-14T05:03:11Z]] name:name2 resourceVersion:26346548 uid:47b86503-8326-46c1-84e5-415a34158a38] num:map[num1:9223372036854775807 num2:1000000]]}
  E0514 05:03:12.703270      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:13.703626      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:14.704088      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:15.705049      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:16.705370      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:17.705596      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:18.705809      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:19.706145      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:20.706718      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:21.707052      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 05/14/24 05:03:21.745
  May 14 05:03:21.757: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-14T05:02:41Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-14T05:03:01Z]] name:name1 resourceVersion:26346599 uid:5eb19bb6-72fe-49b6-8452-e8df8fe91c70] num:map[num1:9223372036854775807 num2:1000000]]}
  E0514 05:03:22.707294      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:23.707623      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:24.707934      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:25.708785      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:26.708917      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:27.709122      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:28.709423      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:29.709740      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:30.709882      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:31.710301      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 05/14/24 05:03:31.757
  May 14 05:03:31.769: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-14T05:02:51Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-14T05:03:11Z]] name:name2 resourceVersion:26346652 uid:47b86503-8326-46c1-84e5-415a34158a38] num:map[num1:9223372036854775807 num2:1000000]]}
  E0514 05:03:32.710391      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:33.710460      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:34.710898      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:35.711608      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:36.711896      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:37.711965      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:38.712157      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:39.712455      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:40.712897      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:41.713104      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:03:42.298: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-7598" for this suite. @ 05/14/24 05:03:42.305
• [68.259 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:104
  STEP: Creating a kubernetes client @ 05/14/24 05:03:42.346
  May 14 05:03:42.346: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename runtimeclass @ 05/14/24 05:03:42.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:03:42.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:03:42.405
  E0514 05:03:42.713237      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:43.713591      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:03:44.434: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4072" for this suite. @ 05/14/24 05:03:44.453
• [2.122 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 05/14/24 05:03:44.464
  May 14 05:03:44.464: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename subpath @ 05/14/24 05:03:44.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:03:44.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:03:44.497
  STEP: Setting up data @ 05/14/24 05:03:44.499
  STEP: Creating pod pod-subpath-test-secret-6txc @ 05/14/24 05:03:44.528
  STEP: Creating a pod to test atomic-volume-subpath @ 05/14/24 05:03:44.529
  E0514 05:03:44.713942      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:45.714606      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:46.714680      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:47.714824      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:48.715308      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:49.717359      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:50.718003      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:51.718357      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:52.719493      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:53.719818      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:54.719841      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:55.720524      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:56.721129      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:57.721462      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:58.722273      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:03:59.722778      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:00.723654      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:01.723987      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:02.724616      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:03.725082      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:04.725913      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:05.726448      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:06.727383      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:07.727831      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 05:04:08.627
  May 14 05:04:08.631: INFO: Trying to get logs from node viola-paas-worker03 pod pod-subpath-test-secret-6txc container test-container-subpath-secret-6txc: <nil>
  STEP: delete the pod @ 05/14/24 05:04:08.637
  STEP: Deleting pod pod-subpath-test-secret-6txc @ 05/14/24 05:04:08.669
  May 14 05:04:08.669: INFO: Deleting pod "pod-subpath-test-secret-6txc" in namespace "subpath-5163"
  May 14 05:04:08.671: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5163" for this suite. @ 05/14/24 05:04:08.677
• [24.234 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]
test/e2e/kubectl/kubectl.go:1707
  STEP: Creating a kubernetes client @ 05/14/24 05:04:08.699
  May 14 05:04:08.699: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename kubectl @ 05/14/24 05:04:08.701
  E0514 05:04:08.728077      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:04:08.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:04:08.734
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/14/24 05:04:08.741
  May 14 05:04:08.741: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-2292 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  May 14 05:04:08.833: INFO: stderr: ""
  May 14 05:04:08.833: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/14/24 05:04:08.833
  May 14 05:04:08.868: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-2292 delete pods e2e-test-httpd-pod'
  E0514 05:04:09.729126      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:04:10.503: INFO: stderr: ""
  May 14 05:04:10.503: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  May 14 05:04:10.504: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2292" for this suite. @ 05/14/24 05:04:10.51
• [1.819 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 05/14/24 05:04:10.518
  May 14 05:04:10.518: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename dns @ 05/14/24 05:04:10.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:04:10.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:04:10.558
  STEP: Creating a test headless service @ 05/14/24 05:04:10.561
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4752.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-4752.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4752.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4752.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4752.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-4752.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4752.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-4752.svc.cluster.local;sleep 1; done
   @ 05/14/24 05:04:10.575
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4752.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-4752.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4752.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-4752.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4752.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-4752.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4752.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-4752.svc.cluster.local;sleep 1; done
   @ 05/14/24 05:04:10.575
  STEP: creating a pod to probe DNS @ 05/14/24 05:04:10.575
  STEP: submitting the pod to kubernetes @ 05/14/24 05:04:10.575
  E0514 05:04:10.729240      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:11.730233      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/14/24 05:04:12.616
  STEP: looking for the results for each expected name from probers @ 05/14/24 05:04:12.618
  May 14 05:04:12.624: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4752.svc.cluster.local from pod dns-4752/dns-test-6b623a98-afd4-4c61-8d21-cc812f855ec7: the server could not find the requested resource (get pods dns-test-6b623a98-afd4-4c61-8d21-cc812f855ec7)
  May 14 05:04:12.626: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4752.svc.cluster.local from pod dns-4752/dns-test-6b623a98-afd4-4c61-8d21-cc812f855ec7: the server could not find the requested resource (get pods dns-test-6b623a98-afd4-4c61-8d21-cc812f855ec7)
  May 14 05:04:12.630: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4752.svc.cluster.local from pod dns-4752/dns-test-6b623a98-afd4-4c61-8d21-cc812f855ec7: the server could not find the requested resource (get pods dns-test-6b623a98-afd4-4c61-8d21-cc812f855ec7)
  May 14 05:04:12.633: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4752.svc.cluster.local from pod dns-4752/dns-test-6b623a98-afd4-4c61-8d21-cc812f855ec7: the server could not find the requested resource (get pods dns-test-6b623a98-afd4-4c61-8d21-cc812f855ec7)
  May 14 05:04:12.635: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4752.svc.cluster.local from pod dns-4752/dns-test-6b623a98-afd4-4c61-8d21-cc812f855ec7: the server could not find the requested resource (get pods dns-test-6b623a98-afd4-4c61-8d21-cc812f855ec7)
  May 14 05:04:12.638: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4752.svc.cluster.local from pod dns-4752/dns-test-6b623a98-afd4-4c61-8d21-cc812f855ec7: the server could not find the requested resource (get pods dns-test-6b623a98-afd4-4c61-8d21-cc812f855ec7)
  May 14 05:04:12.641: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4752.svc.cluster.local from pod dns-4752/dns-test-6b623a98-afd4-4c61-8d21-cc812f855ec7: the server could not find the requested resource (get pods dns-test-6b623a98-afd4-4c61-8d21-cc812f855ec7)
  May 14 05:04:12.644: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4752.svc.cluster.local from pod dns-4752/dns-test-6b623a98-afd4-4c61-8d21-cc812f855ec7: the server could not find the requested resource (get pods dns-test-6b623a98-afd4-4c61-8d21-cc812f855ec7)
  May 14 05:04:12.644: INFO: Lookups using dns-4752/dns-test-6b623a98-afd4-4c61-8d21-cc812f855ec7 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4752.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4752.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4752.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4752.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4752.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4752.svc.cluster.local jessie_udp@dns-test-service-2.dns-4752.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4752.svc.cluster.local]

  May 14 05:04:12.650: INFO: Pod client logs for webserver: 
  May 14 05:04:12.654: INFO: Pod client logs for querier: 
  May 14 05:04:12.659: INFO: Pod client logs for jessie-querier: 
  E0514 05:04:12.731143      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:13.731461      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:14.731690      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:15.732570      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:16.732884      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:04:17.687: INFO: DNS probes using dns-4752/dns-test-6b623a98-afd4-4c61-8d21-cc812f855ec7 succeeded

  May 14 05:04:17.687: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/14/24 05:04:17.693
  STEP: deleting the test headless service @ 05/14/24 05:04:17.73
  E0514 05:04:17.732877      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "dns-4752" for this suite. @ 05/14/24 05:04:17.78
• [7.277 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:207
  STEP: Creating a kubernetes client @ 05/14/24 05:04:17.797
  May 14 05:04:17.797: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename emptydir @ 05/14/24 05:04:17.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:04:17.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:04:17.838
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/14/24 05:04:17.84
  E0514 05:04:18.733418      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:19.733749      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:20.734210      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:21.734573      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 05:04:21.871
  May 14 05:04:21.890: INFO: Trying to get logs from node viola-paas-worker03 pod pod-06fc1270-e77e-4d83-a1f8-fdecdee148ec container test-container: <nil>
  STEP: delete the pod @ 05/14/24 05:04:21.904
  May 14 05:04:21.941: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5533" for this suite. @ 05/14/24 05:04:21.947
• [4.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]
test/e2e/kubectl/kubectl.go:1641
  STEP: Creating a kubernetes client @ 05/14/24 05:04:21.954
  May 14 05:04:21.954: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename kubectl @ 05/14/24 05:04:21.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:04:21.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:04:21.989
  STEP: creating Agnhost RC @ 05/14/24 05:04:21.992
  May 14 05:04:21.992: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-2526 create -f -'
  E0514 05:04:22.734699      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:04:22.905: INFO: stderr: ""
  May 14 05:04:22.905: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/14/24 05:04:22.905
  E0514 05:04:23.735025      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:04:23.934: INFO: Selector matched 1 pods for map[app:agnhost]
  May 14 05:04:23.934: INFO: Found 0 / 1
  E0514 05:04:24.736142      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:04:24.909: INFO: Selector matched 1 pods for map[app:agnhost]
  May 14 05:04:24.909: INFO: Found 1 / 1
  May 14 05:04:24.909: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 05/14/24 05:04:24.909
  May 14 05:04:24.913: INFO: Selector matched 1 pods for map[app:agnhost]
  May 14 05:04:24.913: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  May 14 05:04:24.913: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-2526 patch pod agnhost-primary-qp7l6 -p {"metadata":{"annotations":{"x":"y"}}}'
  May 14 05:04:24.997: INFO: stderr: ""
  May 14 05:04:24.997: INFO: stdout: "pod/agnhost-primary-qp7l6 patched\n"
  STEP: checking annotations @ 05/14/24 05:04:24.997
  May 14 05:04:25.001: INFO: Selector matched 1 pods for map[app:agnhost]
  May 14 05:04:25.001: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  May 14 05:04:25.001: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2526" for this suite. @ 05/14/24 05:04:25.005
• [3.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 05/14/24 05:04:25.027
  May 14 05:04:25.027: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename watch @ 05/14/24 05:04:25.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:04:25.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:04:25.06
  STEP: creating a watch on configmaps with a certain label @ 05/14/24 05:04:25.063
  STEP: creating a new configmap @ 05/14/24 05:04:25.064
  STEP: modifying the configmap once @ 05/14/24 05:04:25.072
  STEP: changing the label value of the configmap @ 05/14/24 05:04:25.08
  STEP: Expecting to observe a delete notification for the watched object @ 05/14/24 05:04:25.093
  May 14 05:04:25.100: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8954  d1774c6a-e62e-4aa0-b80a-c7040658b184 26347137 0 2024-05-14 05:04:25 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-14 05:04:25 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May 14 05:04:25.101: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8954  d1774c6a-e62e-4aa0-b80a-c7040658b184 26347138 0 2024-05-14 05:04:25 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-14 05:04:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 14 05:04:25.101: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8954  d1774c6a-e62e-4aa0-b80a-c7040658b184 26347139 0 2024-05-14 05:04:25 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-14 05:04:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 05/14/24 05:04:25.101
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 05/14/24 05:04:25.113
  E0514 05:04:25.736458      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:26.736634      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:27.736920      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:28.737202      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:29.737971      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:30.738635      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:31.739196      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:32.739566      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:33.739931      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:34.740000      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 05/14/24 05:04:35.113
  STEP: modifying the configmap a third time @ 05/14/24 05:04:35.128
  STEP: deleting the configmap @ 05/14/24 05:04:35.152
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 05/14/24 05:04:35.166
  May 14 05:04:35.166: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8954  d1774c6a-e62e-4aa0-b80a-c7040658b184 26347218 0 2024-05-14 05:04:25 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-14 05:04:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 14 05:04:35.166: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8954  d1774c6a-e62e-4aa0-b80a-c7040658b184 26347219 0 2024-05-14 05:04:25 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-14 05:04:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 14 05:04:35.166: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8954  d1774c6a-e62e-4aa0-b80a-c7040658b184 26347220 0 2024-05-14 05:04:25 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-14 05:04:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 14 05:04:35.166: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8954" for this suite. @ 05/14/24 05:04:35.173
• [10.157 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance]
test/e2e/common/node/secrets.go:140
  STEP: Creating a kubernetes client @ 05/14/24 05:04:35.185
  May 14 05:04:35.185: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename secrets @ 05/14/24 05:04:35.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:04:35.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:04:35.238
  STEP: Creating projection with secret that has name secret-emptykey-test-aac0fa80-0adf-4000-bb86-e630567a705b @ 05/14/24 05:04:35.24
  May 14 05:04:35.243: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4207" for this suite. @ 05/14/24 05:04:35.248
• [0.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:156
  STEP: Creating a kubernetes client @ 05/14/24 05:04:35.271
  May 14 05:04:35.271: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename runtimeclass @ 05/14/24 05:04:35.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:04:35.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:04:35.305
  STEP: Deleting RuntimeClass runtimeclass-8858-delete-me @ 05/14/24 05:04:35.321
  STEP: Waiting for the RuntimeClass to disappear @ 05/14/24 05:04:35.34
  May 14 05:04:35.350: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8858" for this suite. @ 05/14/24 05:04:35.355
• [0.092 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 05/14/24 05:04:35.364
  May 14 05:04:35.364: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename projected @ 05/14/24 05:04:35.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:04:35.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:04:35.402
  STEP: Creating a pod to test downward API volume plugin @ 05/14/24 05:04:35.404
  E0514 05:04:35.740947      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:36.741028      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:37.741532      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:38.741877      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 05:04:39.441
  May 14 05:04:39.446: INFO: Trying to get logs from node viola-paas-worker03 pod downwardapi-volume-be4552dc-2ca4-46ba-9f61-f660d464888a container client-container: <nil>
  STEP: delete the pod @ 05/14/24 05:04:39.454
  May 14 05:04:39.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9695" for this suite. @ 05/14/24 05:04:39.498
• [4.151 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 05/14/24 05:04:39.516
  May 14 05:04:39.516: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename webhook @ 05/14/24 05:04:39.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:04:39.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:04:39.593
  STEP: Setting up server cert @ 05/14/24 05:04:39.636
  E0514 05:04:39.742720      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/14/24 05:04:40.065
  STEP: Deploying the webhook pod @ 05/14/24 05:04:40.078
  STEP: Wait for the deployment to be ready @ 05/14/24 05:04:40.111
  May 14 05:04:40.127: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0514 05:04:40.743564      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:41.744367      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:04:42.144: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 14, 5, 4, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 5, 4, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 14, 5, 4, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 5, 4, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0514 05:04:42.744613      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:43.745162      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/14/24 05:04:44.15
  STEP: Verifying the service has paired with the endpoint @ 05/14/24 05:04:44.174
  E0514 05:04:44.745350      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:04:45.175: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  May 14 05:04:45.183: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  E0514 05:04:45.746197      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:46.746573      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:47.746969      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:48.748110      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:49.749003      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6334-crds.webhook.example.com via the AdmissionRegistration API @ 05/14/24 05:04:50.707
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/14/24 05:04:50.735
  E0514 05:04:50.749382      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:51.749843      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:52.750186      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:04:52.787: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2674" for this suite. @ 05/14/24 05:04:53.477
  STEP: Destroying namespace "webhook-markers-6885" for this suite. @ 05/14/24 05:04:53.494
• [14.020 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 05/14/24 05:04:53.537
  May 14 05:04:53.537: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename projected @ 05/14/24 05:04:53.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:04:53.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:04:53.578
  STEP: Creating a pod to test downward API volume plugin @ 05/14/24 05:04:53.59
  E0514 05:04:53.750696      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:54.751136      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:55.751273      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:56.751952      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 05:04:57.635
  May 14 05:04:57.638: INFO: Trying to get logs from node viola-paas-worker03 pod downwardapi-volume-30b59ca9-9bf6-41d5-a942-d3f8f3a940d4 container client-container: <nil>
  STEP: delete the pod @ 05/14/24 05:04:57.645
  May 14 05:04:57.667: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8188" for this suite. @ 05/14/24 05:04:57.673
• [4.171 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:77
  STEP: Creating a kubernetes client @ 05/14/24 05:04:57.708
  May 14 05:04:57.708: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename sysctl @ 05/14/24 05:04:57.71
  E0514 05:04:57.752494      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:04:57.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:04:57.766
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 05/14/24 05:04:57.769
  STEP: Watching for error events or started pod @ 05/14/24 05:04:57.788
  E0514 05:04:58.753315      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:04:59.753921      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 05/14/24 05:04:59.794
  E0514 05:05:00.754011      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:01.754518      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 05/14/24 05:05:01.806
  STEP: Getting logs from the pod @ 05/14/24 05:05:01.806
  STEP: Checking that the sysctl is actually updated @ 05/14/24 05:05:01.813
  May 14 05:05:01.813: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-184" for this suite. @ 05/14/24 05:05:01.819
• [4.137 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:647
  STEP: Creating a kubernetes client @ 05/14/24 05:05:01.846
  May 14 05:05:01.846: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename svcaccounts @ 05/14/24 05:05:01.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:05:01.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:05:01.908
  STEP: creating a ServiceAccount @ 05/14/24 05:05:01.91
  STEP: watching for the ServiceAccount to be added @ 05/14/24 05:05:01.92
  STEP: patching the ServiceAccount @ 05/14/24 05:05:01.923
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 05/14/24 05:05:01.94
  STEP: deleting the ServiceAccount @ 05/14/24 05:05:01.947
  May 14 05:05:01.971: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9307" for this suite. @ 05/14/24 05:05:01.978
• [0.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]
test/e2e/kubectl/kubectl.go:1027
  STEP: Creating a kubernetes client @ 05/14/24 05:05:02.009
  May 14 05:05:02.009: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename kubectl @ 05/14/24 05:05:02.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:05:02.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:05:02.053
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/14/24 05:05:02.056
  May 14 05:05:02.056: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-6712 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  May 14 05:05:02.197: INFO: stderr: ""
  May 14 05:05:02.197: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 05/14/24 05:05:02.197
  May 14 05:05:02.197: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-6712 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
  May 14 05:05:02.267: INFO: stderr: ""
  May 14 05:05:02.267: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/14/24 05:05:02.267
  May 14 05:05:02.271: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=kubectl-6712 delete pods e2e-test-httpd-pod'
  E0514 05:05:02.754896      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:05:03.674: INFO: stderr: ""
  May 14 05:05:03.674: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  May 14 05:05:03.675: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6712" for this suite. @ 05/14/24 05:05:03.68
• [1.683 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:217
  STEP: Creating a kubernetes client @ 05/14/24 05:05:03.694
  May 14 05:05:03.694: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename emptydir @ 05/14/24 05:05:03.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:05:03.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:05:03.739
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/14/24 05:05:03.741
  E0514 05:05:03.755776      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:04.756532      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:05.757323      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:06.758195      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:07.758535      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 05:05:07.769
  May 14 05:05:07.772: INFO: Trying to get logs from node viola-paas-worker03 pod pod-4b52ac55-47a8-490c-8071-50c4a0e375fa container test-container: <nil>
  STEP: delete the pod @ 05/14/24 05:05:07.823
  May 14 05:05:07.945: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2724" for this suite. @ 05/14/24 05:05:07.951
• [4.292 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:177
  STEP: Creating a kubernetes client @ 05/14/24 05:05:07.987
  May 14 05:05:07.987: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename emptydir @ 05/14/24 05:05:07.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:05:08.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:05:08.048
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/14/24 05:05:08.051
  E0514 05:05:08.758849      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:09.759176      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:10.759502      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:11.759832      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 05:05:12.247
  May 14 05:05:12.250: INFO: Trying to get logs from node viola-paas-worker03 pod pod-d2fe6a47-e8e6-439c-9950-6242954449f5 container test-container: <nil>
  STEP: delete the pod @ 05/14/24 05:05:12.256
  May 14 05:05:12.298: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5436" for this suite. @ 05/14/24 05:05:12.305
• [4.330 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 05/14/24 05:05:12.318
  May 14 05:05:12.318: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename proxy @ 05/14/24 05:05:12.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:05:12.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:05:12.381
  STEP: starting an echo server on multiple ports @ 05/14/24 05:05:12.415
  STEP: creating replication controller proxy-service-jmqh6 in namespace proxy-5249 @ 05/14/24 05:05:12.415
  I0514 05:05:12.442775      23 runners.go:197] Created replication controller with name: proxy-service-jmqh6, namespace: proxy-5249, replica count: 1
  E0514 05:05:12.760159      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0514 05:05:13.493903      23 runners.go:197] proxy-service-jmqh6 Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0514 05:05:13.761282      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0514 05:05:14.494275      23 runners.go:197] proxy-service-jmqh6 Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0514 05:05:14.761572      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0514 05:05:15.495280      23 runners.go:197] proxy-service-jmqh6 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 14 05:05:15.500: INFO: setup took 3.116408122s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 05/14/24 05:05:15.5
  May 14 05:05:15.506: INFO: (0) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 5.24678ms)
  May 14 05:05:15.506: INFO: (0) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 6.084912ms)
  May 14 05:05:15.509: INFO: (0) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname1/proxy/: foo (200; 8.553627ms)
  May 14 05:05:15.510: INFO: (0) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 9.7501ms)
  May 14 05:05:15.511: INFO: (0) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/rewriteme">test</a> (200; 9.900352ms)
  May 14 05:05:15.514: INFO: (0) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname1/proxy/: foo (200; 13.469436ms)
  May 14 05:05:15.514: INFO: (0) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname2/proxy/: bar (200; 13.841068ms)
  May 14 05:05:15.514: INFO: (0) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 13.219564ms)
  May 14 05:05:15.514: INFO: (0) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">test<... (200; 13.495281ms)
  May 14 05:05:15.514: INFO: (0) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname2/proxy/: bar (200; 13.423867ms)
  May 14 05:05:15.514: INFO: (0) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">... (200; 13.519687ms)
  May 14 05:05:15.516: INFO: (0) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname2/proxy/: tls qux (200; 15.312216ms)
  May 14 05:05:15.516: INFO: (0) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/tlsrewritem... (200; 15.226142ms)
  May 14 05:05:15.516: INFO: (0) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:462/proxy/: tls qux (200; 15.660304ms)
  May 14 05:05:15.516: INFO: (0) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:460/proxy/: tls baz (200; 15.447246ms)
  May 14 05:05:15.516: INFO: (0) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname1/proxy/: tls baz (200; 15.542297ms)
  May 14 05:05:15.520: INFO: (1) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:462/proxy/: tls qux (200; 3.224204ms)
  May 14 05:05:15.524: INFO: (1) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 7.325544ms)
  May 14 05:05:15.524: INFO: (1) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">test<... (200; 7.489438ms)
  May 14 05:05:15.524: INFO: (1) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 7.431503ms)
  May 14 05:05:15.524: INFO: (1) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/tlsrewritem... (200; 7.353181ms)
  May 14 05:05:15.524: INFO: (1) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">... (200; 7.59873ms)
  May 14 05:05:15.525: INFO: (1) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 7.993813ms)
  May 14 05:05:15.525: INFO: (1) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/rewriteme">test</a> (200; 7.91069ms)
  May 14 05:05:15.526: INFO: (1) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 8.911445ms)
  May 14 05:05:15.526: INFO: (1) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:460/proxy/: tls baz (200; 8.862588ms)
  May 14 05:05:15.526: INFO: (1) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname2/proxy/: tls qux (200; 9.258581ms)
  May 14 05:05:15.527: INFO: (1) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname2/proxy/: bar (200; 10.173153ms)
  May 14 05:05:15.527: INFO: (1) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname2/proxy/: bar (200; 10.364115ms)
  May 14 05:05:15.527: INFO: (1) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname1/proxy/: foo (200; 10.328244ms)
  May 14 05:05:15.527: INFO: (1) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname1/proxy/: foo (200; 10.430433ms)
  May 14 05:05:15.527: INFO: (1) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname1/proxy/: tls baz (200; 10.422002ms)
  May 14 05:05:15.551: INFO: (2) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">test<... (200; 22.864472ms)
  May 14 05:05:15.551: INFO: (2) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 23.262141ms)
  May 14 05:05:15.551: INFO: (2) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">... (200; 23.256204ms)
  May 14 05:05:15.551: INFO: (2) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname1/proxy/: foo (200; 23.289774ms)
  May 14 05:05:15.556: INFO: (2) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 28.057311ms)
  May 14 05:05:15.556: INFO: (2) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 28.013176ms)
  May 14 05:05:15.556: INFO: (2) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:462/proxy/: tls qux (200; 28.254621ms)
  May 14 05:05:15.556: INFO: (2) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/tlsrewritem... (200; 28.132652ms)
  May 14 05:05:15.557: INFO: (2) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname1/proxy/: tls baz (200; 29.374059ms)
  May 14 05:05:15.561: INFO: (2) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 33.329332ms)
  May 14 05:05:15.561: INFO: (2) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:460/proxy/: tls baz (200; 33.593461ms)
  May 14 05:05:15.561: INFO: (2) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname2/proxy/: tls qux (200; 33.54396ms)
  May 14 05:05:15.562: INFO: (2) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname2/proxy/: bar (200; 34.171108ms)
  May 14 05:05:15.562: INFO: (2) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/rewriteme">test</a> (200; 34.431005ms)
  May 14 05:05:15.562: INFO: (2) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname1/proxy/: foo (200; 35.265747ms)
  May 14 05:05:15.562: INFO: (2) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname2/proxy/: bar (200; 35.022143ms)
  May 14 05:05:15.568: INFO: (3) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">... (200; 5.304181ms)
  May 14 05:05:15.568: INFO: (3) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 5.507715ms)
  May 14 05:05:15.568: INFO: (3) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/rewriteme">test</a> (200; 5.617058ms)
  May 14 05:05:15.569: INFO: (3) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 6.358365ms)
  May 14 05:05:15.570: INFO: (3) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">test<... (200; 7.317754ms)
  May 14 05:05:15.570: INFO: (3) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/tlsrewritem... (200; 7.289681ms)
  May 14 05:05:15.570: INFO: (3) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 7.374494ms)
  May 14 05:05:15.570: INFO: (3) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname1/proxy/: foo (200; 7.829097ms)
  May 14 05:05:15.571: INFO: (3) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname1/proxy/: foo (200; 8.117969ms)
  May 14 05:05:15.571: INFO: (3) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 8.319927ms)
  May 14 05:05:15.571: INFO: (3) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname2/proxy/: tls qux (200; 8.408849ms)
  May 14 05:05:15.571: INFO: (3) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname2/proxy/: bar (200; 8.391813ms)
  May 14 05:05:15.572: INFO: (3) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname1/proxy/: tls baz (200; 9.059052ms)
  May 14 05:05:15.572: INFO: (3) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname2/proxy/: bar (200; 9.243417ms)
  May 14 05:05:15.572: INFO: (3) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:460/proxy/: tls baz (200; 9.329942ms)
  May 14 05:05:15.573: INFO: (3) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:462/proxy/: tls qux (200; 10.28657ms)
  May 14 05:05:15.578: INFO: (4) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">... (200; 4.547552ms)
  May 14 05:05:15.579: INFO: (4) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:462/proxy/: tls qux (200; 5.649893ms)
  May 14 05:05:15.579: INFO: (4) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 5.67941ms)
  May 14 05:05:15.579: INFO: (4) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">test<... (200; 5.919046ms)
  May 14 05:05:15.580: INFO: (4) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/tlsrewritem... (200; 6.658713ms)
  May 14 05:05:15.581: INFO: (4) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 7.11908ms)
  May 14 05:05:15.581: INFO: (4) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname1/proxy/: foo (200; 7.356665ms)
  May 14 05:05:15.581: INFO: (4) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname2/proxy/: bar (200; 7.608788ms)
  May 14 05:05:15.581: INFO: (4) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname1/proxy/: tls baz (200; 7.696522ms)
  May 14 05:05:15.581: INFO: (4) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname2/proxy/: bar (200; 7.736725ms)
  May 14 05:05:15.581: INFO: (4) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:460/proxy/: tls baz (200; 7.759501ms)
  May 14 05:05:15.581: INFO: (4) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname1/proxy/: foo (200; 7.695415ms)
  May 14 05:05:15.581: INFO: (4) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname2/proxy/: tls qux (200; 7.667864ms)
  May 14 05:05:15.582: INFO: (4) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/rewriteme">test</a> (200; 8.089413ms)
  May 14 05:05:15.582: INFO: (4) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 8.796733ms)
  May 14 05:05:15.583: INFO: (4) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 9.38213ms)
  May 14 05:05:15.587: INFO: (5) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">test<... (200; 4.223266ms)
  May 14 05:05:15.587: INFO: (5) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">... (200; 4.345266ms)
  May 14 05:05:15.587: INFO: (5) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/tlsrewritem... (200; 4.236017ms)
  May 14 05:05:15.588: INFO: (5) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname2/proxy/: bar (200; 5.090832ms)
  May 14 05:05:15.589: INFO: (5) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:462/proxy/: tls qux (200; 5.754143ms)
  May 14 05:05:15.589: INFO: (5) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 5.802895ms)
  May 14 05:05:15.590: INFO: (5) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname1/proxy/: tls baz (200; 6.217878ms)
  May 14 05:05:15.590: INFO: (5) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname1/proxy/: foo (200; 6.800797ms)
  May 14 05:05:15.590: INFO: (5) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:460/proxy/: tls baz (200; 7.147381ms)
  May 14 05:05:15.591: INFO: (5) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/rewriteme">test</a> (200; 7.25841ms)
  May 14 05:05:15.591: INFO: (5) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname2/proxy/: bar (200; 7.632418ms)
  May 14 05:05:15.591: INFO: (5) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 7.607064ms)
  May 14 05:05:15.591: INFO: (5) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 7.641042ms)
  May 14 05:05:15.595: INFO: (5) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 10.992106ms)
  May 14 05:05:15.595: INFO: (5) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname2/proxy/: tls qux (200; 11.554307ms)
  May 14 05:05:15.595: INFO: (5) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname1/proxy/: foo (200; 11.791738ms)
  May 14 05:05:15.601: INFO: (6) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:462/proxy/: tls qux (200; 5.012764ms)
  May 14 05:05:15.601: INFO: (6) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 5.23375ms)
  May 14 05:05:15.601: INFO: (6) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">... (200; 5.175551ms)
  May 14 05:05:15.601: INFO: (6) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:460/proxy/: tls baz (200; 5.436582ms)
  May 14 05:05:15.601: INFO: (6) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">test<... (200; 5.50938ms)
  May 14 05:05:15.601: INFO: (6) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 5.774463ms)
  May 14 05:05:15.602: INFO: (6) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 6.575825ms)
  May 14 05:05:15.602: INFO: (6) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname2/proxy/: bar (200; 6.818815ms)
  May 14 05:05:15.603: INFO: (6) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/rewriteme">test</a> (200; 7.082289ms)
  May 14 05:05:15.603: INFO: (6) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 7.00495ms)
  May 14 05:05:15.603: INFO: (6) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname2/proxy/: tls qux (200; 7.05048ms)
  May 14 05:05:15.603: INFO: (6) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/tlsrewritem... (200; 7.073936ms)
  May 14 05:05:15.603: INFO: (6) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname1/proxy/: tls baz (200; 7.203612ms)
  May 14 05:05:15.603: INFO: (6) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname1/proxy/: foo (200; 7.458382ms)
  May 14 05:05:15.604: INFO: (6) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname1/proxy/: foo (200; 7.888626ms)
  May 14 05:05:15.604: INFO: (6) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname2/proxy/: bar (200; 7.9766ms)
  May 14 05:05:15.609: INFO: (7) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">test<... (200; 4.272663ms)
  May 14 05:05:15.609: INFO: (7) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/tlsrewritem... (200; 4.652486ms)
  May 14 05:05:15.610: INFO: (7) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 5.410263ms)
  May 14 05:05:15.610: INFO: (7) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:462/proxy/: tls qux (200; 5.762162ms)
  May 14 05:05:15.610: INFO: (7) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/rewriteme">test</a> (200; 6.653072ms)
  May 14 05:05:15.611: INFO: (7) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 5.598398ms)
  May 14 05:05:15.611: INFO: (7) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 5.71739ms)
  May 14 05:05:15.611: INFO: (7) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname2/proxy/: tls qux (200; 6.961747ms)
  May 14 05:05:15.611: INFO: (7) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname2/proxy/: bar (200; 6.779824ms)
  May 14 05:05:15.612: INFO: (7) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname1/proxy/: foo (200; 7.450964ms)
  May 14 05:05:15.613: INFO: (7) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname1/proxy/: tls baz (200; 7.947314ms)
  May 14 05:05:15.613: INFO: (7) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">... (200; 9.272199ms)
  May 14 05:05:15.631: INFO: (7) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:460/proxy/: tls baz (200; 26.603558ms)
  May 14 05:05:15.632: INFO: (7) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname2/proxy/: bar (200; 27.540124ms)
  May 14 05:05:15.632: INFO: (7) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 27.498836ms)
  May 14 05:05:15.633: INFO: (7) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname1/proxy/: foo (200; 27.899325ms)
  May 14 05:05:15.639: INFO: (8) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:462/proxy/: tls qux (200; 5.479661ms)
  May 14 05:05:15.639: INFO: (8) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 5.537494ms)
  May 14 05:05:15.639: INFO: (8) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">test<... (200; 5.859413ms)
  May 14 05:05:15.639: INFO: (8) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 5.791843ms)
  May 14 05:05:15.639: INFO: (8) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname1/proxy/: foo (200; 6.0864ms)
  May 14 05:05:15.639: INFO: (8) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">... (200; 6.053333ms)
  May 14 05:05:15.639: INFO: (8) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/tlsrewritem... (200; 6.036335ms)
  May 14 05:05:15.639: INFO: (8) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:460/proxy/: tls baz (200; 6.211803ms)
  May 14 05:05:15.640: INFO: (8) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/rewriteme">test</a> (200; 6.242571ms)
  May 14 05:05:15.640: INFO: (8) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname1/proxy/: foo (200; 7.400471ms)
  May 14 05:05:15.640: INFO: (8) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 7.096247ms)
  May 14 05:05:15.641: INFO: (8) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 7.180816ms)
  May 14 05:05:15.641: INFO: (8) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname1/proxy/: tls baz (200; 7.747945ms)
  May 14 05:05:15.642: INFO: (8) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname2/proxy/: bar (200; 8.487315ms)
  May 14 05:05:15.642: INFO: (8) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname2/proxy/: tls qux (200; 8.515937ms)
  May 14 05:05:15.642: INFO: (8) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname2/proxy/: bar (200; 8.444101ms)
  May 14 05:05:15.647: INFO: (9) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 4.726651ms)
  May 14 05:05:15.647: INFO: (9) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 4.821941ms)
  May 14 05:05:15.648: INFO: (9) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">test<... (200; 5.58646ms)
  May 14 05:05:15.648: INFO: (9) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 5.776946ms)
  May 14 05:05:15.649: INFO: (9) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 6.679491ms)
  May 14 05:05:15.649: INFO: (9) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/tlsrewritem... (200; 6.840222ms)
  May 14 05:05:15.649: INFO: (9) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:460/proxy/: tls baz (200; 7.028196ms)
  May 14 05:05:15.649: INFO: (9) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/rewriteme">test</a> (200; 7.220004ms)
  May 14 05:05:15.649: INFO: (9) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:462/proxy/: tls qux (200; 7.478308ms)
  May 14 05:05:15.649: INFO: (9) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname2/proxy/: tls qux (200; 7.463919ms)
  May 14 05:05:15.650: INFO: (9) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname2/proxy/: bar (200; 7.811546ms)
  May 14 05:05:15.650: INFO: (9) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname2/proxy/: bar (200; 7.852522ms)
  May 14 05:05:15.650: INFO: (9) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">... (200; 8.265401ms)
  May 14 05:05:15.650: INFO: (9) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname1/proxy/: tls baz (200; 8.255044ms)
  May 14 05:05:15.651: INFO: (9) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname1/proxy/: foo (200; 9.384011ms)
  May 14 05:05:15.652: INFO: (9) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname1/proxy/: foo (200; 9.999277ms)
  May 14 05:05:15.655: INFO: (10) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">test<... (200; 3.169293ms)
  May 14 05:05:15.657: INFO: (10) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:460/proxy/: tls baz (200; 4.32311ms)
  May 14 05:05:15.657: INFO: (10) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:462/proxy/: tls qux (200; 4.368149ms)
  May 14 05:05:15.658: INFO: (10) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/tlsrewritem... (200; 5.532732ms)
  May 14 05:05:15.659: INFO: (10) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 5.871307ms)
  May 14 05:05:15.659: INFO: (10) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname1/proxy/: tls baz (200; 6.51422ms)
  May 14 05:05:15.659: INFO: (10) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/rewriteme">test</a> (200; 6.390732ms)
  May 14 05:05:15.660: INFO: (10) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname1/proxy/: foo (200; 7.20665ms)
  May 14 05:05:15.660: INFO: (10) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname2/proxy/: bar (200; 7.671736ms)
  May 14 05:05:15.667: INFO: (10) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname2/proxy/: tls qux (200; 14.952656ms)
  May 14 05:05:15.667: INFO: (10) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 14.811958ms)
  May 14 05:05:15.668: INFO: (10) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 14.753764ms)
  May 14 05:05:15.668: INFO: (10) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">... (200; 15.271921ms)
  May 14 05:05:15.668: INFO: (10) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 14.841299ms)
  May 14 05:05:15.669: INFO: (10) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname2/proxy/: bar (200; 15.943878ms)
  May 14 05:05:15.669: INFO: (10) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname1/proxy/: foo (200; 16.004395ms)
  May 14 05:05:15.674: INFO: (11) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:460/proxy/: tls baz (200; 5.114908ms)
  May 14 05:05:15.675: INFO: (11) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 5.359529ms)
  May 14 05:05:15.675: INFO: (11) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">... (200; 6.266687ms)
  May 14 05:05:15.675: INFO: (11) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 6.052408ms)
  May 14 05:05:15.675: INFO: (11) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/rewriteme">test</a> (200; 6.259679ms)
  May 14 05:05:15.676: INFO: (11) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 6.76112ms)
  May 14 05:05:15.677: INFO: (11) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname1/proxy/: foo (200; 7.743178ms)
  May 14 05:05:15.677: INFO: (11) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/tlsrewritem... (200; 8.060334ms)
  May 14 05:05:15.677: INFO: (11) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:462/proxy/: tls qux (200; 7.848577ms)
  May 14 05:05:15.677: INFO: (11) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 7.765009ms)
  May 14 05:05:15.677: INFO: (11) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname2/proxy/: bar (200; 7.970011ms)
  May 14 05:05:15.677: INFO: (11) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname1/proxy/: tls baz (200; 7.979712ms)
  May 14 05:05:15.677: INFO: (11) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname1/proxy/: foo (200; 8.060772ms)
  May 14 05:05:15.677: INFO: (11) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname2/proxy/: bar (200; 8.275039ms)
  May 14 05:05:15.678: INFO: (11) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname2/proxy/: tls qux (200; 8.51841ms)
  May 14 05:05:15.679: INFO: (11) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">test<... (200; 10.304795ms)
  May 14 05:05:15.684: INFO: (12) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/rewriteme">test</a> (200; 4.956607ms)
  May 14 05:05:15.685: INFO: (12) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">test<... (200; 5.236179ms)
  May 14 05:05:15.685: INFO: (12) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 5.64202ms)
  May 14 05:05:15.685: INFO: (12) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/tlsrewritem... (200; 5.712133ms)
  May 14 05:05:15.686: INFO: (12) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:462/proxy/: tls qux (200; 6.494187ms)
  May 14 05:05:15.686: INFO: (12) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:460/proxy/: tls baz (200; 6.78632ms)
  May 14 05:05:15.687: INFO: (12) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 6.923182ms)
  May 14 05:05:15.687: INFO: (12) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 7.800657ms)
  May 14 05:05:15.688: INFO: (12) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname1/proxy/: foo (200; 8.951503ms)
  May 14 05:05:15.689: INFO: (12) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname2/proxy/: bar (200; 9.093454ms)
  May 14 05:05:15.689: INFO: (12) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 8.963312ms)
  May 14 05:05:15.689: INFO: (12) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname2/proxy/: tls qux (200; 9.279894ms)
  May 14 05:05:15.689: INFO: (12) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname1/proxy/: tls baz (200; 9.694213ms)
  May 14 05:05:15.689: INFO: (12) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">... (200; 9.790147ms)
  May 14 05:05:15.689: INFO: (12) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname2/proxy/: bar (200; 9.592779ms)
  May 14 05:05:15.690: INFO: (12) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname1/proxy/: foo (200; 10.237486ms)
  May 14 05:05:15.695: INFO: (13) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">... (200; 5.5253ms)
  May 14 05:05:15.696: INFO: (13) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/rewriteme">test</a> (200; 5.841793ms)
  May 14 05:05:15.696: INFO: (13) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 5.96416ms)
  May 14 05:05:15.696: INFO: (13) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 6.040708ms)
  May 14 05:05:15.697: INFO: (13) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 7.328716ms)
  May 14 05:05:15.698: INFO: (13) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">test<... (200; 7.928993ms)
  May 14 05:05:15.698: INFO: (13) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:462/proxy/: tls qux (200; 7.872899ms)
  May 14 05:05:15.698: INFO: (13) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 7.796311ms)
  May 14 05:05:15.701: INFO: (13) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname1/proxy/: foo (200; 11.162101ms)
  May 14 05:05:15.701: INFO: (13) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:460/proxy/: tls baz (200; 11.046043ms)
  May 14 05:05:15.701: INFO: (13) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname1/proxy/: foo (200; 11.296343ms)
  May 14 05:05:15.701: INFO: (13) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname1/proxy/: tls baz (200; 11.19271ms)
  May 14 05:05:15.701: INFO: (13) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname2/proxy/: bar (200; 11.139462ms)
  May 14 05:05:15.701: INFO: (13) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname2/proxy/: bar (200; 11.307838ms)
  May 14 05:05:15.701: INFO: (13) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname2/proxy/: tls qux (200; 11.208023ms)
  May 14 05:05:15.701: INFO: (13) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/tlsrewritem... (200; 11.549377ms)
  May 14 05:05:15.707: INFO: (14) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 5.338285ms)
  May 14 05:05:15.708: INFO: (14) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">test<... (200; 6.153405ms)
  May 14 05:05:15.708: INFO: (14) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/rewriteme">test</a> (200; 6.640375ms)
  May 14 05:05:15.708: INFO: (14) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname2/proxy/: tls qux (200; 7.03497ms)
  May 14 05:05:15.708: INFO: (14) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 6.933599ms)
  May 14 05:05:15.709: INFO: (14) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname1/proxy/: tls baz (200; 7.295578ms)
  May 14 05:05:15.709: INFO: (14) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">... (200; 7.342266ms)
  May 14 05:05:15.710: INFO: (14) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname2/proxy/: bar (200; 8.035957ms)
  May 14 05:05:15.710: INFO: (14) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 8.163902ms)
  May 14 05:05:15.710: INFO: (14) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 8.519168ms)
  May 14 05:05:15.711: INFO: (14) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:460/proxy/: tls baz (200; 9.466727ms)
  May 14 05:05:15.711: INFO: (14) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname1/proxy/: foo (200; 9.857711ms)
  May 14 05:05:15.711: INFO: (14) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/tlsrewritem... (200; 9.833876ms)
  May 14 05:05:15.712: INFO: (14) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname1/proxy/: foo (200; 10.328679ms)
  May 14 05:05:15.712: INFO: (14) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname2/proxy/: bar (200; 10.535844ms)
  May 14 05:05:15.713: INFO: (14) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:462/proxy/: tls qux (200; 11.412099ms)
  May 14 05:05:15.718: INFO: (15) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 5.171872ms)
  May 14 05:05:15.719: INFO: (15) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:462/proxy/: tls qux (200; 5.421731ms)
  May 14 05:05:15.720: INFO: (15) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 7.185881ms)
  May 14 05:05:15.721: INFO: (15) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/rewriteme">test</a> (200; 7.50337ms)
  May 14 05:05:15.721: INFO: (15) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 7.714769ms)
  May 14 05:05:15.721: INFO: (15) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 7.66337ms)
  May 14 05:05:15.721: INFO: (15) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname2/proxy/: bar (200; 8.152029ms)
  May 14 05:05:15.722: INFO: (15) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">... (200; 8.466508ms)
  May 14 05:05:15.722: INFO: (15) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">test<... (200; 8.502783ms)
  May 14 05:05:15.722: INFO: (15) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname2/proxy/: tls qux (200; 8.635493ms)
  May 14 05:05:15.722: INFO: (15) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname1/proxy/: foo (200; 9.067463ms)
  May 14 05:05:15.723: INFO: (15) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/tlsrewritem... (200; 9.269059ms)
  May 14 05:05:15.723: INFO: (15) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname1/proxy/: tls baz (200; 9.496457ms)
  May 14 05:05:15.723: INFO: (15) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:460/proxy/: tls baz (200; 9.446859ms)
  May 14 05:05:15.723: INFO: (15) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname2/proxy/: bar (200; 9.611871ms)
  May 14 05:05:15.723: INFO: (15) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname1/proxy/: foo (200; 9.686173ms)
  May 14 05:05:15.728: INFO: (16) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname2/proxy/: bar (200; 4.855053ms)
  May 14 05:05:15.728: INFO: (16) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">test<... (200; 4.993864ms)
  May 14 05:05:15.729: INFO: (16) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 5.813832ms)
  May 14 05:05:15.729: INFO: (16) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/rewriteme">test</a> (200; 5.881276ms)
  May 14 05:05:15.729: INFO: (16) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/tlsrewritem... (200; 6.063434ms)
  May 14 05:05:15.729: INFO: (16) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:462/proxy/: tls qux (200; 6.149371ms)
  May 14 05:05:15.729: INFO: (16) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">... (200; 6.170746ms)
  May 14 05:05:15.730: INFO: (16) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname1/proxy/: tls baz (200; 6.27468ms)
  May 14 05:05:15.730: INFO: (16) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:460/proxy/: tls baz (200; 6.48676ms)
  May 14 05:05:15.730: INFO: (16) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 7.060329ms)
  May 14 05:05:15.731: INFO: (16) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname1/proxy/: foo (200; 7.354423ms)
  May 14 05:05:15.731: INFO: (16) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname2/proxy/: tls qux (200; 8.422757ms)
  May 14 05:05:15.731: INFO: (16) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 8.087682ms)
  May 14 05:05:15.732: INFO: (16) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname1/proxy/: foo (200; 8.180032ms)
  May 14 05:05:15.732: INFO: (16) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 8.144289ms)
  May 14 05:05:15.732: INFO: (16) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname2/proxy/: bar (200; 8.280437ms)
  May 14 05:05:15.737: INFO: (17) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname2/proxy/: bar (200; 5.230256ms)
  May 14 05:05:15.738: INFO: (17) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">... (200; 6.293564ms)
  May 14 05:05:15.738: INFO: (17) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">test<... (200; 6.344025ms)
  May 14 05:05:15.740: INFO: (17) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/rewriteme">test</a> (200; 7.564857ms)
  May 14 05:05:15.740: INFO: (17) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 7.595489ms)
  May 14 05:05:15.740: INFO: (17) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 7.698885ms)
  May 14 05:05:15.740: INFO: (17) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname2/proxy/: tls qux (200; 8.447407ms)
  May 14 05:05:15.741: INFO: (17) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname1/proxy/: foo (200; 8.777026ms)
  May 14 05:05:15.741: INFO: (17) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/tlsrewritem... (200; 9.305235ms)
  May 14 05:05:15.741: INFO: (17) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 9.40744ms)
  May 14 05:05:15.742: INFO: (17) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname2/proxy/: bar (200; 10.066101ms)
  May 14 05:05:15.742: INFO: (17) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:460/proxy/: tls baz (200; 9.869639ms)
  May 14 05:05:15.742: INFO: (17) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 9.985189ms)
  May 14 05:05:15.742: INFO: (17) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname1/proxy/: foo (200; 10.027914ms)
  May 14 05:05:15.742: INFO: (17) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname1/proxy/: tls baz (200; 10.193707ms)
  May 14 05:05:15.743: INFO: (17) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:462/proxy/: tls qux (200; 11.008257ms)
  May 14 05:05:15.748: INFO: (18) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/rewriteme">test</a> (200; 4.682862ms)
  May 14 05:05:15.748: INFO: (18) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:460/proxy/: tls baz (200; 4.814421ms)
  May 14 05:05:15.749: INFO: (18) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 5.758811ms)
  May 14 05:05:15.749: INFO: (18) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/tlsrewritem... (200; 6.082601ms)
  May 14 05:05:15.750: INFO: (18) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">test<... (200; 6.528202ms)
  May 14 05:05:15.750: INFO: (18) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 7.101104ms)
  May 14 05:05:15.750: INFO: (18) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 7.181757ms)
  May 14 05:05:15.751: INFO: (18) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 7.355508ms)
  May 14 05:05:15.751: INFO: (18) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:462/proxy/: tls qux (200; 7.77339ms)
  May 14 05:05:15.751: INFO: (18) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">... (200; 7.658363ms)
  May 14 05:05:15.751: INFO: (18) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname2/proxy/: tls qux (200; 8.274687ms)
  May 14 05:05:15.752: INFO: (18) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname2/proxy/: bar (200; 8.621251ms)
  May 14 05:05:15.752: INFO: (18) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname1/proxy/: foo (200; 8.6402ms)
  May 14 05:05:15.752: INFO: (18) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname1/proxy/: tls baz (200; 8.879202ms)
  May 14 05:05:15.752: INFO: (18) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname1/proxy/: foo (200; 8.989034ms)
  May 14 05:05:15.753: INFO: (18) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname2/proxy/: bar (200; 10.091424ms)
  May 14 05:05:15.759: INFO: (19) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 5.316531ms)
  May 14 05:05:15.759: INFO: (19) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">... (200; 5.432632ms)
  May 14 05:05:15.759: INFO: (19) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:460/proxy/: tls baz (200; 5.630844ms)
  May 14 05:05:15.759: INFO: (19) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:462/proxy/: tls qux (200; 5.632709ms)
  May 14 05:05:15.759: INFO: (19) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:160/proxy/: foo (200; 5.68753ms)
  May 14 05:05:15.759: INFO: (19) /api/v1/namespaces/proxy-5249/pods/http:proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 5.815692ms)
  May 14 05:05:15.759: INFO: (19) /api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/https:proxy-service-jmqh6-77tg8:443/proxy/tlsrewritem... (200; 5.235278ms)
  May 14 05:05:15.759: INFO: (19) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:162/proxy/: bar (200; 5.778366ms)
  May 14 05:05:15.759: INFO: (19) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8:1080/proxy/rewriteme">test<... (200; 5.733622ms)
  May 14 05:05:15.760: INFO: (19) /api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/: <a href="/api/v1/namespaces/proxy-5249/pods/proxy-service-jmqh6-77tg8/proxy/rewriteme">test</a> (200; 6.729926ms)
  May 14 05:05:15.761: INFO: (19) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname1/proxy/: tls baz (200; 7.530515ms)
  May 14 05:05:15.761: INFO: (19) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname2/proxy/: bar (200; 7.142097ms)
  E0514 05:05:15.761847      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:05:15.762: INFO: (19) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname1/proxy/: foo (200; 7.626905ms)
  May 14 05:05:15.762: INFO: (19) /api/v1/namespaces/proxy-5249/services/https:proxy-service-jmqh6:tlsportname2/proxy/: tls qux (200; 8.212929ms)
  May 14 05:05:15.762: INFO: (19) /api/v1/namespaces/proxy-5249/services/http:proxy-service-jmqh6:portname2/proxy/: bar (200; 8.346296ms)
  May 14 05:05:15.762: INFO: (19) /api/v1/namespaces/proxy-5249/services/proxy-service-jmqh6:portname1/proxy/: foo (200; 8.329359ms)
  May 14 05:05:15.762: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController proxy-service-jmqh6 in namespace proxy-5249, will wait for the garbage collector to delete the pods @ 05/14/24 05:05:15.768
  May 14 05:05:15.843: INFO: Deleting ReplicationController proxy-service-jmqh6 took: 15.627961ms
  May 14 05:05:15.944: INFO: Terminating ReplicationController proxy-service-jmqh6 pods took: 100.32958ms
  E0514 05:05:16.762069      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "proxy-5249" for this suite. @ 05/14/24 05:05:17.745
  E0514 05:05:17.762701      23 retrywatcher.go:129] "Watch failed" err="context canceled"
• [5.455 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 05/14/24 05:05:17.774
  May 14 05:05:17.774: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename deployment @ 05/14/24 05:05:17.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:05:17.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:05:17.805
  May 14 05:05:17.840: INFO: Pod name rollover-pod: Found 0 pods out of 1
  E0514 05:05:18.763669      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:19.764505      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:20.765117      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:21.765376      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:22.765706      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:05:22.859: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/14/24 05:05:22.859
  May 14 05:05:22.859: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0514 05:05:23.765828      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:24.766354      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:05:24.865: INFO: Creating deployment "test-rollover-deployment"
  May 14 05:05:24.897: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  E0514 05:05:25.766717      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:26.767090      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:05:26.907: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  May 14 05:05:26.913: INFO: Ensure that both replica sets have 1 created replica
  May 14 05:05:26.919: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  May 14 05:05:26.931: INFO: Updating deployment test-rollover-deployment
  May 14 05:05:26.931: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0514 05:05:27.767543      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:28.767993      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:05:28.942: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  May 14 05:05:28.948: INFO: Make sure deployment "test-rollover-deployment" is complete
  May 14 05:05:28.954: INFO: all replica sets need to contain the pod-template-hash label
  May 14 05:05:28.954: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 14, 5, 5, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 5, 5, 24, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 14, 5, 5, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 5, 5, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0514 05:05:29.767943      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:30.768013      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:05:30.980: INFO: all replica sets need to contain the pod-template-hash label
  May 14 05:05:30.981: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 14, 5, 5, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 5, 5, 24, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 14, 5, 5, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 5, 5, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0514 05:05:31.768593      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:32.768977      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:05:32.961: INFO: all replica sets need to contain the pod-template-hash label
  May 14 05:05:32.961: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 14, 5, 5, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 5, 5, 24, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 14, 5, 5, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 5, 5, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0514 05:05:33.769203      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:34.769486      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:05:34.963: INFO: all replica sets need to contain the pod-template-hash label
  May 14 05:05:34.963: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 14, 5, 5, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 5, 5, 24, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 14, 5, 5, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 5, 5, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0514 05:05:35.769648      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:36.770078      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:05:36.964: INFO: all replica sets need to contain the pod-template-hash label
  May 14 05:05:36.964: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 14, 5, 5, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 5, 5, 24, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 14, 5, 5, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 5, 5, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0514 05:05:37.770721      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:38.771097      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:05:38.971: INFO: 
  May 14 05:05:38.972: INFO: Ensure that both old replica sets have no replicas
  May 14 05:05:38.982: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5050",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "109a7197-1618-437a-b057-5aeb051e6541",
      ResourceVersion: (string) (len=8) "26348007",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851259924,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851259926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851259938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851259924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851259924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851259938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851259924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5d484bf7f9\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 14 05:05:38.987: INFO: New ReplicaSet "test-rollover-deployment-5d484bf7f9" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5050",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a5f48a3e-c1d9-454c-b748-4cee0b088fc0",
      ResourceVersion: (string) (len=8) "26347993",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851259926,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "109a7197-1618-437a-b057-5aeb051e6541",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851259927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 30 39 61 37 31  39 37 2d 31 36 31 38 2d  |\"109a7197-1618-|
              00000120  34 33 37 61 2d 62 30 35  37 2d 35 61 65 62 30 35  |437a-b057-5aeb05|
              00000130  31 65 36 35 34 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1e6541\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851259938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 14 05:05:38.987: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  May 14 05:05:38.988: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5050",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7c737d91-e262-40a5-8eff-49b243ef1e67",
      ResourceVersion: (string) (len=8) "26348005",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851259917,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "109a7197-1618-437a-b057-5aeb051e6541",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851259917,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851259938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  31 30 39 61 37 31 39 37  2d 31 36 31 38 2d 34 33  |109a7197-1618-43|
              000000c0  37 61 2d 62 30 35 37 2d  35 61 65 62 30 35 31 65  |7a-b057-5aeb051e|
              000000d0  36 35 34 31 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |6541\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851259938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 14 05:05:38.988: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5050",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d4868762-994e-4e2a-9eaf-cd2b1c54980e",
      ResourceVersion: (string) (len=8) "26347924",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851259924,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "109a7197-1618-437a-b057-5aeb051e6541",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851259926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 30 39 61 37 31  39 37 2d 31 36 31 38 2d  |\"109a7197-1618-|
              00000120  34 33 37 61 2d 62 30 35  37 2d 35 61 65 62 30 35  |437a-b057-5aeb05|
              00000130  31 65 36 35 34 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1e6541\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851259927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 14 05:05:38.992: INFO: Pod "test-rollover-deployment-5d484bf7f9-qxlrn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5d484bf7f9-qxlrn",
      GenerateName: (string) (len=36) "test-rollover-deployment-5d484bf7f9-",
      Namespace: (string) (len=15) "deployment-5050",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4dbfd8f7-da11-4b3c-845a-0ce5a6dbf537",
      ResourceVersion: (string) (len=8) "26347942",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851259927,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
          UID: (types.UID) (len=36) "a5f48a3e-c1d9-454c-b748-4cee0b088fc0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851259927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 35  66 34 38 61 33 65 2d 63  |d\":\"a5f48a3e-c|
              00000090  31 64 39 2d 34 35 34 63  2d 62 37 34 38 2d 34 63  |1d9-454c-b748-4c|
              000000a0  65 65 30 62 30 38 38 66  63 30 5c 22 7d 22 3a 7b  |ee0b088fc0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851259928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 32 32 38 5c 22 7d  |10.233.64.228\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vctnw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vctnw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=19) "viola-paas-worker03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851259927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851259928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851259928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851259927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.241",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.64.228",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.228"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851259927,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851259927,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://c28f9cc2dbaedbb88138c968a1ee6b4d341423a9b3293b20462aaf618d8484fc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 14 05:05:38.994: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5050" for this suite. @ 05/14/24 05:05:39.001
• [21.237 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 05/14/24 05:05:39.011
  May 14 05:05:39.011: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename field-validation @ 05/14/24 05:05:39.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:05:39.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:05:39.045
  May 14 05:05:39.048: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  E0514 05:05:39.771604      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:40.772710      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:41.772887      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:42.773153      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:43.773218      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:44.773891      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:45.774715      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:46.775328      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:05:47.184: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1399" for this suite. @ 05/14/24 05:05:47.2
• [8.197 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]
test/e2e/auth/service_accounts.go:78
  STEP: Creating a kubernetes client @ 05/14/24 05:05:47.21
  May 14 05:05:47.210: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename svcaccounts @ 05/14/24 05:05:47.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:05:47.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:05:47.254
  E0514 05:05:47.775715      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:48.776136      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 05/14/24 05:05:49.307
  May 14 05:05:49.307: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8149 pod-service-account-f0e94d4d-27cd-4a7f-afb1-5c4d4c77e4b3 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 05/14/24 05:05:49.42
  May 14 05:05:49.421: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8149 pod-service-account-f0e94d4d-27cd-4a7f-afb1-5c4d4c77e4b3 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 05/14/24 05:05:49.528
  May 14 05:05:49.528: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8149 pod-service-account-f0e94d4d-27cd-4a7f-afb1-5c4d4c77e4b3 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  May 14 05:05:49.653: INFO: Got root ca configmap in namespace "svcaccounts-8149"
  May 14 05:05:49.656: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8149" for this suite. @ 05/14/24 05:05:49.662
• [2.466 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 05/14/24 05:05:49.676
  May 14 05:05:49.676: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename secrets @ 05/14/24 05:05:49.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:05:49.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:05:49.733
  STEP: Creating secret with name secret-test-4cfb6da2-a0de-4f9e-8e1c-8851e2337589 @ 05/14/24 05:05:49.736
  STEP: Creating a pod to test consume secrets @ 05/14/24 05:05:49.744
  E0514 05:05:49.776893      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:50.777592      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:51.778352      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:52.778513      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:53.779009      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 05:05:53.781
  May 14 05:05:53.784: INFO: Trying to get logs from node viola-paas-worker03 pod pod-secrets-cc0d5baf-6125-48fc-b745-246ee505957c container secret-volume-test: <nil>
  STEP: delete the pod @ 05/14/24 05:05:53.793
  May 14 05:05:53.823: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8202" for this suite. @ 05/14/24 05:05:53.831
• [4.171 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:169
  STEP: Creating a kubernetes client @ 05/14/24 05:05:53.848
  May 14 05:05:53.848: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename discovery @ 05/14/24 05:05:53.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:05:53.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:05:53.883
  STEP: Setting up server cert @ 05/14/24 05:05:53.887
  STEP: Requesting APIResourceList from "/api/v1" @ 05/14/24 05:05:54.141
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 05/14/24 05:05:54.143
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 05/14/24 05:05:54.145
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 05/14/24 05:05:54.146
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 05/14/24 05:05:54.147
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 05/14/24 05:05:54.149
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 05/14/24 05:05:54.149
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 05/14/24 05:05:54.15
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 05/14/24 05:05:54.151
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 05/14/24 05:05:54.152
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 05/14/24 05:05:54.153
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 05/14/24 05:05:54.155
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 05/14/24 05:05:54.156
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 05/14/24 05:05:54.157
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 05/14/24 05:05:54.158
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 05/14/24 05:05:54.159
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 05/14/24 05:05:54.16
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 05/14/24 05:05:54.161
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 05/14/24 05:05:54.162
  May 14 05:05:54.162: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-8473" for this suite. @ 05/14/24 05:05:54.169
• [0.335 seconds]
------------------------------
SS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 05/14/24 05:05:54.183
  May 14 05:05:54.183: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename taint-single-pod @ 05/14/24 05:05:54.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:05:54.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:05:54.22
  May 14 05:05:54.234: INFO: Waiting up to 1m0s for all nodes to be ready
  E0514 05:05:54.779366      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:55.780206      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:56.780741      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:57.781149      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:58.782031      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:05:59.782308      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:00.783364      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:01.783827      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:02.784602      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:03.785203      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:04.785782      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:05.786727      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:06.787648      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:07.787976      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:08.788272      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:09.788845      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:10.789267      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:11.789639      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:12.790553      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:13.790924      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:14.791685      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:15.792690      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:16.793051      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:17.793421      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:18.793486      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:19.793832      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:20.794318      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:21.794946      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:22.795851      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:23.796007      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:24.796166      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:25.796814      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:26.797553      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:27.797897      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:28.798713      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:29.799314      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:30.799318      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:31.799658      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:32.800655      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:33.801095      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:34.801286      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:35.801979      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:36.802327      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:37.802689      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:38.803348      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:39.803711      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:40.803808      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:41.804102      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:42.804316      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:43.804606      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:44.805561      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:45.806562      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:46.806949      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:47.807488      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:48.808471      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:49.808677      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:50.809054      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:51.809394      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:52.810268      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:53.810613      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:06:54.318: INFO: Waiting for terminating namespaces to be deleted...
  May 14 05:06:54.322: INFO: Starting informer...
  STEP: Starting pod... @ 05/14/24 05:06:54.322
  May 14 05:06:54.543: INFO: Pod is running on viola-paas-worker03. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/14/24 05:06:54.543
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/14/24 05:06:54.567
  STEP: Waiting short time to make sure Pod is queued for deletion @ 05/14/24 05:06:54.571
  May 14 05:06:54.571: INFO: Pod wasn't evicted. Proceeding
  May 14 05:06:54.571: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/14/24 05:06:54.596
  STEP: Waiting some time to make sure that toleration time passed. @ 05/14/24 05:06:54.615
  E0514 05:06:54.810834      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:55.811747      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:56.812435      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:57.812669      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:58.812685      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:06:59.812793      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:00.813123      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:01.813924      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:02.814111      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:03.814564      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:04.815679      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:05.815728      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:06.816177      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:07.816479      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:08.817133      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:09.817556      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:10.818101      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:11.818578      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:12.819109      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:13.819492      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:14.819832      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:15.820485      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:16.821360      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:17.821875      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:18.822308      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:19.822713      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:20.823341      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:21.823644      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:22.824244      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:23.824784      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:24.825186      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:25.826545      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:26.827303      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:27.827707      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:28.828298      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:29.828738      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:30.828941      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:31.829268      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:32.829619      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:33.829986      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:34.830382      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:35.831290      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:36.831804      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:37.832120      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:38.832451      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:39.833013      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:40.833540      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:41.833854      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:42.834259      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:43.834621      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:44.834945      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:45.835932      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:46.836331      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:47.836680      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:48.836985      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:49.837388      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:50.838143      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:51.838574      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:52.838931      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:53.839234      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:54.839849      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:55.841289      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:56.841898      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:57.842417      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:58.842820      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:07:59.843412      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:00.844147      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:01.844405      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:02.844865      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:03.845088      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:04.845273      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:05.846309      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:06.846554      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:07.846926      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:08.847475      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:08:09.616: INFO: Pod wasn't evicted. Test successful
  May 14 05:08:09.617: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-2233" for this suite. @ 05/14/24 05:08:09.629
• [135.488 seconds]
------------------------------
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:152
  STEP: Creating a kubernetes client @ 05/14/24 05:08:09.672
  May 14 05:08:09.672: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/14/24 05:08:09.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:08:09.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:08:09.737
  STEP: create the container to handle the HTTPGet hook request. @ 05/14/24 05:08:09.747
  E0514 05:08:09.848292      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:10.848891      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:11.849426      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:12.849902      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 05/14/24 05:08:13.844
  E0514 05:08:13.850558      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:14.851422      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:15.852358      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 05/14/24 05:08:15.87
  E0514 05:08:16.852580      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:17.853043      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 05/14/24 05:08:17.904
  May 14 05:08:17.926: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6199" for this suite. @ 05/14/24 05:08:17.935
• [8.276 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 05/14/24 05:08:17.949
  May 14 05:08:17.949: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename var-expansion @ 05/14/24 05:08:17.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:08:18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:08:18.003
  STEP: Creating a pod to test substitution in container's command @ 05/14/24 05:08:18.005
  E0514 05:08:18.853361      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:19.853804      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:20.853854      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:21.854298      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 05:08:22.077
  May 14 05:08:22.081: INFO: Trying to get logs from node viola-paas-worker03 pod var-expansion-2182e7eb-320f-4ef1-9368-631a0905c626 container dapi-container: <nil>
  STEP: delete the pod @ 05/14/24 05:08:22.088
  May 14 05:08:22.143: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8014" for this suite. @ 05/14/24 05:08:22.149
• [4.230 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
test/e2e/apimachinery/garbage_collector.go:713
  STEP: Creating a kubernetes client @ 05/14/24 05:08:22.179
  May 14 05:08:22.179: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename gc @ 05/14/24 05:08:22.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:08:22.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:08:22.233
  STEP: create the rc1 @ 05/14/24 05:08:22.242
  STEP: create the rc2 @ 05/14/24 05:08:22.265
  E0514 05:08:22.854493      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:23.854558      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:24.855941      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:25.855844      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 05/14/24 05:08:26.342
  E0514 05:08:26.856696      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:27.857572      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 05/14/24 05:08:28.604
  STEP: wait for the rc to be deleted @ 05/14/24 05:08:28.657
  E0514 05:08:28.857772      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:29.858141      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:30.858335      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:31.858469      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:32.858709      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:08:33.675: INFO: 87 pods remaining
  May 14 05:08:33.675: INFO: 70 pods has nil DeletionTimestamp
  May 14 05:08:33.675: INFO: 
  E0514 05:08:33.859528      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:34.860237      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:35.861072      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:36.861518      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:37.861803      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:08:38.671: INFO: 70 pods remaining
  May 14 05:08:38.671: INFO: 50 pods has nil DeletionTimestamp
  May 14 05:08:38.671: INFO: 
  E0514 05:08:38.862599      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:39.862976      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:40.863658      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:41.863971      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:42.864263      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/14/24 05:08:43.671
  May 14 05:08:43.768: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May 14 05:08:43.768: INFO: Deleting pod "simpletest-rc-to-be-deleted-29r28" in namespace "gc-5918"
  E0514 05:08:43.864950      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:08:43.874: INFO: Deleting pod "simpletest-rc-to-be-deleted-2d892" in namespace "gc-5918"
  May 14 05:08:43.913: INFO: Deleting pod "simpletest-rc-to-be-deleted-454hq" in namespace "gc-5918"
  May 14 05:08:43.948: INFO: Deleting pod "simpletest-rc-to-be-deleted-4h2z9" in namespace "gc-5918"
  May 14 05:08:44.039: INFO: Deleting pod "simpletest-rc-to-be-deleted-4wvf8" in namespace "gc-5918"
  May 14 05:08:44.073: INFO: Deleting pod "simpletest-rc-to-be-deleted-5kjhd" in namespace "gc-5918"
  May 14 05:08:44.102: INFO: Deleting pod "simpletest-rc-to-be-deleted-5tqvc" in namespace "gc-5918"
  May 14 05:08:44.167: INFO: Deleting pod "simpletest-rc-to-be-deleted-6766w" in namespace "gc-5918"
  May 14 05:08:44.207: INFO: Deleting pod "simpletest-rc-to-be-deleted-6t2t5" in namespace "gc-5918"
  May 14 05:08:44.268: INFO: Deleting pod "simpletest-rc-to-be-deleted-6zhcn" in namespace "gc-5918"
  May 14 05:08:44.305: INFO: Deleting pod "simpletest-rc-to-be-deleted-77jbm" in namespace "gc-5918"
  May 14 05:08:44.379: INFO: Deleting pod "simpletest-rc-to-be-deleted-7jgr9" in namespace "gc-5918"
  May 14 05:08:44.422: INFO: Deleting pod "simpletest-rc-to-be-deleted-7pr9p" in namespace "gc-5918"
  May 14 05:08:44.488: INFO: Deleting pod "simpletest-rc-to-be-deleted-7vgkr" in namespace "gc-5918"
  May 14 05:08:44.565: INFO: Deleting pod "simpletest-rc-to-be-deleted-8f5cn" in namespace "gc-5918"
  May 14 05:08:44.645: INFO: Deleting pod "simpletest-rc-to-be-deleted-8ln57" in namespace "gc-5918"
  May 14 05:08:44.744: INFO: Deleting pod "simpletest-rc-to-be-deleted-8m72s" in namespace "gc-5918"
  May 14 05:08:44.824: INFO: Deleting pod "simpletest-rc-to-be-deleted-8vqk9" in namespace "gc-5918"
  May 14 05:08:44.859: INFO: Deleting pod "simpletest-rc-to-be-deleted-9cchb" in namespace "gc-5918"
  E0514 05:08:44.865593      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:08:44.932: INFO: Deleting pod "simpletest-rc-to-be-deleted-9hhpp" in namespace "gc-5918"
  May 14 05:08:44.987: INFO: Deleting pod "simpletest-rc-to-be-deleted-9lvgl" in namespace "gc-5918"
  May 14 05:08:45.033: INFO: Deleting pod "simpletest-rc-to-be-deleted-9qc9c" in namespace "gc-5918"
  May 14 05:08:45.101: INFO: Deleting pod "simpletest-rc-to-be-deleted-9xmlw" in namespace "gc-5918"
  May 14 05:08:45.233: INFO: Deleting pod "simpletest-rc-to-be-deleted-bfchh" in namespace "gc-5918"
  May 14 05:08:45.368: INFO: Deleting pod "simpletest-rc-to-be-deleted-bgmkm" in namespace "gc-5918"
  May 14 05:08:45.429: INFO: Deleting pod "simpletest-rc-to-be-deleted-brgtv" in namespace "gc-5918"
  May 14 05:08:45.529: INFO: Deleting pod "simpletest-rc-to-be-deleted-btvc4" in namespace "gc-5918"
  May 14 05:08:45.612: INFO: Deleting pod "simpletest-rc-to-be-deleted-c8vkh" in namespace "gc-5918"
  May 14 05:08:45.690: INFO: Deleting pod "simpletest-rc-to-be-deleted-cbkxj" in namespace "gc-5918"
  May 14 05:08:45.739: INFO: Deleting pod "simpletest-rc-to-be-deleted-cll9x" in namespace "gc-5918"
  May 14 05:08:45.788: INFO: Deleting pod "simpletest-rc-to-be-deleted-cnsds" in namespace "gc-5918"
  May 14 05:08:45.828: INFO: Deleting pod "simpletest-rc-to-be-deleted-cq2vz" in namespace "gc-5918"
  E0514 05:08:45.866361      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:08:45.896: INFO: Deleting pod "simpletest-rc-to-be-deleted-d2fz6" in namespace "gc-5918"
  May 14 05:08:45.952: INFO: Deleting pod "simpletest-rc-to-be-deleted-djj68" in namespace "gc-5918"
  May 14 05:08:46.017: INFO: Deleting pod "simpletest-rc-to-be-deleted-dkvzq" in namespace "gc-5918"
  May 14 05:08:46.078: INFO: Deleting pod "simpletest-rc-to-be-deleted-ftdch" in namespace "gc-5918"
  May 14 05:08:46.121: INFO: Deleting pod "simpletest-rc-to-be-deleted-fxjgq" in namespace "gc-5918"
  May 14 05:08:46.182: INFO: Deleting pod "simpletest-rc-to-be-deleted-gp7m8" in namespace "gc-5918"
  May 14 05:08:46.269: INFO: Deleting pod "simpletest-rc-to-be-deleted-gxl5l" in namespace "gc-5918"
  May 14 05:08:46.310: INFO: Deleting pod "simpletest-rc-to-be-deleted-h7wzj" in namespace "gc-5918"
  May 14 05:08:46.396: INFO: Deleting pod "simpletest-rc-to-be-deleted-hh7bg" in namespace "gc-5918"
  May 14 05:08:46.458: INFO: Deleting pod "simpletest-rc-to-be-deleted-hmkcc" in namespace "gc-5918"
  May 14 05:08:46.538: INFO: Deleting pod "simpletest-rc-to-be-deleted-hqjfb" in namespace "gc-5918"
  May 14 05:08:46.624: INFO: Deleting pod "simpletest-rc-to-be-deleted-htz84" in namespace "gc-5918"
  May 14 05:08:46.686: INFO: Deleting pod "simpletest-rc-to-be-deleted-hvcq8" in namespace "gc-5918"
  May 14 05:08:46.745: INFO: Deleting pod "simpletest-rc-to-be-deleted-j7wpn" in namespace "gc-5918"
  May 14 05:08:46.792: INFO: Deleting pod "simpletest-rc-to-be-deleted-jmmjr" in namespace "gc-5918"
  May 14 05:08:46.830: INFO: Deleting pod "simpletest-rc-to-be-deleted-jn5ts" in namespace "gc-5918"
  E0514 05:08:46.867257      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:08:46.900: INFO: Deleting pod "simpletest-rc-to-be-deleted-jq9ct" in namespace "gc-5918"
  May 14 05:08:46.978: INFO: Deleting pod "simpletest-rc-to-be-deleted-klgkz" in namespace "gc-5918"
  May 14 05:08:47.085: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5918" for this suite. @ 05/14/24 05:08:47.091
• [24.950 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:176
  STEP: Creating a kubernetes client @ 05/14/24 05:08:47.131
  May 14 05:08:47.131: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename crd-webhook @ 05/14/24 05:08:47.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:08:47.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:08:47.162
  STEP: Setting up server cert @ 05/14/24 05:08:47.166
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/14/24 05:08:47.392
  STEP: Deploying the custom resource conversion webhook pod @ 05/14/24 05:08:47.413
  STEP: Wait for the deployment to be ready @ 05/14/24 05:08:47.461
  May 14 05:08:47.519: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0514 05:08:47.867550      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:48.868108      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/14/24 05:08:49.53
  STEP: Verifying the service has paired with the endpoint @ 05/14/24 05:08:49.582
  E0514 05:08:49.868662      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:08:50.582: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  May 14 05:08:50.591: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  E0514 05:08:50.869304      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:51.869400      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:52.870340      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:53.870498      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:54.871616      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:55.872626      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:56.872968      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:08:57.873617      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 05/14/24 05:08:58.5
  STEP: Create a v2 custom resource @ 05/14/24 05:08:58.592
  STEP: List CRs in v1 @ 05/14/24 05:08:58.691
  STEP: List CRs in v2 @ 05/14/24 05:08:58.697
  May 14 05:08:58.707: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0514 05:08:58.873761      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "crd-webhook-7097" for this suite. @ 05/14/24 05:08:59.421
• [12.339 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 05/14/24 05:08:59.472
  May 14 05:08:59.472: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename dns @ 05/14/24 05:08:59.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:08:59.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:08:59.538
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-408.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-408.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 05/14/24 05:08:59.541
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-408.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-408.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 05/14/24 05:08:59.541
  STEP: creating a pod to probe /etc/hosts @ 05/14/24 05:08:59.541
  STEP: submitting the pod to kubernetes @ 05/14/24 05:08:59.541
  E0514 05:08:59.874857      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:00.875436      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/14/24 05:09:01.633
  STEP: looking for the results for each expected name from probers @ 05/14/24 05:09:01.665
  May 14 05:09:01.745: INFO: DNS probes using dns-408/dns-test-5fb124dc-132f-4ba5-8c34-f2cc71a42a25 succeeded

  May 14 05:09:01.745: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/14/24 05:09:01.756
  STEP: Destroying namespace "dns-408" for this suite. @ 05/14/24 05:09:01.819
• [2.382 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:147
  STEP: Creating a kubernetes client @ 05/14/24 05:09:01.855
  May 14 05:09:01.855: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename emptydir @ 05/14/24 05:09:01.856
  E0514 05:09:01.876092      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:09:01.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:09:01.938
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/14/24 05:09:01.941
  E0514 05:09:02.876854      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:03.878071      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:04.878713      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:05.879563      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 05:09:06.038
  May 14 05:09:06.041: INFO: Trying to get logs from node viola-paas-worker03 pod pod-d090f4f0-3401-4b43-aa91-3b7ba0c4a3fe container test-container: <nil>
  STEP: delete the pod @ 05/14/24 05:09:06.048
  May 14 05:09:06.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7397" for this suite. @ 05/14/24 05:09:06.079
• [4.230 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 05/14/24 05:09:06.085
  May 14 05:09:06.085: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename downward-api @ 05/14/24 05:09:06.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:09:06.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:09:06.111
  STEP: Creating a pod to test downward API volume plugin @ 05/14/24 05:09:06.116
  E0514 05:09:06.880354      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:07.880899      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:08.881029      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:09.881378      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 05:09:10.153
  May 14 05:09:10.156: INFO: Trying to get logs from node viola-paas-worker03 pod downwardapi-volume-54d78470-4dc9-4c0d-bbbf-2860ca35fb99 container client-container: <nil>
  STEP: delete the pod @ 05/14/24 05:09:10.163
  May 14 05:09:10.196: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-767" for this suite. @ 05/14/24 05:09:10.201
• [4.122 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance]
test/e2e/scheduling/limit_range.go:239
  STEP: Creating a kubernetes client @ 05/14/24 05:09:10.208
  May 14 05:09:10.208: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename limitrange @ 05/14/24 05:09:10.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:09:10.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:09:10.261
  STEP: Creating LimitRange "e2e-limitrange-9tx2h" in namespace "limitrange-1435" @ 05/14/24 05:09:10.264
  STEP: Creating another limitRange in another namespace @ 05/14/24 05:09:10.278
  May 14 05:09:10.319: INFO: Namespace "e2e-limitrange-9tx2h-4214" created
  May 14 05:09:10.319: INFO: Creating LimitRange "e2e-limitrange-9tx2h" in namespace "e2e-limitrange-9tx2h-4214"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-9tx2h" @ 05/14/24 05:09:10.332
  May 14 05:09:10.336: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-9tx2h" in "limitrange-1435" namespace @ 05/14/24 05:09:10.336
  May 14 05:09:10.347: INFO: LimitRange "e2e-limitrange-9tx2h" has been patched
  STEP: Delete LimitRange "e2e-limitrange-9tx2h" by Collection with labelSelector: "e2e-limitrange-9tx2h=patched" @ 05/14/24 05:09:10.347
  STEP: Confirm that the limitRange "e2e-limitrange-9tx2h" has been deleted @ 05/14/24 05:09:10.374
  May 14 05:09:10.374: INFO: Requesting list of LimitRange to confirm quantity
  May 14 05:09:10.380: INFO: Found 0 LimitRange with label "e2e-limitrange-9tx2h=patched"
  May 14 05:09:10.380: INFO: LimitRange "e2e-limitrange-9tx2h" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-9tx2h" @ 05/14/24 05:09:10.38
  May 14 05:09:10.382: INFO: Found 1 limitRange
  May 14 05:09:10.382: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-1435" for this suite. @ 05/14/24 05:09:10.388
  STEP: Destroying namespace "e2e-limitrange-9tx2h-4214" for this suite. @ 05/14/24 05:09:10.398
• [0.202 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 05/14/24 05:09:10.412
  May 14 05:09:10.412: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename daemonsets @ 05/14/24 05:09:10.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:09:10.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:09:10.454
  STEP: Creating a simple DaemonSet "daemon-set" @ 05/14/24 05:09:10.509
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/14/24 05:09:10.529
  May 14 05:09:10.565: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 05:09:10.566: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 05:09:10.566: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 05:09:10.629: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 14 05:09:10.629: INFO: Node viola-paas-ingress01 is running 0 daemon pod, expected 1
  E0514 05:09:10.882525      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:09:11.670: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 05:09:11.670: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 05:09:11.670: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 05:09:11.673: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 14 05:09:11.673: INFO: Node viola-paas-ingress01 is running 0 daemon pod, expected 1
  E0514 05:09:11.882587      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:09:12.643: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 05:09:12.643: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 05:09:12.643: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 05:09:12.655: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  May 14 05:09:12.655: INFO: Node viola-paas-ingress02 is running 0 daemon pod, expected 1
  E0514 05:09:12.883522      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:09:13.637: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 05:09:13.637: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 05:09:13.638: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 05:09:13.642: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
  May 14 05:09:13.642: INFO: Number of running nodes: 5, number of available pods: 5 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 05/14/24 05:09:13.644
  May 14 05:09:13.673: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 05:09:13.674: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 05:09:13.674: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 05:09:13.694: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  May 14 05:09:13.695: INFO: Node viola-paas-ingress02 is running 0 daemon pod, expected 1
  E0514 05:09:13.884287      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:09:14.704: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 05:09:14.704: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 05:09:14.704: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 05:09:14.708: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  May 14 05:09:14.708: INFO: Node viola-paas-ingress02 is running 0 daemon pod, expected 1
  E0514 05:09:14.884633      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:09:15.704: INFO: DaemonSet pods can't tolerate node viola-paas-master01 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 05:09:15.704: INFO: DaemonSet pods can't tolerate node viola-paas-master02 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 05:09:15.704: INFO: DaemonSet pods can't tolerate node viola-paas-master03 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 14 05:09:15.708: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
  May 14 05:09:15.708: INFO: Number of running nodes: 5, number of available pods: 5 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 05/14/24 05:09:15.708
  STEP: Deleting DaemonSet "daemon-set" @ 05/14/24 05:09:15.716
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6959, will wait for the garbage collector to delete the pods @ 05/14/24 05:09:15.716
  May 14 05:09:15.779: INFO: Deleting DaemonSet.extensions daemon-set took: 9.300621ms
  May 14 05:09:15.880: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.85395ms
  E0514 05:09:15.885099      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:16.885987      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:09:16.985: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 14 05:09:16.985: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May 14 05:09:16.989: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26351891"},"items":null}

  May 14 05:09:16.992: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26351891"},"items":null}

  May 14 05:09:17.016: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6959" for this suite. @ 05/14/24 05:09:17.021
• [6.621 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:252
  STEP: Creating a kubernetes client @ 05/14/24 05:09:17.032
  May 14 05:09:17.032: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename namespaces @ 05/14/24 05:09:17.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:09:17.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:09:17.062
  STEP: Creating a test namespace @ 05/14/24 05:09:17.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:09:17.091
  STEP: Creating a service in the namespace @ 05/14/24 05:09:17.093
  STEP: Deleting the namespace @ 05/14/24 05:09:17.126
  STEP: Waiting for the namespace to be removed. @ 05/14/24 05:09:17.153
  E0514 05:09:17.886561      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:18.886768      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:19.887356      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:20.888086      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:21.888296      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:22.888929      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 05/14/24 05:09:23.158
  STEP: Verifying there is no service in the namespace @ 05/14/24 05:09:23.19
  May 14 05:09:23.193: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4767" for this suite. @ 05/14/24 05:09:23.199
  STEP: Destroying namespace "nsdeletetest-2239" for this suite. @ 05/14/24 05:09:23.208
  May 14 05:09:23.220: INFO: Namespace nsdeletetest-2239 was already deleted
  STEP: Destroying namespace "nsdeletetest-3544" for this suite. @ 05/14/24 05:09:23.22
• [6.201 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 05/14/24 05:09:23.235
  May 14 05:09:23.235: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/14/24 05:09:23.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:09:23.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:09:23.274
  STEP: creating @ 05/14/24 05:09:23.276
  STEP: getting @ 05/14/24 05:09:23.313
  STEP: listing in namespace @ 05/14/24 05:09:23.323
  STEP: patching @ 05/14/24 05:09:23.333
  STEP: deleting @ 05/14/24 05:09:23.35
  May 14 05:09:23.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-9412" for this suite. @ 05/14/24 05:09:23.37
• [0.160 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]
test/e2e/apps/replica_set.go:143
  STEP: Creating a kubernetes client @ 05/14/24 05:09:23.395
  May 14 05:09:23.395: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename replicaset @ 05/14/24 05:09:23.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:09:23.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:09:23.424
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 05/14/24 05:09:23.426
  May 14 05:09:23.435: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0514 05:09:23.889788      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:24.890172      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:25.891115      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:26.891384      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:27.891557      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:09:28.441: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/14/24 05:09:28.441
  STEP: getting scale subresource @ 05/14/24 05:09:28.442
  STEP: updating a scale subresource @ 05/14/24 05:09:28.444
  STEP: verifying the replicaset Spec.Replicas was modified @ 05/14/24 05:09:28.455
  STEP: Patch a scale subresource @ 05/14/24 05:09:28.457
  May 14 05:09:28.500: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5364" for this suite. @ 05/14/24 05:09:28.522
• [5.136 seconds]
------------------------------
S
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 05/14/24 05:09:28.531
  May 14 05:09:28.531: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename init-container @ 05/14/24 05:09:28.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:09:28.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:09:28.578
  STEP: creating the pod @ 05/14/24 05:09:28.584
  May 14 05:09:28.585: INFO: PodSpec: initContainers in spec.initContainers
  E0514 05:09:28.892528      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:29.893366      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:30.893754      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:31.894412      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:09:32.713: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4258" for this suite. @ 05/14/24 05:09:32.723
• [4.205 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]
test/e2e/apps/replica_set.go:176
  STEP: Creating a kubernetes client @ 05/14/24 05:09:32.737
  May 14 05:09:32.737: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename replicaset @ 05/14/24 05:09:32.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:09:32.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:09:32.782
  STEP: Create a Replicaset @ 05/14/24 05:09:32.803
  STEP: Verify that the required pods have come up. @ 05/14/24 05:09:32.831
  May 14 05:09:32.838: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0514 05:09:32.894895      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:33.895841      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:34.896285      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:35.896383      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:36.896548      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:09:37.842: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/14/24 05:09:37.842
  STEP: Getting /status @ 05/14/24 05:09:37.843
  May 14 05:09:37.846: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 05/14/24 05:09:37.846
  May 14 05:09:37.863: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 05/14/24 05:09:37.863
  May 14 05:09:37.865: INFO: Observed &ReplicaSet event: ADDED
  May 14 05:09:37.865: INFO: Observed &ReplicaSet event: MODIFIED
  May 14 05:09:37.865: INFO: Observed &ReplicaSet event: MODIFIED
  May 14 05:09:37.866: INFO: Observed &ReplicaSet event: MODIFIED
  May 14 05:09:37.866: INFO: Found replicaset test-rs in namespace replicaset-7186 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  May 14 05:09:37.866: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 05/14/24 05:09:37.866
  May 14 05:09:37.866: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  May 14 05:09:37.884: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 05/14/24 05:09:37.884
  May 14 05:09:37.886: INFO: Observed &ReplicaSet event: ADDED
  May 14 05:09:37.886: INFO: Observed &ReplicaSet event: MODIFIED
  May 14 05:09:37.886: INFO: Observed &ReplicaSet event: MODIFIED
  May 14 05:09:37.886: INFO: Observed &ReplicaSet event: MODIFIED
  May 14 05:09:37.886: INFO: Observed replicaset test-rs in namespace replicaset-7186 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May 14 05:09:37.886: INFO: Observed &ReplicaSet event: MODIFIED
  May 14 05:09:37.886: INFO: Found replicaset test-rs in namespace replicaset-7186 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  May 14 05:09:37.886: INFO: Replicaset test-rs has a patched status
  May 14 05:09:37.886: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7186" for this suite. @ 05/14/24 05:09:37.892
  E0514 05:09:37.896834      23 retrywatcher.go:129] "Watch failed" err="context canceled"
• [5.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 05/14/24 05:09:37.917
  May 14 05:09:37.917: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/14/24 05:09:37.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:09:37.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:09:37.963
  E0514 05:09:38.897784      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:39.898098      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:09:40.041: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Cleaning up the secret @ 05/14/24 05:09:40.047
  STEP: Cleaning up the configmap @ 05/14/24 05:09:40.056
  STEP: Cleaning up the pod @ 05/14/24 05:09:40.064
  STEP: Destroying namespace "emptydir-wrapper-7155" for this suite. @ 05/14/24 05:09:40.097
• [2.201 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
test/e2e/apimachinery/garbage_collector.go:538
  STEP: Creating a kubernetes client @ 05/14/24 05:09:40.118
  May 14 05:09:40.119: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename gc @ 05/14/24 05:09:40.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:09:40.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:09:40.164
  STEP: create the deployment @ 05/14/24 05:09:40.167
  W0514 05:09:40.194035      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/14/24 05:09:40.194
  STEP: delete the deployment @ 05/14/24 05:09:40.338
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 05/14/24 05:09:40.363
  STEP: Gathering metrics @ 05/14/24 05:09:40.894
  E0514 05:09:40.898866      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:09:40.995: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May 14 05:09:40.995: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6962" for this suite. @ 05/14/24 05:09:41.004
• [0.897 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:609
  STEP: Creating a kubernetes client @ 05/14/24 05:09:41.017
  May 14 05:09:41.017: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename security-context-test @ 05/14/24 05:09:41.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:09:41.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:09:41.074
  E0514 05:09:41.899029      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:42.899458      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:43.900244      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:44.900533      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:09:45.123: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-80" for this suite. @ 05/14/24 05:09:45.131
• [4.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 05/14/24 05:09:45.141
  May 14 05:09:45.141: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename kubelet-test @ 05/14/24 05:09:45.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:09:45.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:09:45.167
  May 14 05:09:45.252: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9304" for this suite. @ 05/14/24 05:09:45.278
• [0.150 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 05/14/24 05:09:45.291
  May 14 05:09:45.291: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename webhook @ 05/14/24 05:09:45.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:09:45.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:09:45.353
  STEP: Setting up server cert @ 05/14/24 05:09:45.399
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/14/24 05:09:45.694
  STEP: Deploying the webhook pod @ 05/14/24 05:09:45.72
  STEP: Wait for the deployment to be ready @ 05/14/24 05:09:45.747
  May 14 05:09:45.759: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0514 05:09:45.901346      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:46.902171      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:09:47.769: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 14, 5, 9, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 5, 9, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 14, 5, 9, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 14, 5, 9, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0514 05:09:47.902221      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:48.903064      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/14/24 05:09:49.775
  STEP: Verifying the service has paired with the endpoint @ 05/14/24 05:09:49.806
  E0514 05:09:49.903537      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:09:50.806: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  May 14 05:09:50.814: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  E0514 05:09:50.903605      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:51.903876      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:52.904914      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:53.905699      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:54.906720      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:55.907499      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9473-crds.webhook.example.com via the AdmissionRegistration API @ 05/14/24 05:09:56.329
  STEP: Creating a custom resource while v1 is storage version @ 05/14/24 05:09:56.357
  E0514 05:09:56.907883      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:09:57.908051      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 05/14/24 05:09:58.412
  STEP: Patching the custom resource while v2 is storage version @ 05/14/24 05:09:58.432
  May 14 05:09:58.486: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0514 05:09:58.908427      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-9765" for this suite. @ 05/14/24 05:09:59.123
  STEP: Destroying namespace "webhook-markers-2268" for this suite. @ 05/14/24 05:09:59.14
• [13.856 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 05/14/24 05:09:59.148
  May 14 05:09:59.148: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename configmap @ 05/14/24 05:09:59.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:09:59.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:09:59.185
  STEP: Creating configMap with name configmap-test-volume-421ce756-1286-4d70-8e7b-a161870820e9 @ 05/14/24 05:09:59.188
  STEP: Creating a pod to test consume configMaps @ 05/14/24 05:09:59.198
  E0514 05:09:59.908753      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:00.909647      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:01.910719      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:02.910992      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 05:10:03.231
  May 14 05:10:03.234: INFO: Trying to get logs from node viola-paas-worker03 pod pod-configmaps-89942a2c-3cbd-455c-a583-63a97a5133e6 container agnhost-container: <nil>
  STEP: delete the pod @ 05/14/24 05:10:03.241
  May 14 05:10:03.279: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4279" for this suite. @ 05/14/24 05:10:03.285
• [4.145 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 05/14/24 05:10:03.293
  May 14 05:10:03.293: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename cronjob @ 05/14/24 05:10:03.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:10:03.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:10:03.339
  STEP: Creating a ForbidConcurrent cronjob @ 05/14/24 05:10:03.341
  STEP: Ensuring a job is scheduled @ 05/14/24 05:10:03.351
  E0514 05:10:03.911940      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:04.912218      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:05.912404      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:06.913310      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:07.913984      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:08.914342      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:09.915102      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:10.915755      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:11.916622      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:12.917124      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:13.917514      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:14.917840      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:15.917948      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:16.918141      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:17.918287      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:18.918845      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:19.918795      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:20.919451      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:21.920509      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:22.921316      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:23.921867      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:24.922194      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:25.923133      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:26.923996      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:27.924472      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:28.924645      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:29.925636      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:30.926122      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:31.926573      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:32.926957      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:33.927916      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:34.928303      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:35.928767      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:36.929149      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:37.929881      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:38.930372      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:39.930883      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:40.931589      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:41.931680      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:42.932225      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:43.932333      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:44.932636      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:45.932953      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:46.933128      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:47.933374      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:48.933758      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:49.934324      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:50.934868      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:51.935039      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:52.935400      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:53.935604      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:54.935933      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:55.936127      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:56.937062      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:57.937427      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:58.937610      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:10:59.937684      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:00.938270      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 05/14/24 05:11:01.359
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/14/24 05:11:01.363
  STEP: Ensuring no more jobs are scheduled @ 05/14/24 05:11:01.366
  E0514 05:11:01.939414      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:02.939429      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:03.940204      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:04.940342      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:05.940617      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:06.940780      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:07.941385      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:08.941781      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:09.942601      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:10.943093      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:11.943679      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:12.944168      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:13.944862      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:14.945181      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:15.945289      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:16.945654      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:17.946778      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:18.947192      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:19.947341      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:20.947510      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:21.947712      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:22.948143      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:23.948379      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:24.948788      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:25.949039      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:26.949322      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:27.949513      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:28.949827      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:29.950731      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:30.951319      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:31.951500      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:32.951908      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:33.952009      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:34.952407      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:35.953408      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:36.953756      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:37.954177      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:38.954595      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:39.954746      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:40.955537      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:41.955804      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:42.955772      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:43.955813      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:44.956323      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:45.957234      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:46.957639      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:47.958642      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:48.959170      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:49.959436      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:50.960045      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:51.960638      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:52.961673      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:53.961763      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:54.962166      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:55.962298      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:56.962683      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:57.963223      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:58.963553      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:11:59.964297      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:00.964474      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:01.964659      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:02.965124      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:03.965272      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:04.965613      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:05.966045      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:06.966284      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:07.967310      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:08.967633      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:09.967847      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:10.968793      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:11.969848      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:12.970219      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:13.970449      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:14.971054      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:15.972122      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:16.972393      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:17.973033      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:18.973561      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:19.974673      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:20.975319      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:21.976422      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:22.976765      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:23.976910      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:24.977310      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:25.977481      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:26.977650      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:27.978421      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:28.978847      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:29.979092      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:30.979807      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:31.979912      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:32.980311      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:33.980469      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:34.981409      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:35.981570      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:36.981942      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:37.982164      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:38.982676      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:39.982786      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:40.983583      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:41.984593      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:42.984953      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:43.985127      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:44.985484      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:45.985600      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:46.986013      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:47.986869      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:48.987288      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:49.987786      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:50.988386      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:51.988557      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:52.988796      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:53.989789      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:54.990089      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:55.990901      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:56.991264      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:57.991465      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:58.991836      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:12:59.992862      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:00.993600      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:01.994656      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:02.994973      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:03.995939      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:04.996378      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:05.996483      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:06.996683      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:07.996768      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:08.997118      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:09.997364      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:10.998097      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:11.999053      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:12.999259      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:13.999684      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:15.000021      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:16.000221      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:17.000564      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:18.001554      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:19.001990      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:20.002604      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:21.006414      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:22.005895      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:23.005370      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:24.006434      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:25.006787      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:26.006958      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:27.007197      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:28.007792      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:29.008223      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:30.008606      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:31.008795      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:32.009425      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:33.009719      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:34.009862      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:35.010296      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:36.010905      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:37.011263      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:38.012325      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:39.012756      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:40.013444      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:41.014104      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:42.014719      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:43.014499      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:44.015552      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:45.015930      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:46.016122      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:47.016402      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:48.016977      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:49.017341      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:50.018454      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:51.018621      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:52.018616      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:53.018983      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:54.019287      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:55.019715      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:56.019990      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:57.020549      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:58.020950      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:13:59.021333      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:00.022295      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:01.022846      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:02.023712      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:03.024064      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:04.025294      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:05.025664      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:06.026015      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:07.026590      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:08.027740      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:09.027788      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:10.028457      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:11.029124      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:12.029624      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:13.030023      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:14.030669      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:15.030839      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:16.030931      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:17.031235      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:18.031674      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:19.031803      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:20.032139      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:21.032678      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:22.032827      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:23.033193      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:24.033349      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:25.033720      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:26.034451      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:27.035284      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:28.035154      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:29.035210      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:30.035429      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:31.035573      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:32.035643      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:33.036010      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:34.036895      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:35.037055      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:36.037271      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:37.037639      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:38.038519      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:39.038877      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:40.039754      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:41.040624      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:42.041635      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:43.041789      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:44.042287      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:45.042534      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:46.042637      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:47.043018      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:48.043191      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:49.043600      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:50.044584      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:51.045156      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:52.046172      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:53.046502      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:54.046767      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:55.047069      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:56.048136      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:57.048443      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:58.049253      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:14:59.049576      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:00.050510      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:01.050581      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:02.051062      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:03.051366      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:04.052289      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:05.052450      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:06.052784      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:07.052866      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:08.053794      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:09.054128      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:10.054302      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:11.054500      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:12.054502      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:13.054640      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:14.054949      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:15.055322      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:16.055410      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:17.055744      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:18.055934      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:19.056297      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:20.057141      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:21.057851      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:22.058012      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:23.058355      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:24.058476      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:25.058801      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:26.059372      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:27.059692      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:28.060296      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:29.060625      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:30.061466      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:31.061989      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:32.062053      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:33.062458      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:34.063150      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:35.063454      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:36.064370      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:37.064769      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:38.065830      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:39.066273      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:40.066515      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:41.067117      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:42.068592      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:43.067587      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:44.068590      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:45.068999      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:46.069019      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:47.069189      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:48.069406      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:49.069624      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:50.070622      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:51.071117      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:52.071233      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:53.071778      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:54.073318      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:55.074226      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:56.074045      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:57.074410      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:58.074653      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:15:59.075840      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:00.076037      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:01.076152      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 05/14/24 05:16:01.375
  May 14 05:16:01.383: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3361" for this suite. @ 05/14/24 05:16:01.392
• [358.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 05/14/24 05:16:01.405
  May 14 05:16:01.405: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename secrets @ 05/14/24 05:16:01.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:16:01.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:16:01.465
  STEP: Creating secret with name secret-test-ebd63d77-9e8c-4b93-917a-24664c350ea6 @ 05/14/24 05:16:01.513
  STEP: Creating a pod to test consume secrets @ 05/14/24 05:16:01.534
  E0514 05:16:02.076461      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:03.077085      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:04.077907      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:05.078221      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 05:16:05.568
  May 14 05:16:05.571: INFO: Trying to get logs from node viola-paas-worker03 pod pod-secrets-f36f0797-c49f-4516-b5d0-4f37051c89b3 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/14/24 05:16:05.579
  May 14 05:16:05.598: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4596" for this suite. @ 05/14/24 05:16:05.605
  STEP: Destroying namespace "secret-namespace-6510" for this suite. @ 05/14/24 05:16:05.611
• [4.213 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]
test/e2e/apps/statefulset.go:331
  STEP: Creating a kubernetes client @ 05/14/24 05:16:05.62
  May 14 05:16:05.620: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename statefulset @ 05/14/24 05:16:05.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:16:05.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:16:05.653
  STEP: Creating service test in namespace statefulset-3385 @ 05/14/24 05:16:05.655
  STEP: Creating a new StatefulSet @ 05/14/24 05:16:05.675
  May 14 05:16:05.684: INFO: Found 0 stateful pods, waiting for 3
  E0514 05:16:06.078487      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:07.078651      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:08.079000      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:09.079354      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:10.079699      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:11.080285      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:12.080654      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:13.080795      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:14.081100      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:15.081510      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:16:15.694: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  May 14 05:16:15.694: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  May 14 05:16:15.694: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/14/24 05:16:15.706
  May 14 05:16:15.732: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 05/14/24 05:16:15.732
  E0514 05:16:16.081663      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:17.081864      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:18.082070      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:19.082198      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:20.082366      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:21.082930      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:22.083244      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:23.083612      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:24.084010      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:25.084050      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 05/14/24 05:16:25.75
  STEP: Performing a canary update @ 05/14/24 05:16:25.75
  May 14 05:16:25.776: INFO: Updating stateful set ss2
  May 14 05:16:25.783: INFO: Waiting for Pod statefulset-3385/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0514 05:16:26.084214      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:27.084914      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:28.085094      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:29.085284      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:30.085609      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:31.086240      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:32.086390      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:33.086516      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:34.086876      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:35.087009      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 05/14/24 05:16:35.793
  May 14 05:16:35.868: INFO: Found 2 stateful pods, waiting for 3
  E0514 05:16:36.087705      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:37.088539      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:38.089018      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:39.089563      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:40.089902      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:41.090487      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:42.091066      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:43.091542      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:44.091890      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:45.092231      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:16:45.880: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  May 14 05:16:45.880: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  May 14 05:16:45.880: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 05/14/24 05:16:45.888
  May 14 05:16:45.913: INFO: Updating stateful set ss2
  May 14 05:16:45.921: INFO: Waiting for Pod statefulset-3385/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0514 05:16:46.093012      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:47.093431      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:48.093888      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:49.094299      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:50.094681      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:51.095311      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:52.095678      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:53.096006      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:54.096252      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:55.096574      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:16:55.962: INFO: Updating stateful set ss2
  May 14 05:16:55.971: INFO: Waiting for StatefulSet statefulset-3385/ss2 to complete update
  May 14 05:16:55.971: INFO: Waiting for Pod statefulset-3385/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0514 05:16:56.097370      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:57.097784      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:58.098094      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:16:59.098511      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:00.099619      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:01.100206      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:02.100526      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:03.100816      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:04.101539      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:05.102007      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:17:05.983: INFO: Deleting all statefulset in ns statefulset-3385
  May 14 05:17:05.986: INFO: Scaling statefulset ss2 to 0
  E0514 05:17:06.102736      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:07.103597      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:08.103980      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:09.104326      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:10.104733      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:11.105248      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:12.105555      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:13.105901      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:14.106195      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:15.106516      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:17:16.015: INFO: Waiting for statefulset status.replicas updated to 0
  May 14 05:17:16.022: INFO: Deleting statefulset ss2
  May 14 05:17:16.039: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3385" for this suite. @ 05/14/24 05:17:16.047
• [70.438 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods  [Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 05/14/24 05:17:16.06
  May 14 05:17:16.060: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename services @ 05/14/24 05:17:16.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:17:16.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:17:16.096
  STEP: creating service multi-endpoint-test in namespace services-238 @ 05/14/24 05:17:16.1
  E0514 05:17:16.106944      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-238 to expose endpoints map[] @ 05/14/24 05:17:16.114
  May 14 05:17:16.118: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0514 05:17:17.107197      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:17:17.128: INFO: successfully validated that service multi-endpoint-test in namespace services-238 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-238 @ 05/14/24 05:17:17.128
  E0514 05:17:18.107570      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:19.108095      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-238 to expose endpoints map[pod1:[100]] @ 05/14/24 05:17:19.155
  May 14 05:17:19.164: INFO: successfully validated that service multi-endpoint-test in namespace services-238 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-238 @ 05/14/24 05:17:19.164
  E0514 05:17:20.109030      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:21.109579      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-238 to expose endpoints map[pod1:[100] pod2:[101]] @ 05/14/24 05:17:21.182
  May 14 05:17:21.193: INFO: successfully validated that service multi-endpoint-test in namespace services-238 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 05/14/24 05:17:21.193
  May 14 05:17:21.193: INFO: Creating new exec pod
  E0514 05:17:22.110130      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:23.110520      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:24.110557      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:17:24.210: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-238 exec execpodc9rld -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  May 14 05:17:24.346: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  May 14 05:17:24.346: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 14 05:17:24.346: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-238 exec execpodc9rld -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.42.182 80'
  May 14 05:17:24.455: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.42.182 80\nConnection to 10.233.42.182 80 port [tcp/http] succeeded!\n"
  May 14 05:17:24.455: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 14 05:17:24.455: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-238 exec execpodc9rld -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  May 14 05:17:24.561: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  May 14 05:17:24.561: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 14 05:17:24.561: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2775004476 --namespace=services-238 exec execpodc9rld -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.42.182 81'
  May 14 05:17:24.672: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.42.182 81\nConnection to 10.233.42.182 81 port [tcp/*] succeeded!\n"
  May 14 05:17:24.672: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-238 @ 05/14/24 05:17:24.672
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-238 to expose endpoints map[pod2:[101]] @ 05/14/24 05:17:24.703
  May 14 05:17:24.725: INFO: successfully validated that service multi-endpoint-test in namespace services-238 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-238 @ 05/14/24 05:17:24.725
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-238 to expose endpoints map[] @ 05/14/24 05:17:24.743
  May 14 05:17:24.767: INFO: successfully validated that service multi-endpoint-test in namespace services-238 exposes endpoints map[]
  May 14 05:17:24.767: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-238" for this suite. @ 05/14/24 05:17:24.802
• [8.753 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 05/14/24 05:17:24.814
  May 14 05:17:24.814: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename cronjob @ 05/14/24 05:17:24.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:17:24.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:17:24.833
  STEP: Creating a ReplaceConcurrent cronjob @ 05/14/24 05:17:24.836
  STEP: Ensuring a job is scheduled @ 05/14/24 05:17:24.846
  E0514 05:17:25.111376      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:26.112271      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:27.112560      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:28.113017      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:29.113961      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:30.114425      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:31.114737      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:32.115225      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:33.115599      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:34.115980      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:35.116386      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:36.117375      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:37.117567      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:38.117971      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:39.118561      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:40.119101      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:41.119214      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:42.119465      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:43.120523      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:44.121041      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:45.121801      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:46.122661      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:47.122778      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:48.122953      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:49.123155      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:50.123493      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:51.124043      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:52.124211      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:53.124783      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:54.125119      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:55.125345      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:56.125517      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:57.126360      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:58.126723      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:17:59.127590      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:00.128006      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 05/14/24 05:18:00.851
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/14/24 05:18:00.856
  STEP: Ensuring the job is replaced with a new one @ 05/14/24 05:18:00.859
  E0514 05:18:01.128724      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:02.129185      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:03.130023      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:04.130326      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:05.131268      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:06.131797      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:07.132282      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:08.132448      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:09.132498      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:10.132836      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:11.133709      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:12.134029      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:13.135300      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:14.135692      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:15.135782      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:16.136172      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:17.137050      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:18.137461      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:19.138389      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:20.138498      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:21.139369      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:22.139828      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:23.139839      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:24.140207      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:25.140353      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:26.141187      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:27.142175      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:28.142311      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:29.142549      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:30.142917      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:31.143678      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:32.144102      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:33.144146      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:34.144535      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:35.145408      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:36.146005      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:37.146765      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:38.147110      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:39.147719      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:40.148053      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:41.148754      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:42.149130      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:43.149780      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:44.149914      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:45.150831      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:46.151312      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:47.152318      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:48.152639      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:49.152850      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:50.153233      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:51.153547      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:52.153735      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:53.154525      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:54.155036      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:55.155611      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:56.156046      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:57.156960      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:58.157151      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:18:59.158052      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:00.158084      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 05/14/24 05:19:00.865
  May 14 05:19:00.872: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1612" for this suite. @ 05/14/24 05:19:00.879
• [96.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/replica_set.go:111
  STEP: Creating a kubernetes client @ 05/14/24 05:19:00.894
  May 14 05:19:00.894: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename replicaset @ 05/14/24 05:19:00.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:19:00.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:19:00.935
  May 14 05:19:00.939: INFO: Creating ReplicaSet my-hostname-basic-9ab21547-8988-4b5c-ab62-e7af10b4ca10
  May 14 05:19:00.964: INFO: Pod name my-hostname-basic-9ab21547-8988-4b5c-ab62-e7af10b4ca10: Found 1 pods out of 1
  May 14 05:19:00.964: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-9ab21547-8988-4b5c-ab62-e7af10b4ca10" is running
  E0514 05:19:01.158452      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:02.158463      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:19:02.983: INFO: Pod "my-hostname-basic-9ab21547-8988-4b5c-ab62-e7af10b4ca10-jswsb" is running (conditions: [])
  May 14 05:19:02.983: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/14/24 05:19:02.983
  May 14 05:19:02.993: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9086" for this suite. @ 05/14/24 05:19:02.999
• [2.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]
test/e2e/common/node/runtimeclass.go:189
  STEP: Creating a kubernetes client @ 05/14/24 05:19:03.024
  May 14 05:19:03.024: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename runtimeclass @ 05/14/24 05:19:03.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:19:03.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:19:03.049
  STEP: getting /apis @ 05/14/24 05:19:03.052
  STEP: getting /apis/node.k8s.io @ 05/14/24 05:19:03.058
  STEP: getting /apis/node.k8s.io/v1 @ 05/14/24 05:19:03.059
  STEP: creating @ 05/14/24 05:19:03.06
  STEP: watching @ 05/14/24 05:19:03.076
  May 14 05:19:03.076: INFO: starting watch
  STEP: getting @ 05/14/24 05:19:03.082
  STEP: listing @ 05/14/24 05:19:03.085
  STEP: patching @ 05/14/24 05:19:03.089
  STEP: updating @ 05/14/24 05:19:03.094
  May 14 05:19:03.102: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 05/14/24 05:19:03.102
  STEP: deleting a collection @ 05/14/24 05:19:03.112
  May 14 05:19:03.133: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-610" for this suite. @ 05/14/24 05:19:03.139
• [0.121 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance]
test/e2e/network/service.go:3142
  STEP: Creating a kubernetes client @ 05/14/24 05:19:03.145
  May 14 05:19:03.145: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename services @ 05/14/24 05:19:03.146
  E0514 05:19:03.158536      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:19:03.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:19:03.167
  STEP: creating an Endpoint @ 05/14/24 05:19:03.175
  STEP: waiting for available Endpoint @ 05/14/24 05:19:03.185
  STEP: listing all Endpoints @ 05/14/24 05:19:03.186
  STEP: updating the Endpoint @ 05/14/24 05:19:03.192
  STEP: fetching the Endpoint @ 05/14/24 05:19:03.207
  STEP: patching the Endpoint @ 05/14/24 05:19:03.21
  STEP: fetching the Endpoint @ 05/14/24 05:19:03.223
  STEP: deleting the Endpoint by Collection @ 05/14/24 05:19:03.225
  STEP: waiting for Endpoint deletion @ 05/14/24 05:19:03.244
  STEP: fetching the Endpoint @ 05/14/24 05:19:03.246
  May 14 05:19:03.248: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8192" for this suite. @ 05/14/24 05:19:03.252
• [0.114 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 05/14/24 05:19:03.26
  May 14 05:19:03.260: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename pods @ 05/14/24 05:19:03.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:19:03.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:19:03.296
  STEP: creating the pod @ 05/14/24 05:19:03.298
  STEP: submitting the pod to kubernetes @ 05/14/24 05:19:03.298
  E0514 05:19:04.159704      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:05.160661      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 05/14/24 05:19:05.319
  STEP: updating the pod @ 05/14/24 05:19:05.325
  May 14 05:19:05.841: INFO: Successfully updated pod "pod-update-ce981558-be50-4bae-af9c-744d3bae581e"
  STEP: verifying the updated pod is in kubernetes @ 05/14/24 05:19:05.846
  May 14 05:19:05.855: INFO: Pod update OK
  May 14 05:19:05.855: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7302" for this suite. @ 05/14/24 05:19:05.864
• [2.615 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/rc.go:69
  STEP: Creating a kubernetes client @ 05/14/24 05:19:05.88
  May 14 05:19:05.880: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename replication-controller @ 05/14/24 05:19:05.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:19:05.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:19:05.909
  STEP: Creating replication controller my-hostname-basic-43ca2f24-dedc-4646-99d2-8b3dc0aae206 @ 05/14/24 05:19:05.912
  May 14 05:19:05.920: INFO: Pod name my-hostname-basic-43ca2f24-dedc-4646-99d2-8b3dc0aae206: Found 0 pods out of 1
  E0514 05:19:06.161235      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:07.161935      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:08.162471      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:09.162536      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:10.163126      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:19:10.927: INFO: Pod name my-hostname-basic-43ca2f24-dedc-4646-99d2-8b3dc0aae206: Found 1 pods out of 1
  May 14 05:19:10.927: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-43ca2f24-dedc-4646-99d2-8b3dc0aae206" are running
  May 14 05:19:11.095: INFO: Pod "my-hostname-basic-43ca2f24-dedc-4646-99d2-8b3dc0aae206-zvps5" is running and ready(conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-14 05:19:05 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-14 05:19:07 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-14 05:19:07 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-14 05:19:05 +0000 UTC Reason: Message:}])
  May 14 05:19:11.095: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/14/24 05:19:11.095
  May 14 05:19:11.106: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8616" for this suite. @ 05/14/24 05:19:11.113
• [5.246 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]
test/e2e/apimachinery/resource_quota.go:451
  STEP: Creating a kubernetes client @ 05/14/24 05:19:11.127
  May 14 05:19:11.128: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename resourcequota @ 05/14/24 05:19:11.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:19:11.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:19:11.15
  STEP: Counting existing ResourceQuota @ 05/14/24 05:19:11.153
  E0514 05:19:11.163122      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:12.163967      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:13.164768      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:14.164788      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:15.165682      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/14/24 05:19:16.157
  E0514 05:19:16.166281      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status is calculated @ 05/14/24 05:19:16.169
  E0514 05:19:17.166706      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:18.167048      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 05/14/24 05:19:18.174
  STEP: Ensuring resource quota status captures replicaset creation @ 05/14/24 05:19:18.194
  E0514 05:19:19.167309      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:20.168355      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 05/14/24 05:19:20.198
  STEP: Ensuring resource quota status released usage @ 05/14/24 05:19:20.206
  E0514 05:19:21.168499      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:22.168998      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:19:22.213: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7919" for this suite. @ 05/14/24 05:19:22.22
• [11.102 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:272
  STEP: Creating a kubernetes client @ 05/14/24 05:19:22.241
  May 14 05:19:22.241: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename namespaces @ 05/14/24 05:19:22.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:19:22.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:19:22.267
  STEP: creating a Namespace @ 05/14/24 05:19:22.27
  STEP: patching the Namespace @ 05/14/24 05:19:22.289
  STEP: get the Namespace and ensuring it has the label @ 05/14/24 05:19:22.312
  May 14 05:19:22.316: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7508" for this suite. @ 05/14/24 05:19:22.321
  STEP: Destroying namespace "nspatchtest-c6839995-aab8-4dbe-a894-18e8af607f53-8502" for this suite. @ 05/14/24 05:19:22.331
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:124
  STEP: Creating a kubernetes client @ 05/14/24 05:19:22.345
  May 14 05:19:22.345: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename pod-network-test @ 05/14/24 05:19:22.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:19:22.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:19:22.367
  STEP: Performing setup for networking test in namespace pod-network-test-9022 @ 05/14/24 05:19:22.37
  STEP: creating a selector @ 05/14/24 05:19:22.37
  STEP: Creating the service pods in kubernetes @ 05/14/24 05:19:22.37
  May 14 05:19:22.370: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0514 05:19:23.169074      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:24.169583      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:25.170025      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:26.170376      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:27.170606      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:28.170946      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:29.171206      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:30.171270      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:31.171813      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:32.172169      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:33.172439      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:34.172879      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:35.173067      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:36.173387      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:37.174512      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:38.174581      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:39.175738      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:40.176540      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:41.176629      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:42.178052      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:43.177554      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:44.178001      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/14/24 05:19:44.553
  E0514 05:19:45.178931      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:46.179275      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:19:46.589: INFO: Setting MaxTries for pod polling to 55 for networking test based on endpoint count 5
  May 14 05:19:46.589: INFO: Going to poll 10.233.67.237 on port 8081 at least 0 times, with a maximum of 55 tries before failing
  May 14 05:19:46.592: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.67.237 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9022 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 05:19:46.592: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 05:19:46.593: INFO: ExecWithOptions: Clientset creation
  May 14 05:19:46.593: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9022/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.67.237+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0514 05:19:47.180124      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:19:47.656: INFO: Found all 1 expected endpoints: [netserver-0]
  May 14 05:19:47.656: INFO: Going to poll 10.233.70.157 on port 8081 at least 0 times, with a maximum of 55 tries before failing
  May 14 05:19:47.661: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.70.157 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9022 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 05:19:47.661: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 05:19:47.662: INFO: ExecWithOptions: Clientset creation
  May 14 05:19:47.662: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9022/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.70.157+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0514 05:19:48.180377      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:19:48.712: INFO: Found all 1 expected endpoints: [netserver-1]
  May 14 05:19:48.712: INFO: Going to poll 10.233.69.100 on port 8081 at least 0 times, with a maximum of 55 tries before failing
  May 14 05:19:48.717: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.69.100 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9022 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 05:19:48.717: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 05:19:48.717: INFO: ExecWithOptions: Clientset creation
  May 14 05:19:48.717: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9022/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.69.100+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0514 05:19:49.181328      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:19:49.762: INFO: Found all 1 expected endpoints: [netserver-2]
  May 14 05:19:49.763: INFO: Going to poll 10.233.71.210 on port 8081 at least 0 times, with a maximum of 55 tries before failing
  May 14 05:19:49.767: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.71.210 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9022 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 05:19:49.767: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 05:19:49.767: INFO: ExecWithOptions: Clientset creation
  May 14 05:19:49.767: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9022/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.71.210+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0514 05:19:50.182363      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:19:50.817: INFO: Found all 1 expected endpoints: [netserver-3]
  May 14 05:19:50.817: INFO: Going to poll 10.233.64.1 on port 8081 at least 0 times, with a maximum of 55 tries before failing
  May 14 05:19:50.821: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.64.1 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9022 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 14 05:19:50.821: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  May 14 05:19:50.822: INFO: ExecWithOptions: Clientset creation
  May 14 05:19:50.822: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9022/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.64.1+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0514 05:19:51.182869      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:19:51.874: INFO: Found all 1 expected endpoints: [netserver-4]
  May 14 05:19:51.874: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9022" for this suite. @ 05/14/24 05:19:51.881
• [29.543 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 05/14/24 05:19:51.889
  May 14 05:19:51.889: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename container-probe @ 05/14/24 05:19:51.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:19:51.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:19:51.921
  STEP: Creating pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084 @ 05/14/24 05:19:51.924
  E0514 05:19:52.183428      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:53.183805      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/14/24 05:19:53.954
  May 14 05:19:53.958: INFO: Initial restart count of pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d is 0
  May 14 05:19:53.961: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:19:54.184610      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:55.185654      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:19:55.966: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:19:56.185959      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:57.186438      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:19:57.971: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:19:58.187269      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:19:59.187590      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:19:59.978: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:20:00.188128      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:20:01.188432      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:20:01.983: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:20:02.188650      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:20:03.189078      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:20:03.990: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:20:04.189448      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:20:05.190418      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:20:05.994: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:20:06.190802      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:20:07.191121      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:20:07.999: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:20:08.191667      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:20:09.192019      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:20:10.005: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:20:10.192729      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:20:11.193089      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:20:12.010: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:20:12.193953      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:20:13.194302      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:20:14.061: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:20:14.194871      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:20:15.195555      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:20:16.067: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:20:16.196216      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:20:17.197041      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:20:18.073: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:20:18.197506      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:20:19.198239      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:20:20.079: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:20:20.199225      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:20:21.199981      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:20:22.085: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:20:22.200153      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:20:23.200500      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:20:24.091: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:20:24.201560      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:20:25.202352      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:20:26.097: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:20:26.202477      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:20:27.202554      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:20:28.102: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:20:28.202867      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:20:29.203338      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:20:30.108: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:20:30.203416      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:20:31.203791      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:20:32.115: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:20:32.204062      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:20:33.204413      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:20:34.123: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:20:34.205178      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:20:35.205855      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:20:36.128: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:20:36.206226      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:20:37.206611      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:20:38.134: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:20:38.207412      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:20:39.207785      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:20:40.140: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:20:40.208124      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:20:41.208425      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:20:42.147: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:20:42.209006      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:20:43.209848      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:20:44.154: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:20:44.210417      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:20:45.211202      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:20:46.160: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:20:46.211706      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:20:47.212063      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:20:48.165: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:20:48.212783      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:20:49.213112      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:20:50.170: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:20:50.214079      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:20:51.214474      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:20:52.176: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:20:52.214503      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:20:53.214878      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:20:54.181: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:20:54.215730      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:20:55.216444      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:20:56.186: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:20:56.217082      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:20:57.217486      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:20:58.192: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:20:58.217855      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:20:59.218179      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:21:00.197: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:21:00.219206      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:21:01.219477      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:21:02.202: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:21:02.220173      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:21:03.220831      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:21:04.210: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:21:04.221437      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:21:05.222199      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:21:06.215: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:21:06.222565      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:21:07.222905      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:21:08.221: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:21:08.223558      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:21:09.223888      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:21:10.224707      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:21:10.227: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:21:11.225483      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:21:12.225736      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:21:12.232: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:21:13.226229      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:21:14.226590      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:21:14.238: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:21:15.227106      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:21:16.227457      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:21:16.244: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:21:17.227803      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:21:18.228197      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:21:18.249: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:21:19.228728      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:21:20.229414      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:21:20.255: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:21:21.229888      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:21:22.230297      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:21:22.261: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:21:23.231104      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:21:24.231441      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:21:24.266: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:21:25.232355      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:21:26.232672      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:21:26.273: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:21:27.233468      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:21:28.233812      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:21:28.277: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:21:29.234410      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:21:30.234997      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:21:30.283: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:21:31.235334      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:21:32.235679      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:21:32.288: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:21:33.235832      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:21:34.235992      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:21:34.295: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:21:35.236082      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:21:36.236460      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:21:36.302: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:21:37.236608      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:21:38.236979      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:21:38.306: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:21:39.237258      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:21:40.237291      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:21:40.311: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:21:41.237441      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:21:42.237606      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:21:42.316: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:21:43.237965      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:21:44.238019      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:21:44.323: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:21:45.238082      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:21:46.238384      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:21:46.329: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:21:47.239447      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:21:48.239656      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:21:48.333: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:21:49.239808      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:21:50.240435      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:21:50.340: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:21:51.241330      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:21:52.241628      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:21:52.345: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:21:53.242087      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:21:54.242408      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:21:54.349: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:21:55.243151      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:21:56.243452      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:21:56.357: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:21:57.244363      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:21:58.244792      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:21:58.362: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:21:59.245575      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:22:00.246212      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:22:00.369: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:22:01.246554      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:22:02.246867      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:22:02.375: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:22:03.247038      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:22:04.247448      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:22:04.382: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:22:05.248472      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:22:06.248766      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:22:06.389: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:22:07.249362      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:22:08.249753      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:22:08.394: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:22:09.249910      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:22:10.250449      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:22:10.400: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:22:11.250568      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:22:12.251509      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:22:12.404: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:22:13.252469      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:22:14.252864      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:22:14.410: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:22:15.253086      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:22:16.253365      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:22:16.415: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:22:17.254324      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:22:18.254608      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:22:18.421: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:22:19.255266      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:22:20.255831      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:22:20.424: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:22:21.256834      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:22:22.257202      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:22:22.429: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:22:23.257675      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:22:24.258005      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:22:24.436: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:22:25.258154      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:22:26.258649      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:22:26.441: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:22:27.259483      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:22:28.259774      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:22:28.446: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:22:29.260453      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:22:30.261017      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:22:30.454: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:22:31.261923      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:22:32.262222      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:22:32.459: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:22:33.262678      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:22:34.262987      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:22:34.466: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:22:35.263131      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:22:36.263593      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:22:36.471: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:22:37.264599      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:22:38.264973      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:22:38.477: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:22:39.265344      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:22:40.265923      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:22:40.483: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:22:41.266260      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:22:42.266470      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:22:42.487: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:22:43.266814      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:22:44.267554      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:22:44.503: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:22:45.267678      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:22:46.268016      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:22:46.510: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:22:47.268243      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:22:48.268656      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:22:48.515: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:22:49.269206      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:22:50.269943      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:22:50.520: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:22:51.270475      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:22:52.271006      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:22:52.526: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:22:53.272106      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:22:54.272461      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:22:54.534: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:22:55.272569      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:22:56.273000      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:22:56.539: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:22:57.273294      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:22:58.273675      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:22:58.548: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:22:59.274130      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:23:00.274821      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:23:00.553: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:23:01.275444      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:23:02.275836      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:23:02.563: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:23:03.276055      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:23:04.276435      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:23:04.569: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:23:05.276507      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:23:06.276899      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:23:06.578: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:23:07.277311      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:23:08.277752      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:23:08.584: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:23:09.277860      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:23:10.278514      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:23:10.590: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:23:11.279108      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:23:12.279802      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:23:12.596: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:23:13.280727      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:23:14.281147      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:23:14.602: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:23:15.282197      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:23:16.282615      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:23:16.607: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:23:17.283215      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:23:18.283600      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:23:18.612: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:23:19.284221      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:23:20.284806      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:23:20.617: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:23:21.285840      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:23:22.286370      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:23:22.624: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:23:23.286533      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:23:24.286962      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:23:24.630: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:23:25.287241      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:23:26.287583      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:23:26.635: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:23:27.288577      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:23:28.288961      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:23:28.641: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:23:29.288918      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:23:30.289523      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:23:30.647: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:23:31.289882      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:23:32.290440      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:23:32.653: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:23:33.290510      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:23:34.290819      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:23:34.660: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:23:35.291811      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:23:36.292137      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:23:36.666: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:23:37.292667      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:23:38.293026      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:23:38.672: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:23:39.293310      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:23:40.293863      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:23:40.677: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:23:41.294334      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:23:42.296141      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:23:42.682: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:23:43.295647      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:23:44.295960      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:23:44.688: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:23:45.296626      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:23:46.297023      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:23:46.692: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:23:47.297683      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:23:48.297990      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:23:48.698: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:23:49.299037      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:23:50.299622      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:23:50.704: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:23:51.300577      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:23:52.300966      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:23:52.711: INFO: Get pod test-grpc-b9e4428a-eb73-4f35-b92b-65685194516d in namespace container-probe-6084
  E0514 05:23:53.301051      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:23:54.301407      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:23:54.712: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/14/24 05:23:54.719
  STEP: Destroying namespace "container-probe-6084" for this suite. @ 05/14/24 05:23:54.751
• [242.869 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:268
  STEP: Creating a kubernetes client @ 05/14/24 05:23:54.76
  May 14 05:23:54.760: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename downward-api @ 05/14/24 05:23:54.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:23:54.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:23:54.788
  STEP: Creating a pod to test downward api env vars @ 05/14/24 05:23:54.79
  E0514 05:23:55.302539      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:23:56.303246      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:23:57.304170      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:23:58.304553      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/14/24 05:23:58.815
  May 14 05:23:58.818: INFO: Trying to get logs from node viola-paas-worker03 pod downward-api-23e72ba2-3a4a-4118-9960-cfbca0462c98 container dapi-container: <nil>
  STEP: delete the pod @ 05/14/24 05:23:58.828
  May 14 05:23:58.861: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-675" for this suite. @ 05/14/24 05:23:58.866
• [4.120 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:347
  STEP: Creating a kubernetes client @ 05/14/24 05:23:58.88
  May 14 05:23:58.880: INFO: >>> kubeConfig: /tmp/kubeconfig-2775004476
  STEP: Building a namespace api object, basename security-context-test @ 05/14/24 05:23:58.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/14/24 05:23:58.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/14/24 05:23:58.909
  E0514 05:23:59.304598      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:24:00.304846      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:24:01.305606      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0514 05:24:02.305984      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 14 05:24:02.937: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9017" for this suite. @ 05/14/24 05:24:02.944
• [4.071 seconds]
------------------------------
S
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  May 14 05:24:02.951: INFO: Running AfterSuite actions on node 1
  May 14 05:24:02.952: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:585
[ReportAfterSuite] PASSED [0.053 seconds]
------------------------------

Ran 380 of 7389 Specs in 6337.634 seconds
SUCCESS! -- 380 Passed | 0 Failed | 0 Pending | 7009 Skipped
PASS

Ginkgo ran 1 suite in 1h45m37.95276295s
Test Suite Passed
